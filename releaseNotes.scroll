title Scroll Release Notes

paragraph
 Here's a list of the notable changes in Scroll.

section 29.0.0 8-28-2022
list
 - ⚠️ BREAKING: if using programatically instead of ScrollPage use ScrollFile

section 28.3.2 8-27-2022
list
 - 🏥 fixed bug with open graph image tags

section 28.3.1 8-27-2022
list
 - 🏥 fixed minor grammar typo and added test

section 28.3.0 8-27-2022
list
 - 🎉 added `author` and `kpiTable` node types

section 28.2.0 8-26-2022
list
 - 🏥 export getFullyExpandedFile

section 28.1.0 8-26-2022
list
 - 🏥 imports can now be recursive

section 28.0.0 8-26-2022
paragraph
 This is a *major* update that radically simplifies Scroll and adds significant new capabilities.

subsection From 3 file types to 1

paragraph
 `scroll.settings` and `*.grammar` files are gone. Everything is now done with `.scroll` files, and
 now every keyword is documented and usable on try.scroll.com and type checked.

subsection Imports and variables

paragraph
 Use `import [filepath]` to import one file into another. Use `replace` and `replaceDefault` for variables.

subsection Add your own Grammar extensions directly in your Scroll files

paragraph
 Define new nodeTypes or create your own aliases on a per file basis. Use the import keyword and build your own collection of common reusable node types for your project(s).

subsection Unlimited Groups and Group Pages

paragraph
 Add files to one or more groups and then customize how each group page prints. No more magic or implicit creation of collection pages.

subsection Multiple Compiler Passes

paragraph
 The new language features (imports, grammar nodes, and variables) required a change from a 1 one stage compilation process to a multi-stage compiler pass pattern. The compilers passes run in this order: imports, grammar extensions, then variables. So variables cannot be used in imports or grammar extensions.

subsection Change list

list
 - ⚠️ BREAKING: The `git` setting is renamed to `viewSourceBaseUrl`
 - ⚠️ BREAKING: The `sourceLink` setting is renamed to `viewSourceUrl`
 - ⚠️ BREAKING: removed `skipIndexPage`. Instead you now opt-in to group pages like this: `groups index.html`
 - ⚠️ BREAKING: removed `scroll.settings` concept. Use `import settings.scroll` now.
 - ⚠️ BREAKING: `footer` is now `scrollFooter` and `header` is now `scrollHeader`
 - ⚠️ BREAKING: removed `ignoreGrammarFiles`. Custom grammar extensions must now be explicitly imported and/or be in `.scroll` files.
 - ⚠️ BREAKING: changed link text from "Article source" to "View source"
 - ⚠️ BREAKING: `css` setting is now `scrollCss`
 - ⚠️ BREAKING: DefaultScrollScriptCompiler is now DefaultScrollCompiler
 - ⚠️ BREAKING: removed buildSinglePages, buildIndexPage, buildSnippetsPage, buildRssFeed, and buildCssFile. Everything done by `buildFiles` now. See 'full.scroll', `index.scroll`, `feed.scroll`, and `style.scroll` in `tests/kitchenSink` for how to implement those in new pattern.
 - ⚠️ BREAKING: in default theme CSS some class names have changed:
      scrollArticleDateComponent => scrollDateComponent
      scrollArticlePageComponent => scrollFilePageComponent
      scrollSingleArticleTitle => scrollFilePageTitle
      scrollIndexPageArticleContainerComponent => scrollGroupPageFileContainerComponent
      scrollArticleSourceLinkComponent => scrollFileViewSourceUrlComponent
      scrollIndexPageComponent => scrollGroupPageComponent
      scrollIndexPageFileContainerComponent => scrollGroupPageFileContainerComponent
 - ⚠️ just calling ScrollScript Scroll again unless it becomes confusing
 - 🎉 keyboardNav will now use the first group a file belongs to if prev and next are not supplied

subsection Updating custom CSS

code
 comment Put this in a file named style.scroll
 permalink style.css
 settings
  noTemplate
 printScrollCSS

section 27.1.1 8-24-2022
list
 - 🏥 only activate keyboard shortcuts if no element has focus

section 27.1.0 8-24-2022
list
 - 🎉 added new cli command: `scroll where`

section 27.0.1 8-23-2022
list
 - 🏥 mutability fix

section 27.0.0 8-23-2022
list
 - 🎉 added `keyboardNav` node
 - ⚠️ BREAKING: all `permalink` lines in `.scroll` files need `.html`. Run `scroll migrate` to find and update automatically.

section 26.1.0 8-23-2022
list
 - 🎉 export SCROLL_CSS for tryscroll app
 - ⚠️ now calling the language ScrollScript instead of Scrolldown

section 26.0.0 8-23-2022
list
 - ⚠️ (potentially) breaking: scrolldown.grammar is no longer built/checked in and SCROLLDOWN_GRAMMAR_FILENAME no longer exported.

section 25.6.0 8-19-2022
list
 - 🎉 simpler API for programmatic usage: `new ScrollPage('title Hello world')`

section 25.5.1 7-22-2022
list
 - 🏥 minor grammar fix

section 25.5.0 7-22-2022
list
 - 🏥 path fixes for Windows thanks to @celtic-coder

section 25.4.0 7-14-2022
list
 - 🎉 50% faster builds

section 25.3.2 7-14-2022
list
 - 🎉 added cacheing for 40% faster builds

section 25.3.1 7-14-2022
list
 - 🏥 fixed links in treeTable

section 25.3.0 7-14-2022
list
 - 🎉 added `treeTable`

belowAsCode
treeTable
 row
  name Javascript
  example
   console.log("Hello world")
 row
  name Python
  example
   # A code block
   print "Hello world"

section 25.2.1 7-01-2022
list
 - 🏥 fixed broken links in feed.xml

section 25.2.0 6-22-2022
list
 - 🎉 added `htmlTitle` and `sourceLink` keywords so an article can override the defaults

section 25.1.0 6-19-2022
list
 - 🎉 if scroll has an rss feed add a <link> tag to built pages

section 25.0.0 6-15-2022
list
 - ⚠️ on single article pages, the header will now span across all columns.

section 24.9.0 6-15-2022
list
 - 🎉 added "css" setting. Set `css split` to write CSS to `scroll.css` instead of inline, or `css none` to not generate CSS.
 - 🏥 removed extra blank lines in snippets.html generation

section 24.8.0 6-15-2022
list
 - 🎉 if "baseUrl" is set building will also generate an RSS "feed.xml"

section 24.7.0 6-13-2022
list
 - 🏥 fix when using Scroll programmatically image sizeOf check will use correct folder
 - 🎉 add param to specify index/snippets page when using programmatically

section 24.6.0 6-10-2022
list
 - 🎉 added `wrap` keyword for advanced custom wraps in aftertext.

aftertext
 Some !simple! and *advanced* usages.
 An #absolute link# and @@@a relative link@@@.
 Show some ++added text++ or some --deleted text--.
 wrap ! em
 wrap * b
 wrap # https://example.com
 wrap @@@ a href="potato.html"
 wrap ++ span style="color:green"
 wrap -- span style="color:red; text-decoration: line-through;"
aboveAsCode

section 24.5.0 6-10-2022
list
 - 🎉 added `wrapsOn` keyword to aftertext.

aftertext
 Support for traditional *bold*, `code`, and _italics_ in aftertext with the keyword `wrapsOn`.
 wrapsOn
aboveAsCode

section 24.4.0 6-08-2022
list
 - 🎉 if your scroll has an article(s) with "endSnippet", scroll will create "snippets.html".

section 24.3.1 5-25-2022
list
 - 🏥 fix bug where images were stuck at 35ch even when the browser sized columns wider

section 24.3.0 2-16-2022
paragraph
 This tiny release adds some ways to include more caveats and context around words and references.
list
 - 🎉 added 'caveat' directive to aftertext for adding caveats around parts of text
 - 🎉 added 'note' directive to aftertext links for providing more context around included links

subsection Caveat Example

aftertext
 This is a great idea.
 caveat great
  I'm not actually sure if this is a great idea. But often I want to include a comment and link it
  back to the text, but don't quite want to footnote it.
aboveAsCode

subsection Link Quote Example

aftertext
 This report showed the treatment had a big impact.
 https://example.com/report This report
  note
   The average growth in the treatment group was 14.2x higher than the control group.
aboveAsCode

section 24.2.0 1-18-2022
list
 - 🎉 added 'id' directive to aftertext for adding ids to paragraphs <p id="foo"></p>
 - 🎉 added 'loremIpsum' nodeType to help in testing and exploring

paragraph
 Example demonstrating the above:

code
 aftertext
  Click here to go to the middle paragraph.
  link #middleParagraph Click here
 
 loremIpsum 20
 
 aftertext
  Here is the middle paragraph.
  id middleParagraph
 
 loremIpsum 20

section 24.1.1 1-13-2022
list
 - 🏥 fix bug where migrator was not replacing 🔗 links in paragraphs when upgrading to aftertext
 - 🏥 fix typo in release notes

section 24.1.0 1-13-2022
list
 - 🎉 added migrate command to automate migrations when there are breaking changes
 - 🎨 added background color and styling to inline code elements in default theme

section 24.0.0 1-11-2022
list
 - 🎉 if a table has a column name ending in "Link", that will be used to link the matching column. See example below.
 - ⚠️ if you have tables with a column ending in "Link" beware the new behavior

belowAsCode
pipeTable
 name|nameLink
 Wikipedia|https://wikipedia.org

list
 - ⚠️ the first paragraph of an article no longer prints a dateline. Use aftertext instead. See example below.

aftertext
 By default the article's date will be used but you can also provide a custom date.

belowAsCode
aftertext
 A truck transporting llamas collided into a pajama factory late last night.
 dateline 2/21/2020

aftertext
 To migrate and keep your existing datelines use the command scroll migrate.
 code scroll migrate

section 23.2.0 12-22-2021
list
 - 🎉 add "matchAll" and "match" support to aftertext for more advanced matching options
 - 🎉 add "class" markup directive to aftertext
 - 🎉 add "css" node for easier insertion of CSS
 - 🏥 fix bug in aftertext when 2 tags started at same index
 - 🏥 make basic dateline work in browser

question Can you show an example of the new advanced aftertext features?

aftertext
 How much wood can a woodchuck chuck if a woodchuck could chuck wood?
 link https://en.wikipedia.org/wiki/Groundhog woodchuck
  matchAll
 class standout wood
  match 0 3
aboveAsCode

css
 .standout {
  background-color: yellow;
  border: 1px dashed red;
  padding: 5px;
 }
aboveAsCode

section 23.1.0 12-21-2021
list
 - 🎉 add dateline node to aftertext.

section 23.0.0 12-09-2021
list
 - 🎉 add aftertext node type, with bold, italics, underline, link (& quick link), email, code and strikethrough keywords
 - 🎉 add belowAsCode and aboveAsCode
 - 🎉 split base grammar into files for easier extensibility

question Can you show an example of aftertext?

aftertext
 You write some text. After your text, you add your markup instructions with selectors to select the text to markup, one command per line. For example, this paragraph is written in Aftertext and the source code looks like:
 italics After your text
 italics selectors
aboveAsCode

section 22.4.0 11-25-2021
list
 - 🎉 add basic caption support to images

image public/screenshot.png
 caption This is a caption
aboveAsCode

section 22.3.0 08-23-2021
list
 - 🎉 columnWidth to set a custom column width per article or folder
 - 🎉 maxColumns can be set globally in settings

section 22.2.0 08-23-2021
list
 - 🎉 integrated design feedback into default theme for better readability

section 22.1.0 07-23-2021
list
 - 🏥 you can now ignore custom grammar files in a dir with ignoreGrammarFiles

section 22.0.0 07-09-2021
list
 - 🎉 scroll.settings file is now optional and you can use scroll to build a single page.
 - 🎉 you can now set 'header' and/or 'footer' on articles.

section 21.4.0 07-08-2021
list
 - 🎉 you can now set 'maxColumns' on articles.

section 21.3.0 07-07-2021
list
 - 🎉 if all articles have 'skipIndexPage', 'index.html' will not be built

section 21.2.0 07-06-2021
list
 - ⚠️ internal CSS changes

section 21.0.0 06-21-2021
list
 - 🎉 built in support for custom grammars!
 - ⚠️ internal nodejs API changes: Article is no longer exported and ScrollBuilder is now ScrollFolder

section 20.0.0 06-21-2021
list
 - 🎉 new question nodetype. Simply compiles to an h4 for now but more semantic this way.
 - 🎉 new section nodetype. Simply compiles to an h3 for now but more semantic this way.
 - 🎉 new subsection nodetype. Simply compiles to an h4 for now but more semantic this way.
 - ⚠️ title2-title6 have been removed. use question, section and subsection instead.

question Why the new `question` nodes?

paragraph
 Question and answer structures are literally older than the Socratic Method. Such a common semantic pattern deserves it's own keywords.

question How do I migrate from title# nodes?

paragraph
 The below regex may help.

code
 Find ^title\d (.+\?)
  ReplaceWith question $1
 Find ^title\d (.+)
  ReplaceWith section $1

section 19.3.1 06-20-2021
list
 - 🎉 show the version in footer
 - 🏥 fix title in single pages without a title

section 19.3.0 06-20-2021
list
 - 🏥 fix bug where readme.scroll could be overwritten by init

section 19.2.0 06-17-2021
list
 - 🎉 improved styling for tables

section 19.1.0 06-17-2021
list
 - 🏥 fix bug with http links
 - 🏥 simpler article padding and changed scroll title to h2 from h1

section 19.0.0 06-17-2021
list
 - 🎉 ability to override header and footer

section 18.4.0 06-17-2021
list
 - 🏥 improved alignment of images

section 18.3.0 06-16-2021
list
 - 🎉 og meta tags for social media sharing

section 18.2.0 06-16-2021
list
 - 🏥 title now links to "index.html". less magic and works much better locally

section 18.1.1 06-16-2021
list
 - 🏥 fix regression where 2 columns on mobile were not downsizing to 1

section 18.1.0 06-16-2021
list
 - 🎉 short articles now are put into 1 or 2 columns 

section 18.0.0 06-15-2021
list
 - 🎉 build is now ~46% faster
 - 🏥 refactored html generation in preparation for easier extending and theming

section 17.5.0 06-05-2021
list
 - 🏥 fixed numerous bugs in importing RSS feeds and added examples

section 17.4.0 06-04-2021
list
 - 🎉 typography adjustments
 - 🏥 fixed overlapping social icons up top on mobile. just keep git link

section 17.3.0 06-03-2021
list
 - 🎉 images now link to the full size image

section 17.2.2 06-02-2021
list
 - 🏥 fixed safari-only bug not painting overflowing code blocks on single pages

section 17.2.1 05-25-2021
list
 - 🏥 fixed bug where sequential links were not getting parsed

section 17.2.0 05-25-2021
list
 - 🏥 tables can now break on single pages for higher information density

section 17.1.0 05-25-2021
list
 - 🎉 pipeTable

pipeTable
 what|why
 PipeTable|Because it's awesome!

section 17.0.0 05-25-2021
list
 - 🎉 tabTable and commaTable
 - ⚠️ table is now spaceTable
 - 🏥 do not crash if an empty row in a table

section 16.2.0 05-24-2021
list
 - 🏥 do not crash if an image is not found

section 16.1.0 05-24-2021
list
 - 🎉 building a site is now ~2.4x faster 🏎

section 16.0.0 05-22-2021
list
 - ⚠️ rename scrollSettings.map to scroll.settings

section 15.0.0 05-21-2021
list
 - 🎉 Scroll will detect and emit image sizes during build to reduce layout shifts.

section 14.3.0 05-21-2021
list
 - 🏥 Scroll is now somewhat usable as an NPM module.

section 14.2.0 05-20-2021
list
 - 🏥 added html head meta viewport tag for better mobile experience.

section 14.1.0 05-20-2021
list
 - 🏥 added doctype tag
 - 🏥 added html head meta description tag

section 14.0.0 05-19-2021
list
 - ⚠️ removed links nodeType
 - ⚠️ fixed bug where sometimes permalinks were still using title and not filename

section 13.3.0 05-18-2021
list
 - 🎉 html and image node types

paragraph
 To use an image node:

code
 image foo.jpg

paragraph
 QuickParagraphs are now an error. When you want to drop in some HTML, do so with HTML node:

code
 html
  <b>anything goes here</b>

section 13.2.0 05-18-2021
list
 - 🎉 Added <code>scroll check</code> command

section 13.1.0 05-18-2021
list
 - 🎉 🔗links in lists as well as paragraphs

section 13.0.0 05-17-2021
list
 - 🎉 🔗links in paragraph nodes.
 - 🎉 skipIndexPage nodeType

question How do I use the new single word links?

paragraph
 For single word links in paragraph nodes only (for now) you can now do:

code
 paragraph
  This is a link🔗example.com

paragraph
 Below is a regex for migrating existing <code>*.scroll</code> files.

code
 <a href="https://([^"]+)">([^ ]+)</a>
 $2🔗$1

question How do I use the 🔗link tag with multiword links?

paragraph
 The 🔗link tag only supports single word links. Like everything with ScrollScript, you have
 a number of options if the conventional design doesn't work for you. Your options are:

list
 1. Link just one word. If you need more, perhaps camelCase or snake_case your words together into one concept.
 2. Repeat the link twice <code>foo 🔗link bar 🔗link</code>
 3. Use &lt;a> tags.
 4. Extend the ScrollScript grammar for your site.

question Can I not include a page in the index page?

paragraph
 Now you can! Sometimes you just want to publish an independent page without including it
 in the index. To do that, just add <code>skipIndexPage</code>.

section 12.1.0 05-14-2021
list
 - 🎉 chat nodeType

chat
 You can now do dialogues
 Cool!

section 12.0.0 05-12-2021
list
 - ⚠️ scroll create is now scroll init
 - ⚠️ Removed export command
 - 🏥 removed example.com folder. Less code and now flat.

section 11.0.0 05-11-2021
list
 - 🎉 list, orderedList, and links node types
 - 🎉 codeWithLanguageNode
 - 🏥 HTML escaped in code blocks

section 10.0.0 05-10-2021
list
 - 🎉 table nodeType for SSVs with linkify
 - 🎉 Better docs in ScrollScript grammar
 - ⚠️ Removed list nodeType
 - ⚠️ Removed link nodeType
 - 🏥 Windows return character fix
 - 🏥 multiline support in subheader nodeTypes
 
section 9.0.0 05-05-2021
list
 - 🎉 ScrollScript now has a quote nodeType.
 - 🏥 Code block format bug fixes.
 - 🏥 Styling improvements

section 8.0.0 04-10-2021
list
 - 🎉 Scroll now just builds files. No web server needed.

section 7.0.0 04-03-2021
list
 - ⚠️ Scroll the language is now called Scrolldown (thanks FB!).
 - 🏥 Bug fixes.
 - 🎉 Better perf.

section 6.0.0 03-08-2021
list
 - 🎉 By popular request, Scroll now also publishes each article to its own page.
 - 🎉 Fewer links. Do less. KISS.
 - 🎉 Better perf.
 - 🎉 "permalink" nodeType

section 5.0.0 02-28-2021
list
 - 🎉 Changed name of everything from dumbdown to Scroll per user feedback
 - ⚠️ File extension of articles needs to be "scroll" and not "dd" now.

section 4.2.0 02-22-2021
list
 - 🏥 Fixed paragraph parsing and rendering

section 4.1.0 02-22-2021
list
 - 🎉 "git" scrollSetting for article source links.

import settings.scroll
keyboardNav index.html index.html
