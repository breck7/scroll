import header.scroll
title Scroll Release Notes
startColumns

* Here's a list of the notable changes in Scroll.

# 67.0.0 4/2/2023
* This is _The Theme Release_.
- 🎉 Introduce the idea of keywords for theming scrolls.
- ⚠️ BREAKING: `author` node is now `byLine`. `author` is kept for now but updating is recommended.
- ⚠️ BREAKING: `scrollCssTag` is gone. use `gazetteTheme` for previous behavior. `scrollCss` is gone, use `gazetteTheme noTag`.
- ⚠️ BREAKING: SCROLL_CSS has been removed. `gazetteTheme` now contains that CSS code.
- ⚠️ BREAKING: `scrollHeader` is now `gazetteHeader` and `scrollFooter` is now `gazetteFooter`
- ⚠️ BREAKING: css classes: `scrollHeaderComponent` => `gazetteHeader`, `scrollFooterComponent` => `gazetteFooter`
- ⚠️ BREAKING: `kpiTable` is now `dashboard`

# 66.0.0 4/2/2023
- ⚠️ BREAKING: This upgrades to JTree 73 and Grammar 6. Any custom grammar files need to be updated (generally this just means a find/replace of `Node` to `Parser`).

# 65.0.0 3/30/2023
- 🎉 Upgrade to Jtree 71 to get Grammar 5 wiith scoped parsers.

# 64.0.0 3/28/2023
- 🎉 Upgrade to Jtree 70 to get Grammar 4. Now comments and blank lines are okay in grammars.

# 63.1.0 3/27/2023
- 🎉 Added `abstractScrollWithRequirementsNode` and use it for `copyButtons` and `map` to only include the external JS and CSS once.
- 🎉 Added `compileSettings` as an input in all Scroll nodes rather than maintaining state on instances
- 🏥 minor code cleanup and bug fixes

# 63.0.1 3/27/2023
- 🏥 cache hotfix for embedded snippets.

# 63.0.0 3/27/2023
* This was a big internal refactor to remove the outdated concept of `ScrollFolder` and rely on the file system parameter instead. This makes it easier to build webapps serving dynamic Scroll pages. It also simplifies the upcoming isomorphic release.
- ⚠️ BREAKING: Only users using Scroll as a module may be affected:
 - Removed `ScrollFolder`. Exports now include `ScrollDiskFileSystem` and `ScrollInMemoryFileSystem`. To get the same behavior as `new ScrollFolder("folder").buildFiles()` use `new ScrollDiskFileSystem().buildFilesInFolder("folder")`.
 - Instead of `new ScrollFolder(__dirname).defaultScrollCompiler` use `DefaultScrollCompiler`
- ⚠️ BREAKING: Only users using Scroll extensions may be affected:
 - In extensions `compileSnippet` should now be `compileEmbeddedVersion`
 - Instead of `file.folder.folder` use `file.folderPath`
- ⚠️ BREAKING: Only users using `loop` may be affected:
 - Temporarily renamed `relativeLink` to `linkRelativeToCompileTarget`

# 62.5.1 3/27/2023
- 🏥 if something goes wrong in a nodejs block, be sure to clean up the temporary file

# 62.5.0 3/23/2023
- 🎉 New keyword `canonicalLink` if you need to include query strings in canonical link.

code
 canonicalLink https://scroll.pub/tests/kitchenSink/maps.html?canonLinkTest=true

# 62.4.0 3/23/2023
- 🏥 SEO fix: metaTags now sets canonical link

# 62.3.0 3/22/2023
- 🎉 New keyword `map` using LeafletJS
 https://leafletjs.com/ LeafletJS

# 62.2.0 3/15/2023
- 🎉 Added `copyButtons` keyword. Use that to give code blocks a copy-to-clipboard button on hover.

# 62.1.0 3/13/2023
- 🎉 Added `nodejs` node for including small node.js scripts inside a Scroll file, similar to a PHP snippet. <?php ?>. The snippet is written to disk and then require is used to run it. Exports variables are then replaced throughout the script.

# 62.0.1 3/13/2023
- 🏥 fixes bug when using custom grammars with in memory node types.

# 62.0.0 3/11/2023
- 🎉 Support for in memory file systems. Useful for dynamic websites and future web browser versions and versions with url imports.
- ⚠️ BREAKING: (no one should be affected). `ScrollFolder` constructor now requires an argument. You can now pass an object as a second param to use a virtual filesystem.
- ⚠️ BREAKING: (no one should be affected). Removed `DefaultScrollCompiler` export. Instead use `new ScrollFolder().defaultScrollCompiler`

# 61.0.0 3/11/2023
- ⚠️ BREAKING: (no one should be affected). Removed `buildNeeded` method only used programmatically by PLDB. Switching that to dynamic generation which is a better pattern.

# 60.0.0 3/10/2023
- 🎉 Added `quickHtml` node. A line starting with `<` will be treated as an `html` node. So these are the same:

code
 html <hr>
 <hr>

- ⚠️ BREAKING: (no one should be affected). The default _catch all_ node will still report as an error but will now behave as if it's a paragraph (`*`) node.

# 59.6.0 3/10/2023
- 🎉 Added Horizontal line keyword: `---`

---

# 59.5.0 3/9/2023
- 🎉 Additional shorter comment syntax: `//`. Previously it was only `comment`

// This comment won't appear in the HTML

# 59.4.0 3/7/2023
- 🏥 fix relative links when using snippets from multiple folders
- 🎉 ability to override the default home link in the default theme

# 59.3.0 3/6/2023
- 🏥 CSS fix in default theme so super elements in footnotes don't increase line-height.

# 59.2.0 3/6/2023
- 🎉 Default theme change: links are now only underlined on hover.

# 59.1.0 3/6/2023
- 🎉 `scroll init` now creates a `.gitignore` file and also runs `git init`.

# 59.0.0 3/3/2023
- 🎉 `image` keyword now supports `class` and `id` tags
- 🎉 `class` tag with just a class will now apply to the whole parent element and not insert a span
- 🏥 fix so image tag works in try.scroll.pub

# 58.5.1 3/2/2023
- 🏥 don't compile linkify node to HTML

# 58.5.0 3/2/2023
- 🎉 you can now disable linkify on a node.

# 58.4.0 3/1/2023
- 🎉 you can now create new loop item providers in extensions by extending `abstractItemsProviderNode`

# 58.3.1 2/28/2023
- 🏥 markup directives in indented lists should not compile to anything

# 58.3.0 2/28/2023
- 🎉 checklists! use `[]` and `[x]`
- 🎉 lists `-` are now indentable

## Scroll now has checklists!

[x] Support checklists
 [x] Make them indentable
[] Solve world peace
- Regular Lists are also now indentable
 - This is a child
  - And this is a grandchild

# 58.2.3 2/22/2023
- 🏥 Windows fix

# 58.2.2 2/21/2023
- 🏥 Bug fix

# 58.2.1 2/21/2023
- 🏥 fix for empty cells

# 58.2.0 2/21/2023
- 🎉 table nodes now make cells that are just a link links

# 58.1.0 2/16/2023
- 🎉 added `loop` node type:

belowAsCode
loop
 words #2a2d34ff #009ddcff #f26430ff #6761a8ff #009b72ff
 javascript `<span style="background-color: ${item}; width: 30px; height: 30px; display: inline-block;">&nbsp;</span>`

# 58.0.1 2/9/2023
- 🏥 made `startColumns` clear the section stack. Simpler behavior.

# 58.0.0 2/9/2023
- ⚠️ BREAKING: (no one should be affected). `getFullyExpandedFile` is no longer exported. Instead use: `new ScrollFile(undefined, filePath).importResults.code`
- ⚠️ BREAKING: (no one should be affected). Order of params to `ScrollFile` have changed. `absoluteFilePath` is now param #2, instaed of #3.
- 🏥 mtime fixes for cache builds.

# 57.0.1 2/8/2023
- 🏥 fix permalink regression

# 57.0.0 2/8/2023
- 🎉 added support for `css` one liners
 class blueOneLiner
css .blueOneLiner { color: blue;}
aboveAsCode 2

- 🎉 `title` nodes are now proper aftertext nodes and can use all features of aftertext
- 🎉 the `hidden` keyword can now be used on any aftertext node
- 🏥 if there is no `permalink` on a file the `title` node won't output an a tag
- ⚠️ BREAKING: (no one should be affected). If you had put markup directives in your title tags, such as *bolds*, those will now actually be evaluated.
- ⚠️ BREAKING: `title` blocks now start a section like `#` and `##`, so you may need to add an empty line to end the section, for example if you previously had a `startColumns` right after the title tag.

# 56.1.0 2/8/2023
- 🎉 `snippets` nodes can now accept multiple groups and also groups can be in different folders. Syntax is `[folderPath]/[groupName]` For example:

scrollCode
 title The Long Beach Pub
 snippets 2023/index stories/index 2022/index

# 56.0.1 2/7/2023
- 🏥 fix bug with images after jtree upgrade

# 56.0.0 2/7/2023
- ⚠️ BREAKING: upgraded to `jtree` 66. If you are extending Scroll you may need to migrate extensions.

# 55.6.0 2/7/2023
- 🏥 tweaks to improve site created by `scroll init`

# 55.5.0 1/31/2023
- 🎉 `aboveAsCode` and `belowAsCode` now take an optional number for showing multiple nodes.
- 🎉 default list CSS style has been adjusted slightly to move bullets inline.
- 🎉 New list type: _ordered lists_:
belowAsCode 3
1. One
2. Two
3. Three

# 55.4.1 1/31/2023
- 🏥 fix spurious `table` grammar error message

# 55.4.0 1/30/2023
- 🎉 added `table` keyword which supports custom delimiters:

table &&
 name&&score
 kaia&&400
 pemma&&100
aboveAsCode

# 55.3.0 1/29/2023
- 🎉 the `class` aftertext directive now inserts a span across the whole element content if no text search is provided.

css
 .classDemo {color:blue;}
aboveAsCode
belowAsCode
* This whole text will be blue.
 class classDemo

# 55.2.0 1/26/2023
- 🏥 upgrade jtree

# 55.1.0 1/20/2023
- 🎉 added `replaceJs` keyword.

# 55.0.1 1/19/2023
- 🏥 fix bug where variables were replacing themselves, leading to possible errors.

# 55.0.0 1/19/2023
- 🏥 improve detection of piped input.
- 🏥 improve `youTube` CORS fix to work whether someone includes www.youtube or not.
- ⚠️ BREAKING: removed `watch` command. `nodemon` can be used for hot reloading. Install with `sudo npm install -g nodemon`. Then run:

bashCode
 nodemon -e scroll -x "scroll build"

* Or alias it:

bashCode
 alias watch="nodemon -e scroll -x 'scroll build'"

* You can add the following code to the page(s) you are working on to have them reload without manually refreshing the browser:

scrollCode
 html <meta http-equiv="refresh" content="1;">

# 54.1.0 1/19/2023
- 🏥 `scroll init` no longer starts with a `viewSourceBaseUrl`. If not provided then the View Source link is to the scroll file, so new sites don't start with broken links.

# 54.0.0 1/19/2023
- 🎉 `link` nodes can now have `target`. This link will open in blank tab.
 https://scroll.pub This link
  target _blank
  title Title can also be set.
aboveAsCode
- 🎉 `youTube` nodes can now have captions.
- 🏥 fix: non-embed `youTube` links are converted to proper embed links to fix CORS issues.
- ⚠️ BREAKING: ~no one should be affected. `scrollImageComponent` CSS class changed to `scrollCaptionedComponent`. If you were overwriting the previous class may need to update.
- ⚠️ BREAKING: `note` keyword under `link` nodes has been renamed to `title` and instead of it being a block just the line is used. This is to better reflect what it does. See example above.

# 53.0.2 1/18/2023
- 🏥 fix: `youTube` definition was missing a cell type for url.

# 53.0.1 1/17/2023
- 🏥 fix: `redirectTo` definition was missing a cell type for url.

# 53.0.0 1/17/2023
- ⚠️ BREAKING: there was undocumented behavior where `*` nodes previously supported multiple lines of text. This now throws an errors. If you need the old behavior you can copy/paste the old node's Grammar code into your project.

# 52.2.1 1/16/2023
- 🏥 fix: a `*` node with just a link now works correctly. Previously was rendering blank.

# 52.2.0 1/13/2023
- 🎉 `html` now also supports quick oneliners:

belowAsCode
html <b>here is some html</b>

# 52.1.1 1/12/2023
- 🏥 fix: getGroup was including files marked with `importOnly`

# 52.1.0 1/12/2023
- 🏥 Upgrade JTree.

# 52.0.0 1/10/2023
- 🎉 API usage: new getter `buildNeeded` returns whether the folder needs to be rebuilt. You can use this to skip unnecessary builds for faster perf.
- ⚠️ BREAKING: This should not break anyone however behavior has changed. `scroll build` now does not overwrite unmodified files. Now `mtime` reflects when the generated HTML last changed instead of when the `scroll build` command was last run. This speeds up `rsync` deploys.

# 51.0.0 1/9/2023
* 🎉 This version introduces the concept of `Sections`. Headers (`#`, `##` and `?`) now start a section, and a blank line ends it. A section will not be split across columns.
- ⚠️ BREAKING: This slightly changes layouts (for the better, hopefully in all cases) so do a manual inspection of output.

# 50.2.0 1/5/2023
- 🏥 fix bug where it was trying to get image dimensions of remote images when building
- 🎉 upgrade jtree to get perf improvements

# 50.1.0 1/5/2023
- 🎉 `listCommand` now much faster (~33% in pldb) because `findScrollsInDirRecursive` will now skip `node_modules` folders entirely.

# 50.0.0 1/4/2023
- 🎉 made footnotes compile faster
- ⚠️ BREAKING: simplified footnotes by removing `notes` keyword. Referencing a footnote is done the same way but now footnotes just print immediately like you'd expect.

belowAsCode
* For example^exampleFootnote

^exampleFootnote This is an example footnote.
aboveAsCode

# 49.1.0 1/4/2023
- 🎉 add `viewSource` keyword.

# 49.0.0 1/4/2023
- ⚠️ BREAKING: renamed `footnote` and `caveat` directives to `hoverNote` to avoid confusion with footnotes.
- ⚠️ BREAKING: removed `startRuledColumns` which doesn't appear to be used anywhere
- 🏥 general code cleanup and refactor by splitting big grammar files into separate files.

# 48.3.0 1/2/2023
- 🎉 added `youTube` keyword for embedding youTube videos with proper responsive sizing.

# 48.2.0 1/2/2023
- 🎉 simplify default theme by removing ornamental borders

# 48.1.0 1/2/2023
- 🏥 fix: keyboardNav now only cycles through pages with keyboardNav (feed.xml files are excluded, for example)
- 🏥 fix: previous/next buttons are not shown if there is no keyboardNav

# 48.0.0 1/1/2023
* This release simplifies and removes things from the default install.

- ⚠️ BREAKING: the `github` keyword is now `git` to make it clearer what it does. The git SVG is now used in the default theme.
- ⚠️ BREAKING: removed `twitter` keyword and removed the Twitter link from default theme.
- ⚠️ BREAKING: `SVGS` is no longer exported.
- 🎉 Minor style fix of header and switched email SVG with a nice svg from http://laurareen.com

# 47.4.0 12/30/2022
- 🎉 rss 2.0 now generated with `printFeed`, meaning pubDate and lastBuildDate are included.

# 47.3.0 12/29/2022
- 🎉 upstreamed `stumpNoSnippet` for advanced use case of PLDB until we have better support for custom grammars when using as a library.

# 47.2.1 12/29/2022
- 🏥 endColumns nodes should not be printed in snippets

# 47.2.0 12/29/2022
- 🎉 added `doNotPrint` class to header and footer elements for better printability.

# 47.1.2 12/05/2022
- 🏥 character encoding regression fix.

# 47.1.1 11/30/2022
- 🏥 init fixes

# 47.1.0 11/29/2022
- 🎉 you can now specify number of max columns in `startColumns` keyword
- 🏥 fixed body padding regression

# 47.0.0 11/28/2022
* This is a major breaking refactor. Scroll now generates flat html. This release is NOT recommended for the feint of heart. Wait a day or two until the bugs are ironed out. 

- ⚠️ BREAKING: removed automatic meta tag generation. You now need to explicitly add a `metaTags` keyword.
- ⚠️ BREAKING: removed `<!doctype>`, `<html>`, `<head>`, and `<body>` tags. Unnecessary. Modern browsers don't need them. HTML never should have had head/body split.
- ⚠️ BREAKING: removed `SCROLL_CSS` export.

# 46.2.0 11/27/2022
- 🏥 `stump` keyword works now

# 46.1.0 11/27/2022
- 🏥 `scrollCss` works now

# 46.0.0 11/27/2022
* This is a major breaking refactor. *All the implicit imports are gone*. Everything must be explicitly included now (perhaps with a few slight exceptions like meta tags). This migration guide is a work in progress. This release is NOT recommended for the feint of heart. Wait a day or two until the bugs are ironed out.

- ⚠️ BREAKING: removed `maxColumns` and `columnWidth` and `template`
- ⚠️ BREAKING: headers and footers are not provided by default. You now must explicitly include them with `scrollHeader` and `scrollFooter`. The previous behavior of `scrollHeader` and `scrollFooter` has been removed.
- ⚠️ BREAKING: columns are not provided by default. You now need to wrap your content in `startColumns` and `endColumns`.
- ⚠️ BREAKING: CSS is not included by default. You need to use the snippet keyword `scrollCssTag`. The previous behavior of `scrollCss` has been removed. Also `printScrollCss` is now `scrollCss`.

# 45.0.0 11/24/2022
- 🎉 a whole new way to do footnotes/end notes.

## Footnotes example

* Brockton is a city in Massachusetts^state. It was incorporated in 1881^inc. 
 https://en.wikipedia.org/wiki/Brockton,_Massachusetts Brockton

## Notes

^state A state in the United States.

^inc Incorporated as a city in 1881, but as a town in 1821. Wikipedia.
 https://en.wikipedia.org/wiki/Brockton,_Massachusetts Wikipedia

# 44.0.1 11/24/2022
- 🏥 fix hidden title bug

# 44.0.0 11/24/2022
* This is the `title` simplification refactor release.
- 🎉 new: `description` keyword for use in open graph description generation.
- 🎉 new: optional `hidden` keyword on `title` nodes for setting `title` without printing it.
- ⚠️ BREAKING: Group pages no longer have a `title` in their HTML by default. Must set manually.
- ⚠️ BREAKING: Removed `siteTitle` and `siteDescription` keywords. Those concepts no longer make sense after the introduction of `groups` concept. Generally if you rename `siteTitle` to `title` and `siteDescription` to `description` it should work well.
- ⚠️ BREAKING: Removed `htmlTitle` keyword.

# 43.1.1 2022.11.22
- 🏥 fix aftertext bug where `http` quick links were not matching.

# 43.1.0 2022.11.14
- 🎉 new: new `SVGS` export when using as a library.

# 43.0.1 2022.11.14
- 🏥 list element (`- some item`) compiler was generating an extra `p` tag.

# 43.0.0 2022.11.12
- 🎉 New: Linkify! Links like https://breckyunits.com and email addresses like feedback@scroll.pub are now compiled to HTML `a` tags automatically. Note: if an `a` tag is detected in the node Linkify will be DISABLED for that node.
- ⚠️ BREAKING: (no one should be affected) slim chance linkify may insert links where you previously did not want them.

# 42.0.0 2022.11.09
- ⚠️ BREAKING: `scroll check` is now `scroll test`

# 41.0.0 2022.11.08
- ⚠️ BREAKING: switched from date format of MM-DD-YYYY to YYYY.MM.DD

regexCode
 search ^# (\d+\.\d+\.\d+) (\d+)\-(\d+)\-(\d+)
 replace # $1 $4.$2.$3

# 40.0.0 2022.11.05
- ⚠️ BREAKING: (no one should be affected) `caption` now extends the thought (`*`) node.

image public/screenshot.png
 caption You can now use all aftertext directives like *bold* in caption nodes. Note: in the future we may just remove the keyword `caption` and you can just use `*` directly.

# 39.0.0 2022.11.03
- ⚠️ BREAKING: `scroll init` no longer creates a `feed.xml` file by default. You can easily add an XML feed manually with the 2 steps below:

code
 comment Add the content below to feed.scroll
 import settings.scroll
 permalink feed.xml
 template blank
 printFeed index

code
 comment Add the line below to your posts and/or settings import file.
 rssFeedUrl feed.xml


# 38.2.0 2022.11.01
- 🎉 new dayjs aftertext directive.

# 38.1.0 2022.11.01
- 🏥 fix group page not having a header.

# 38.0.0 2022.10.31
- 🎉 add left and right buttons to default theme.

# 37.1.1 2022.10.28
- 🏥 Fixed bad table regression where table content was not printing

# 37.1.0 2022.10.28
- 🎉 Documentation improvement

# 37.0.0 2022.10.28
- ⚠️ BREAKING: Removed the original `aftertext` node in favor of `*` nodes. Regex [search replace] to upgrade: `^aftertext\n ` `* `
- ⚠️ BREAKING: Removed basic `paragraph` node. Regex [search replace] to upgrade: `^paragraph\n ` `* `
- ⚠️ BREAKING: Removed basic `question` node. Regex [search replace] to upgrade: `^question ` `? `
- ⚠️ BREAKING: Removed basic `section` node. Regex [search replace] to upgrade: `^section ` `# `
- ⚠️ BREAKING: Removed basic `subsection` node. Regex [search replace] to upgrade: `^subsection ` `## `
- ⚠️ BREAKING: Removed basic `list` node.
- ⚠️ BREAKING: Removed basic `orderedList` node.
- ⚠️ BREAKING: Removed basic `unorderedList` node.
- ⚠️ BREAKING: Removed support for 🔗 links. Regex [search replace] to upgrade: ` ([^ ]+)🔗([^ ]+)` ` <a href="https://$2">$1</a>`

* The goal of this release is to simplify and speed up Scroll by removing legacy features.
* This is a major release that removes a bunch of the original keywords in favor of the newer more advanced aftertext nodes.
* If you don't want to upgrade at this time, it's very easy to just add the removed grammar definitions from this commit into your existing scrolls using the normal extension pattern.
* You can also easily alias the newer aftertext node types with the original keywords above if you'd prefer.

# 36.1.0 2022.10.27
- 🎉 Now you can leave the "pattern" part blank in link node in aftertext to make the whole line a link.
- 🏥 Adjust estimateLines hueristics

# 36.0.1 2022.10.24
- 🏥 Fix home icon

# 36.0.0 2022.10.22
- ⚠️ BREAKING: simpler CSS and header

# 35.1.2 2022.10.12
- 🏥 cleanup previous commit

# 35.1.1 2022.10.12
- 🏥 fix duplicated text in `*` nodes bug

# 35.1.0 2022.10.05
- 🎉 Added new better way to do lists.
aboveAsCode

# 35.0.0 2022.10.04
- ⚠️ BREAKING: (no one should be affected) changed return value of api method `findScrollsInDirRecursive`.

# 34.2.0 2022.10.03
- 🎉 add `redirectTo` tag

# 34.1.0 2022.10.02
- 🎉 had an idea for a new type of text tag that blinks

# 34.0.3 2022.9.30
- 🏥 Fix github workflow building.

# 34.0.2 2022.9.30
- 🏥 !

# 34.0.1 2022.9.30
- 🏥 test fix

# 34.0.0 2022.9.30
- 🎉 add support for recursive building and checking using pipes! `scroll list | scroll build`
- ⚠️ BREAKING: (no one should be affected) renamed `execute` method on ScrollCli class to `executeUsersInstructionsFromShell`

# 33.1.0 2022.9.29
- 🎉 remove extraneous words and lines printing in CLI

# 33.0.0 2022.9.29
- ⚠️ BREAKING: (no one should be affected) removed "migrate" command. was more trouble than it was worth. better to have that as a separate module.
- ⚠️ BREAKING: (no one should be affected) `where` command is now `list`

# 32.0.0 2022.9.27
- 🎉 improved 'where' command to scan pwd and skip node_modules folders. much faster and simpler.

# 31.5.0 2022.9.9
- 🎉 new keywords: `?`, `#` and `##`

# A Header

## A Subheader

? Have you thought of the most important question?

# 31.4.1 2022.9.3
- 🏥 and that is why you always run the tests.

# 31.4.0 2022.9.3
- 🎉 New keywords: `*`, `footnote`, and `readingList`

* This is a _thought_. It's like a condensed form of aftertext with *bold* and _italics_ and `code` turned on by default.
 hoverNote default
  And it supports hover notes!
aboveAsCode

# Projects list

* Projects I'm very actively working on:

readingList
 https://pldb.com PLDB.com
 https://scroll.pub Scroll
 https://breckyunits.com A Blog by Breck Yunits
aboveAsCode

# 31.3.0 2022.9.3
- 🏥 Fixed bad regression where only the first word of a replacement line was getting replaced.

# 31.2.0 2022.9.2
- 🎉 added `openGraphImage` node

# 31.1.0 2022.9.1
- 🎉 `replace` now supports multiline strings
- 🏥 fixed broken links bug if using keyboard nav without groups

# 31.0.0 2022.8.31
- ⚠️ BREAKING: upgraded to jtree 56. This is not likely to break anyone. However, if you are extending Scroll with your own nodeTypes you will need to make sure that your abstract nodes (and *only* your abstract nodes) have an id that begins with `abstract`. You can then remove all occurrences of the keyword `abstract` from your grammar node definitions.

# 30.1.1 2022.8.30
- 🎉 Improve header message thanks to dg's feedback

# 30.1.0 2022.8.29
- 🎉 Perf: ~2x as fast as v30.1

# 30.0.0 2022.8.29
- 🎉 Perf: ~2x as fast as v29
- ⚠️ BREAKING: If using `getFullyExpandedFile(str)` replace with `getFullyExpandedFile(str).code`
- ⚠️ BREAKING: If using any ScrollFile programatically, a few undocumented getters may have changed.

# 29.0.0 2022.8.28
- ⚠️ BREAKING: if using programatically instead of ScrollPage use ScrollFile

# 28.3.2 2022.8.27
- 🏥 fixed bug with open graph image tags

# 28.3.1 2022.8.27
- 🏥 fixed minor grammar typo and added test

# 28.3.0 2022.8.27
- 🎉 added `author` and `kpiTable` node types

# 28.2.0 2022.8.26
- 🏥 export getFullyExpandedFile

# 28.1.0 2022.8.26
- 🏥 imports can now be recursive

# 28.0.0 2022.8.26
* This is a *major* update that radically simplifies Scroll and adds significant new capabilities.

## From 3 file types to 1

* `scroll.settings` and `*.grammar` files are gone. Everything is now done with `.scroll` files, and now every keyword is documented and usable on try.scroll.com and type checked.

## Imports and variables

* Use `import [filepath]` to import one file into another. Use `replace` and `replaceDefault` for variables.

## Add your own Grammar extensions directly in your Scroll files

* Define new nodeTypes or create your own aliases on a per file basis. Use the import keyword and build your own collection of common reusable node types for your project(s).

## Unlimited Groups and Group Pages

* Add files to one or more groups and then customize how each group page prints. No more magic or implicit creation of collection pages.

## Multiple Compiler Passes

* The new language features (imports, grammar nodes, and variables) required a change from a 1 one stage compilation process to a multi-stage compiler pass pattern. The compilers passes run in this order: imports, grammar extensions, then variables. So variables cannot be used in imports or grammar extensions.

## Change list

- ⚠️ BREAKING: The `git` setting is renamed to `viewSourceBaseUrl`
- ⚠️ BREAKING: The `sourceLink` setting is renamed to `viewSourceUrl`
- ⚠️ BREAKING: removed `skipIndexPage`. Instead you now opt-in to group pages like this: `groups index.html`
- ⚠️ BREAKING: removed `scroll.settings` concept. Use `import settings.scroll` now.
- ⚠️ BREAKING: `footer` is now `scrollFooter` and `header` is now `scrollHeader`
- ⚠️ BREAKING: removed `ignoreGrammarFiles`. Custom grammar extensions must now be explicitly imported and/or be in `.scroll` files.
- ⚠️ BREAKING: changed link text from "Article source" to "View source"
- ⚠️ BREAKING: `css` setting is now `scrollCss`
- ⚠️ BREAKING: DefaultScrollScriptCompiler is now DefaultScrollCompiler
- ⚠️ BREAKING: removed buildSinglePages, buildIndexPage, buildSnippetsPage, buildRssFeed, and buildCssFile. Everything done by `buildFiles` now. See 'full.scroll', `index.scroll`, `feed.scroll`, and `style.scroll` in `tests/kitchenSink` for how to implement those in new pattern.
- ⚠️ BREAKING: in default theme CSS some class names have changed:

code
 scrollArticleDateComponent => scrollDateComponent
 scrollArticlePageComponent => scrollFilePageComponent
 scrollSingleArticleTitle => scrollFilePageTitle
 scrollIndexPageArticleContainerComponent => scrollGroupPageFileContainerComponent
 scrollArticleSourceLinkComponent => scrollFileViewSourceUrlComponent
 scrollIndexPageComponent => scrollGroupPageComponent
 scrollIndexPageFileContainerComponent => scrollGroupPageFileContainerComponent

- ⚠️ just calling ScrollScript Scroll again unless it becomes confusing
- 🎉 keyboardNav will now use the first group a file belongs to if prev and next are not supplied

## Updating custom CSS

code
 comment Put this in a file named style.scroll
 permalink style.css
 settings
  noTemplate
 printScrollCSS

# 27.1.1 2022.8.24
- 🏥 only activate keyboard shortcuts if no element has focus

# 27.1.0 2022.8.24
- 🎉 added new cli command: `scroll where`

# 27.0.1 2022.8.23
- 🏥 mutability fix

# 27.0.0 2022.8.23
- 🎉 added `keyboardNav` node
- ⚠️ BREAKING: all `permalink` lines in `.scroll` files need `.html`. Run `scroll migrate` to find and update automatically.

# 26.1.0 2022.8.23
- 🎉 export SCROLL_CSS for tryscroll app
- ⚠️ now calling the language ScrollScript instead of Scrolldown

# 26.0.0 2022.8.23
- ⚠️ (potentially) breaking: scrolldown.grammar is no longer built/checked in and SCROLLDOWN_GRAMMAR_FILENAME no longer exported.

# 25.6.0 2022.8.19
- 🎉 simpler API for programmatic usage: `new ScrollPage('title Hello world')`

# 25.5.1 2022.7.22
- 🏥 minor grammar fix

# 25.5.0 2022.7.22
- 🏥 path fixes for Windows thanks to @celtic-coder

# 25.4.0 2022.7.14
- 🎉 50% faster builds

# 25.3.2 2022.7.14
- 🎉 added cacheing for 40% faster builds

# 25.3.1 2022.7.14
- 🏥 fixed links in treeTable

# 25.3.0 2022.7.14
- 🎉 added `treeTable`

belowAsCode
treeTable
 row
  name Javascript
  example
   console.log("Hello world")
 row
  name Python
  example
   # A code block
   print "Hello world"

# 25.2.1 2022.7.01
- 🏥 fixed broken links in feed.xml

# 25.2.0 2022.6.22
- 🎉 added `htmlTitle` and `sourceLink` keywords so an article can override the defaults

# 25.1.0 2022.6.19
- 🎉 if scroll has an rss feed add a <link> tag to built pages

# 25.0.0 2022.6.15
- ⚠️ on single article pages, the header will now span across all columns.

# 24.9.0 2022.6.15
- 🎉 added "css" setting. Set `css split` to write CSS to `scroll.css` instead of inline, or `css none` to not generate CSS.
- 🏥 removed extra blank lines in snippets.html generation

# 24.8.0 2022.6.15
- 🎉 if "baseUrl" is set building will also generate an RSS "feed.xml"

# 24.7.0 2022.6.13
- 🏥 fix when using Scroll programmatically image sizeOf check will use correct folder
- 🎉 add param to specify index/snippets page when using programmatically

# 24.6.0 2022.6.10
- 🎉 added `wrap` keyword for advanced custom wraps in aftertext.

* Some !simple! and *advanced* usages. An #absolute link# and @@@a relative link@@@. Show some ++added text++ or some --deleted text--.
 wrap ! em
 wrap * b
 wrap # https://example.com
 wrap @@@ a href="potato.html"
 wrap ++ span style="color:green"
 wrap -- span style="color:red; text-decoration: line-through;"
aboveAsCode

# 24.5.0 2022.6.10
- 🎉 added `wrapsOn` keyword to aftertext.

* Support for traditional *bold*, `code`, and _italics_ in aftertext with the keyword `wrapsOn`.
aboveAsCode

# 24.4.0 2022.6.08
- 🎉 if your scroll has an article(s) with "endSnippet", scroll will create "snippets.html".

# 24.3.1 2022.5.25
- 🏥 fix bug where images were stuck at 35ch even when the browser sized columns wider

# 24.3.0 2022.2.16
* This tiny release adds some ways to include more caveats and context around words and references.
- 🎉 added 'caveat' directive to aftertext for adding caveats around parts of text
- 🎉 added 'note' directive to aftertext links for providing more context around included links

## Caveat Example

* This is a great idea.
 hoverNote great
  I'm not actually sure if this is a great idea. But often I want to include a comment and link it
  back to the text, but don't quite want to footnote it.
aboveAsCode

## Link Quote Example

* This report showed the treatment had a big impact.
 https://example.com/report This report
  title The average growth in the treatment group was 14.2x higher than the control group.
aboveAsCode

# 24.2.0 2022.1.18
- 🎉 added 'id' directive to aftertext for adding ids to paragraphs <p id="foo"></p>
- 🎉 added 'loremIpsum' nodeType to help in testing and exploring

* Example demonstrating the above:

code
 aftertext
  Click here to go to the middle paragraph.
  link #middleParagraph Click here
 
 loremIpsum 20
 
 aftertext
  Here is the middle paragraph.
  id middleParagraph
 
 loremIpsum 20

# 24.1.1 2022.1.13
- 🏥 fix bug where migrator was not replacing 🔗 links in paragraphs when upgrading to aftertext
- 🏥 fix typo in release notes

# 24.1.0 2022.1.13
- 🎉 added migrate command to automate migrations when there are breaking changes
- 🎨 added background color and styling to inline code elements in default theme

# 24.0.0 2022.1.11
- 🎉 if a table has a column name ending in "Link", that will be used to link the matching column. See example below.
- ⚠️ if you have tables with a column ending in "Link" beware the new behavior

belowAsCode
pipeTable
 name|nameLink
 Wikipedia|https://wikipedia.org

- ⚠️ the first paragraph of an article no longer prints a dateline. Use aftertext instead. See example below.

* By default the article's date will be used but you can also provide a custom date.

belowAsCode
* A truck transporting llamas collided into a pajama factory late last night.
 dateline 2/21/2020

* To migrate and keep your existing datelines use the command scroll migrate.
 code scroll migrate

# 23.2.0 2021.12.22
- 🎉 add "matchAll" and "match" support to aftertext for more advanced matching options
- 🎉 add "class" markup directive to aftertext
- 🎉 add "css" node for easier insertion of CSS
- 🏥 fix bug in aftertext when 2 tags started at same index
- 🏥 make basic dateline work in browser

? Can you show an example of the new advanced aftertext features?

* How much wood can a woodchuck chuck if a woodchuck could chuck wood?
 https://en.wikipedia.org/wiki/Groundhog woodchuck
  matchAll
 class standout wood
  match 0 3
aboveAsCode

css
 .standout {
  background-color: yellow;
  border: 1px dashed red;
  padding: 5px;
 }
aboveAsCode

# 23.1.0 2021.12.21
- 🎉 add dateline node to aftertext.

# 23.0.0 2021.12.09
- 🎉 add aftertext node type, with bold, italics, underline, link (& quick link), email, code and strikethrough keywords
- 🎉 add belowAsCode and aboveAsCode
- 🎉 split base grammar into files for easier extensibility

? Can you show an example of aftertext?

* You write some text. After your text, you add your markup instructions with selectors to select the text to markup, one command per line. For example, this paragraph is written in Aftertext and the source code looks like:
 italics After your text
 italics selectors
aboveAsCode

# 22.4.0 2021.11.25
- 🎉 add basic caption support to images

image public/screenshot.png
 caption This is a caption
aboveAsCode

# 22.3.0 2021.08.23
- 🎉 columnWidth to set a custom column width per article or folder
- 🎉 maxColumns can be set globally in settings

# 22.2.0 2021.08.23
- 🎉 integrated design feedback into default theme for better readability

# 22.1.0 2021.07.23
- 🏥 you can now ignore custom grammar files in a dir with ignoreGrammarFiles

# 22.0.0 2021.07.09
- 🎉 scroll.settings file is now optional and you can use scroll to build a single page.
- 🎉 you can now set 'header' and/or 'footer' on articles.

# 21.4.0 2021.07.08
- 🎉 you can now set 'maxColumns' on articles.

# 21.3.0 2021.07.07
- 🎉 if all articles have 'skipIndexPage', 'index.html' will not be built

# 21.2.0 2021.07.06
- ⚠️ internal CSS changes

# 21.0.0 2021.06.21
- 🎉 built in support for custom grammars!
- ⚠️ internal nodejs API changes: Article is no longer exported and ScrollBuilder is now ScrollFolder

# 20.0.0 2021.06.21
- 🎉 new question nodetype. Simply compiles to an h4 for now but more semantic this way.
- 🎉 new section nodetype. Simply compiles to an h3 for now but more semantic this way.
- 🎉 new subsection nodetype. Simply compiles to an h4 for now but more semantic this way.
- ⚠️ title2-title6 have been removed. use question, section and subsection instead.

? Why the new `question` nodes?

* Question and answer structures are literally older than the Socratic Method. Such a common semantic pattern deserves it's own keywords.

? How do I migrate from title# nodes?

* The below regex may help.

code
 Find ^title\d (.+\?)
  ReplaceWith question $1
 Find ^title\d (.+)
  ReplaceWith section $1

# 19.3.1 2021.06.20
- 🎉 show the version in footer
- 🏥 fix title in single pages without a title

# 19.3.0 2021.06.20
- 🏥 fix bug where readme.scroll could be overwritten by init

# 19.2.0 2021.06.17
- 🎉 improved styling for tables

# 19.1.0 2021.06.17
- 🏥 fix bug with http links
- 🏥 simpler article padding and changed scroll title to h2 from h1

# 19.0.0 2021.06.17
- 🎉 ability to override header and footer

# 18.4.0 2021.06.17
- 🏥 improved alignment of images

# 18.3.0 2021.06.16
- 🎉 og meta tags for social media sharing

# 18.2.0 2021.06.16
- 🏥 title now links to "index.html". less magic and works much better locally

# 18.1.1 2021.06.16
- 🏥 fix regression where 2 columns on mobile were not downsizing to 1

# 18.1.0 2021.06.16
- 🎉 short articles now are put into 1 or 2 columns 

# 18.0.0 2021.06.15
- 🎉 build is now ~46% faster
- 🏥 refactored html generation in preparation for easier extending and theming

# 17.5.0 2021.06.05
- 🏥 fixed numerous bugs in importing RSS feeds and added examples

# 17.4.0 2021.06.04
- 🎉 typography adjustments
- 🏥 fixed overlapping social icons up top on mobile. just keep git link

# 17.3.0 2021.06.03
- 🎉 images now link to the full size image

# 17.2.2 2021.06.02
- 🏥 fixed safari-only bug not painting overflowing code blocks on single pages

# 17.2.1 2021.05.25
- 🏥 fixed bug where sequential links were not getting parsed

# 17.2.0 2021.05.25
- 🏥 tables can now break on single pages for higher information density

# 17.1.0 2021.05.25
- 🎉 pipeTable

pipeTable
 what|why
 PipeTable|Because it's awesome!

# 17.0.0 2021.05.25
- 🎉 tabTable and commaTable
- ⚠️ table is now spaceTable
- 🏥 do not crash if an empty row in a table

# 16.2.0 2021.05.24
- 🏥 do not crash if an image is not found

# 16.1.0 2021.05.24
- 🎉 building a site is now ~2.4x faster 🏎

# 16.0.0 2021.05.22
- ⚠️ rename scrollSettings.map to scroll.settings

# 15.0.0 2021.05.21
- 🎉 Scroll will detect and emit image sizes during build to reduce layout shifts.

# 14.3.0 2021.05.21
- 🏥 Scroll is now somewhat usable as an NPM module.

# 14.2.0 2021.05.20
- 🏥 added html head meta viewport tag for better mobile experience.

# 14.1.0 2021.05.20
- 🏥 added doctype tag
- 🏥 added html head meta description tag

# 14.0.0 2021.05.19
- ⚠️ removed links nodeType
- ⚠️ fixed bug where sometimes permalinks were still using title and not filename

# 13.3.0 2021.05.18
- 🎉 html and image node types

* To use an image node:

code
 image foo.jpg

* QuickParagraphs are now an error. When you want to drop in some HTML, do so with HTML node:

code
 html
  <b>anything goes here</b>

# 13.2.0 2021.05.18
- 🎉 Added <code>scroll check</code> command

# 13.1.0 2021.05.18
- 🎉 🔗links in lists as well as paragraphs

# 13.0.0 2021.05.17
- 🎉 🔗links in paragraph nodes.
- 🎉 skipIndexPage nodeType

? How do I use the new single word links?

* For single word links in paragraph nodes only (for now) you can now do:

code
 paragraph
  This is a link🔗example.com

* Below is a regex for migrating existing <code>*.scroll</code> files.

code
 <a href="https://([^"]+)">([^ ]+)</a>
 $2🔗$1

? How do I use the 🔗link tag with multiword links?

* The 🔗link tag only supports single word links. Like everything with ScrollScript, you have a number of options if the conventional design doesn't work for you. Your options are:

- 1. Link just one word. If you need more, perhaps camelCase or snake_case your words together into one concept.
- 2. Repeat the link twice <code>foo 🔗link bar 🔗link</code>
- 3. Use &lt;a> tags.
- 4. Extend the ScrollScript grammar for your site.

? Can I not include a page in the index page?
* Now you can! Sometimes you just want to publish an independent page without including it in the index. To do that, just add `skipIndexPage`.

# 12.1.0 2021.05.14
- 🎉 chat nodeType

chat
 You can now do dialogues
 Cool!

# 12.0.0 2021.05.12
- ⚠️ scroll create is now scroll init
- ⚠️ Removed export command
- 🏥 removed example.com folder. Less code and now flat.

# 11.0.0 2021.05.11
- 🎉 list, orderedList, and links node types
- 🎉 codeWithLanguageNode
- 🏥 HTML escaped in code blocks

# 10.0.0 2021.05.10
- 🎉 table nodeType for SSVs with linkify
- 🎉 Better docs in ScrollScript grammar
- ⚠️ Removed list nodeType
- ⚠️ Removed link nodeType
- 🏥 Windows return character fix
- 🏥 multiline support in subheader nodeTypes

# 9.0.0 2021.05.05
- 🎉 ScrollScript now has a quote nodeType.
- 🏥 Code block format bug fixes.
- 🏥 Styling improvements

# 8.0.0 2021.04.10
- 🎉 Scroll now just builds files. No web server needed.

# 7.0.0 2021.04.03
- ⚠️ Scroll the language is now called Scrolldown (thanks FB!).
- 🏥 Bug fixes.
- 🎉 Better perf.

# 6.0.0 2021.03.08
- 🎉 By popular request, Scroll now also publishes each article to its own page.
- 🎉 Fewer links. Do less. KISS.
- 🎉 Better perf.
- 🎉 "permalink" nodeType

# 5.0.0 2021.02.28
- 🎉 Changed name of everything from dumbdown to Scroll per user feedback
- ⚠️ File extension of articles needs to be "scroll" and not "dd" now.

# 4.2.0 2021.02.22
- 🏥 Fixed paragraph parsing and rendering

# 4.1.0 2021.02.22
- 🎉 "git" scrollSetting for article source links.

endColumns

import footer.scroll
