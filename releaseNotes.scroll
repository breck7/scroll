buildConcepts releaseNotes.csv releaseNotes.json releaseNotes.tsv
buildMeasures releaseNotesMeasures.tsv
microlangs/changes.parsers
title Scroll Release Notes

header.scroll
printTitle
## A list of what has changed in Scroll releases.

thinColumn
Download as CSV | TSV | JSON
 link releaseNotes.csv CSV
 link releaseNotes.tsv TSV
 link releaseNotes.json JSON
ciBadges.scroll

br
thinColumns

📦 131.0.0 9/14/2024
🎉 new parser: `quickCssParser`
🎉 new parser: `quickIncludeHtmlParser`
🎉 new parser: `quickScriptParser`
⚠️ BREAKING: (no one should be affected) if you have a one word line that ends with .js, .css, or .html it will now be consumed by these parsers above.

📦 130.5.0 9/13/2024
🎉 new `assertHtmlEqualsParser` for faster and more intelligent testing
🏥 fix edge bug in inline markup parsers

📦 130.4.2 9/13/2024
🏥 counter should be floor not ceil

📦 130.4.1 9/12/2024
🎉 support for relative links in Url columns in `printTable`
🏥 scroll init style fix

📦 130.4.0 9/12/2024
🎉 add detection of timestamp columns and print them as dates in `printTable`
🎉 remove "Exported data" from copied text in datatables copy buttons
 // todo: need to remove this properly from the bundle, including the extra 2 blank lines.

📦 130.3.6 9/12/2024
🏥 buttons with link should be fully clickable

📦 130.3.5 9/11/2024
🏥 ScrollSetCLI fix
// todo: is this the right place for this file?

📦 130.3.4 9/10/2024
🏥 ScrollSetCLI fix

📦 130.3.3 9/10/2024
🏥 ScrollSetCLI fix

📦 130.3.2 9/10/2024
🏥 make just text clickable in view source links 

📦 130.3.1 9/9/2024
🏥 npm fix

📦 130.3.0 9/9/2024
🎉 upstream ScrollSetCLI

📦 130.2.1 9/8/2024
🏥 table loop fixes
🏥 table json parsing fixes

📦 130.2.0 9/8/2024
🎉 added `limit` parser to tables
🎉 `loop` parser can now loop over tables

📦 130.1.1 9/5/2024
🎉 oneTextarea max height

📦 130.1.0 9/5/2024
🎉 oneTextarea forms now show a placeholder and example form

📦 130.0.0 9/4/2024
🎉 forms now submit via email and generate a nicely formatted email
⚠️ BREAKING: (no one should be effected) `classicForm` and `scrollForm` work differently now.

📦 129.0.0 9/4/2024
🎉 added `quickImport` parser for imports.
⚠️ BREAKING: (no one should be effected) if you had any lines that were just [filename].(scroll|parser), those will now be parsed as imports

📦 128.0.1 9/4/2024
🏥 better handling of circular dependencies with tables

📦 128.0.0 9/4/2024
🎉 added `quickVideo` parser for including videos.
🎉 added `quickMusic` parser for including sound files.
🎉 added `quickTable` parser for including csvs, tsvs, psvs, and ssvs.
⚠️ BREAKING: (no one should be effected) if you had any catch all lines starting with [filename].[one of the above extensions] will now be caught by one of these quick parsers

### Demos

belowAsCode 3
tests/sipOfCoffee.m4a
 loop
tests/spirit.mp4
 loop
pages.csv
 printTable

tableSearch

📦 127.0.0 9/4/2024
🎉 added `quickImage` parser. Add an image with just the filename. quickImageParser detects by filename.
⚠️ BREAKING: (no one should be effected) if you had any lines starting with [filename].(png|jpg|et cetera) will be parsed as image.

belowAsCode
particles.png

📦 126.1.0 9/3/2024
🎉 `scrollForm` now implements the One Textarea design pattern. Thanks Alejandro for your help!
 https://breckyunits.com/oneTextarea.html One Textarea design pattern

📦 126.0.1 9/3/2024
🏥 column stack fix

📦 126.0.0 9/3/2024
🎉 added `scrollForm` parser
🎉 added support for `textarea` to ScrollSet forms
🎉 added `abstractTextareaMeasureParser`
🎉 added `mediumColumn`, `thinColumn`, and `wideColumn` parsers.
⚠️ BREAKING: renamed `form` to `classicForm`

📦 125.8.0 9/2/2024
🎉 show * on required form fields

📦 125.7.0 9/2/2024
🎉 added `form` parser

📦 125.6.0 9/2/2024
🎉 metaParser now emits link to git tags

📦 125.5.1 9/2/2024
🏥 make printCsv work with buildCsv

📦 125.5.0 9/2/2024
🎉 heatrix drops first row if after a transpose
🎉 heatrix now does not color years if first row

📦 125.4.0 9/1/2024
🎉 upgrade ScrollSDK

📦 125.3.0 9/1/2024
🎉 cleanup docs to switch to term Particle Syntax (aka Particles).

📦 125.2.0 8/31/2024
🎉 chat parser now supports repeated messages from 1 side via blank lines

Example:

belowAsCode
chat
 I have some questions
 
 What is your current productivity tool
 pen and paper
 Hmm and for project management?
 pen and paper

📦 125.1.0 8/30/2024
🎉 switch `youTube` parser to `youtube` (all lowercase). Deprecate old spelling.

📦 125.0.1 8/29/2024
🏥 particles table fix

📦 125.0.0 8/29/2024
🎉 upgraded ScrollSDK to 84
⚠️ BREAKING: ScrollSDK updates require updating any Parsers with new "Particle" nomenclature
⚠️ BREAKING: `tree` is no longer a table format. Use `particles` instead.

📦 124.1.0 8/28/2024
🎉 added `buildPdf` parser. Currently requires MacOS + Chrome.

📦 124.0.0 8/27/2024
⚠️ BREAKING: removed `printMeasures`
⚠️ BREAKING: removed `printConcepts`
⚠️ BREAKING: `buildConcepts` and `buildMeasures` now generates `csv` by default instead of `tsv`

Before:
codeWithHeader contacts.scroll
 buildConcepts
 printConcepts

After:
codeWithHeader contacts.scroll
 buildConcepts
 table
  printTable

📦 123.3.0 8/27/2024
🎉 ending a column with "Url" in tables will now print the column name linked rather than url

📦 123.2.0 8/26/2024
🎉 added popularity table to leetsheet
🎉 added popularity numbers to parsers
🎉 added csv output to `printUsageStats`

📦 123.1.0 8/26/2024
🎉 updated ScrollSDK
🎉 better Parsers leetsheet documentation

📦 123.0.0 8/25/2024
🎉 updated ScrollSDK
⚠️ BREAKING: (no one should be affected). `printLeetSheet` is now `printScrollLeetSheet`
⚠️ BREAKING: (no one should be affected). `printAvancedLeetSheet` is now `printparsersLeetSheet`

📦 122.0.0 8/25/2024
🎉 updated ScrollSDK to get `paintParser` which replaces `highlightScopeParser`
⚠️ BREAKING: rename `highlightScope` to `paint`

📦 121.0.1 8/20/2024
🏥 web version printTitle fix.

📦 121.0.0 8/19/2024
🎉 emailButton, homeButton, downloadButton can now take a link
⚠️ BREAKING: `wwsButton` is now `downloadButton`
⚠️ BREAKING: removed `email`. Now do `emailButton [email]`
⚠️ BREAKING: removed `downloadUrl`. Now do `downloadButton [url]`

📦 120.2.1 8/19/2024
🏥 fix indent bug in `printRelated`

📦 120.2.0 8/15/2024
🎉 added `br` parser
🎉 added `buildCsv` parser

📦 120.1.0 8/15/2024
🎉 add clickable examples to leetsheet

📦 120.0.0 8/14/2024
🎉 added `emailButton` parser.
🎉 added `scrollVersionLink` parser.
🎉 added `wwsButton` parser.
🎉 `center` parser now also creates centered sections:

center
This should be centered.

⚠️ BREAKING: `printViewSource` is now `viewSourceLink`
⚠️ BREAKING: `pageFooter` has been split into simpler parsers.
codeWithHeader Find/Replace
 find ^pageFooter
 replace
  center
  emailButton
  downloadButton
  viewSourceButton
  scrollVersionLink

📦 119.0.0 8/13/2024
🎉 added `homeButton` parser.
🎉 added `leftRightButtons` parser.
🎉 added `viewSourceButton` parser.
⚠️ BREAKING: removed `pageHeader`. Split that into 3 simpler parsers. Change `pageHeader` to:
codeWithHeader Find/Replace
 find ^pageHeader
 replace
  homeButton
  leftRightButtons
  viewSourceButton
⚠️ BREAKING: `printViewSourceBadge` is now `viewSourceButton`
⚠️ BREAKING: removed `homeUrl`. Insead do:
code
 homeButton
  link ../someOtherURL.html

📦 118.9.0 8/11/2024
🎉 added `video` parser.
belowAsCode
video tests/spirit.mp4
 loop

📦 118.8.0 8/11/2024
🎉 added `music` parser for playing songs, podcasts, sounds, et cetera.
belowAsCode
music tests/sipOfCoffee.m4a
 loop

📦 118.7.0 8/11/2024
🎉 added v0.1.0 of `nickelbackIpsum` parser. Idea from gigamick.
 https://news.ycombinator.com/user?id=gigamick gigamick

📦 118.6.3 8/10/2024
🏥 `label` should show up in scatterplot autocomplete

📦 118.6.2 8/9/2024
🏥 don't trigger keyboard shortcuts if someone is trying to use keyboard back button shortcut. Thanks to Ben Atkin for the bug report!
 https://github.com/benatkin Ben Atkin

📦 118.6.1 8/9/2024
🏥 button link color fix

📦 118.6.0 8/9/2024
🎉 added `button` parser
🎉 added `dinkus` parser

📦 118.5.0 8/8/2024
🎉 make `image` parser easier to extend

📦 118.4.0 8/6/2024
🎉 add `impute` parser

📦 118.3.0 8/6/2024
🎉 `fetch` now writes to localStorage in browser environment.
🎉 `table` now can read from localStorage in browser environment.
🏥 handle empty values in `groupBy` parser

📦 118.2.2 8/6/2024
🏥 fix mac file name lower case issue

📦 118.2.1 8/6/2024
🏥 fix mac file name lower case issue

📦 118.2.0 8/6/2024
🎉 more concise `tableSearch` styling

📦 118.1.0 8/6/2024
🎉 `tableSearch` now adds copy and CSV buttons.

📦 118.0.0 8/6/2024
🎉 tables: added delimiter autodetection
🎉 tables: added columnName autocomplete
🎉 tables: added `transpose` parser
🎉 scatterplot: added x, y, and other autocompletes
⚠️ BREAKING: `sparkline [columnName]` is now `sparkline\n y [columnName]`

📦 117.1.0 8/5/2024
🎉 tables: added `groupBy` parser for "pivot tables"

📦 117.0.1 8/5/2024
🏥 fix highlight bug in where parser

📦 117.0.0 8/5/2024
🎉 tables: added `select` parser
🎉 tables: added `orderBy` parser
🎉 tables: added `rename` parser
🎉 tables: added `reverse` parser
🎉 added `fetch` parser
⚠️ BREAKING: (no one should be affected) Scroll now requires NodeJS >= 18.0.0.

📦 116.0.0 8/3/2024
⚠️ BREAKING: `scatterplot` now gets data from `table`.

📦 115.2.0 8/3/2024
🏥 fix extra space in related snippets

📦 115.1.0 8/3/2024
🏥 more regression fixes.

📦 115.0.2 8/3/2024
🏥 more regression fixes.

📦 115.0.1 8/3/2024
🏥 fix table regression.

📦 115.0.0 8/3/2024
🎉 `table [filename].[json|tsv|csv]` to load and print a table from disk
🎉 `sparkline` now can take a table as input:
code
 table posts.csv
  sparkline
   y wordCount
⚠️ BREAKING: removed support for root level TSV. Not useful enough. Convert any root TSV to a standard table.
⚠️ BREAKING: removed `printTable` at root level. Now works nested under table
⚠️ BREAKING: removed `spaceTable`. See below to migrate.
⚠️ BREAKING: removed `tabTable`. See below to migrate.
⚠️ BREAKING: removed `treeTable`. See below to migrate.
⚠️ BREAKING: removed `commaTable`. See below to migrate.
⚠️ BREAKING: removed `pipeTable`. See below to migrate.
⚠️ BREAKING: `table` now takes delimiter and data parsers. Usage:
table
 delimiter ,
 printTable
 data
  name,score
  Kape,35
Regex to find all breaks: ^(printTable|spaceTable|tabTable|treeTable|commaTable|pipeTable|table )


📦 114.0.0 8/2/2024
🎉 `inlineMarkups` now supports setting attributes and tags
🏥 upgrade scrollsdk to get exponential notation numbers fix
⚠️ BREAKING: (no one should be affected). Removed short form of link inline markup. Just use `a href="url"` instead.

📦 113.0.0 8/1/2024
🎉 added `inlineMarkups` parser. Thanks to eugenesvk for the idea.
 https://github.com/eugenesvk eugenesvk
 https://github.com/breck7/scroll/issues/122 idea
🎉 `printSourceStack` now prints [Unchanged] if the source was not changed during a compiler step.
⚠️ BREAKING: `wrapsOn` is now `inlineMarkupsOn`
⚠️ BREAKING: `wrap` is now `inlineMarkup`

📦 112.1.2 7/31/2024
🏥 counters fix

📦 112.1.1 7/31/2024
🏥 counters fix

📦 112.1.0 7/31/2024
🎉 added `counters` parser.

📦 112.0.0 7/31/2024
🎉 added `printSourceStack` parser to provide a clean way to view source code at each step in compilation.
⚠️ BREAKING: removed `readingList` parser. Aftertext is a better choice.
⚠️ BREAKING: merged `printExpandedSource` and `printOriginalSource` into `printSourceStack`

📦 111.5.0 7/29/2024
🎉 added `buildFiles` to CLI class

📦 111.4.0 7/29/2024
🎉 added `printExpandedSource` and `printOriginalSource` parsers

📦 111.3.0 7/29/2024
🎉 better error messages

📦 111.2.0 7/29/2024
🎉 added `testStrict` parser to allow disabling catch all paragraph on a per file basis.

📦 111.1.0 7/26/2024
🎉 `heatrix` now supports using custom labels even for numeric cells.
🏥 always include a 0 value in `heatrix`
 // not sure if this is correct design.

📦 111.0.0 7/26/2024
🎉 redesigned `heatrix`.
⚠️ BREAKING: (no one should be affected). `heatrix` is now `heatrixAdvanced`. `heatrix` is the simplest fast version now. 

📦 110.3.0 7/25/2024
🎉 print 0's in `heatrix`
🏥 remove stray console.log

📦 110.2.0 7/25/2024
🎉 `printCsv` now includes `year` column
🎉 added `heatrix` parser

📦 110.1.0 7/25/2024
🎉 captions now have the same width as their images

📦 110.0.0 7/24/2024
🎉 `printRelated` now has support for tags! No need to add a `related` line on each post.
⚠️ BREAKING: `groups` is now `tags`.
⚠️ BREAKING: `printRelatedList` is now just `printRelated`.
⚠️ BREAKING: removed `related` parser. Now just use tags. Apply tags liberally.

📦 109.5.0 7/21/2024
🎉 added `codeWithHeader` parser
🎉 added `center` aftertext markup parser
🎉 txt versions of aftertext links now includes the pattern
🎉 added `printFormatLinks` parser

📦 109.4.0 7/21/2024
🎉 `printAdvancedLeetSheet` now also prints cell parser docs

📦 109.3.0 7/20/2024
🎉 easily apply styling to a whole paragraph using aftertext.

Demo:

belowAsCode 4
Hello world
 bold
This is italicized
 italics
Make this code
 code
Strikethrough this whole line.
 strike

📦 109.2.0 7/19/2024
🎉 add `printAdvancedLeetSheet` after feedback in r/WorldWideScroll
 https://www.reddit.com/r/WorldWideScroll/comments/1e77m6p/writing_parsers/ r/WorldWideScroll

📦 109.1.0 7/19/2024
🎉 added support for `height` and `width` to images
🎉 added support for `float` to images

📦 109.0.2 7/19/2024
🏥 fixed incorrect error report.

📦 109.0.1 7/19/2024
🏥 fix cell syntax highlighting in `wrapsOn`. You can write `wrapsOn none` to disable all wraps.

📦 109.0.0 7/18/2024
🎉 `printCsv` now exports `authors` as well
🎉 added `authors` parser to support multiple authors
🎉 `authors` now can use all aftertext features
⚠️ BREAKING: `printAuthor` is now `printAuthors`
⚠️ BREAKING: `author` is now `authors`.

To update from `author` to `authors`, you can use this regex find/replace:

Find: ^author ([^ ]+) (.*)
Replace: authors $2\n $1 $2

📦 108.3.1 7/16/2024
🏥 include microlangs in npm package

📦 108.3.0 7/16/2024
🎉 added `contacts` microlang.
🎉 changed gazetteCss link color to be subtler
🎉 added `microlangs` folder

📦 108.2.0 7/15/2024
🎉 added `center` parser! first blink, now center!

📦 108.1.0 7/15/2024
🎉 table style improvements

📦 108.0.0 7/15/2024
⚠️ BREAKING: (no one should be affected) Renamed `printCheatSheet` to `printLeetSheet`

📦 107.3.0 7/14/2024
🎉 added `printUsageStats` parser.
🎉 docs: bolded commonly used parsers in cheat sheet.
🎉 docs: other cheat sheet improvements.
🎉 docs: `printCheatSheet` now prints good txt only docs too.

📦 107.2.0 7/14/2024
🎉 docs: clearer, more conscise descriptions of 7 words or less on every parser.
🎉 docs: `printCheatSheet` now prints descriptions.

📦 107.1.0 7/14/2024
🎉 add `printCheatSheet` parser v0.1.0

📦 107.0.0 7/14/2024
🎉 correct syntax highlighting for the different kinds of Parsers.
🎉 removed some parsers from appearing in autocomplete
🏥 blink works for any colors now.
⚠️ BREAKING: If you have written your own parsers `keywordCell` has been replaced by `commandWordCell`. You can do a simple find/replace or just add:
code
 keywordCell
  extends commandWordCell

📦 106.0.1 7/13/2024
🏥 fix bug where running `scroll build` through passed in SSH command was hanging

📦 106.0.0 7/11/2024
🎉 added missing documentation for better autocomplete
⚠️ BREAKING: removed deprecated parsers: `startColumns`, `gazetteHeader`, `gazetteFooter`, `byLine`

📦 105.1.0 7/11/2024
🎉 added `printViewSourceBadge` parser

📦 105.0.0 7/11/2024
⚠️ BREAKING: removed the `git` parser. No longer needed now that we use deep link to all source pages.
⚠️ BREAKING: renamed `viewSource` to `printViewSource` to clarify that it prints an HTML element.

📦 104.0.0 7/11/2024
⚠️ BREAKING: the git icons now point to the viewSource url, not to a master git repo page. This should make it easier to go to the specific source file of interest.

📦 103.0.2 7/11/2024
🏥 `pageHeader` and `pageFooter` parsers will now only emit icons for git, downloadUrl, and email if those items are set

📦 103.0.1 7/11/2024
🏥 code div fix in slideshows

📦 103.0.0 7/10/2024
⚠️ BREAKING: shortened `strikethrough` parser to `strike`

📦 102.3.0 7/08/2024
🎉 add support for TSVs to scatterplot

📦 102.2.2 7/08/2024
🏥 measureStats fix

📦 102.2.1 7/08/2024
🏥 `loadConcepts` fix

📦 102.2.0 7/08/2024
🎉 build scrollsets first and so the outputs can be used to build html files

📦 102.1.0 7/07/2024
🎉 integrate feedback from h4l to make tables expand on click
 https://www.reddit.com/r/programming/comments/1dwvezp/comment/lc0ytu6/ feedback from h4l

📦 102.0.0 7/06/2024
🎉 changed `relatedParser` to `relatedScrollFilesParser` to free up `relatedParser` for userland.
⚠️ BREAKING: renamed `relatedList` to `printRelatedList`

📦 101.6.0 7/06/2024
🎉 added `sortBy` to `printConcepts` parser

📦 101.5.0 7/05/2024
🎉 `scroll init` generates a smaller site

📦 101.4.0 7/04/2024
🎉 renamed `descriptionParser` to `openGraphParser` and `titleParser` to `pageTitleParser` to free up those names for userparserland.

📦 101.3.0 7/03/2024
🎉 added `buildJs` and `script` parsers

📦 101.2.0 7/03/2024
🎉 added `buildCss` parser
🏥 fix css text regression

📦 101.0.1 7/03/2024
🏥 fix sitemap regression

📦 101.0.0 7/03/2024
This is a major breaking release meant to simplify and standardize a lot of the core Scroll concepts.
🎉 added `buildHtml` parser
🎉 added `buildRss` parser
🎉 you no longer need to write `importOnly` on a file if the file uses no buildCommandParsers.
⚠️ BREAKING: `snippets` => `printSnippets`
⚠️ BREAKING: `fullSnippets` => `printFullSnippets`
⚠️ BREAKING: `buildText` => `buildTxt`
⚠️ BREAKING: `scroll build` will no longer write anything by default. You now need to explicitly include 1 or more buildCommands in your files, such as `buildHtml` or `buildTxt`.
⚠️ BREAKING: removed `tags` parser in css themes. Instead of this:

code
 permalink style.css
 gazetteCss
  tags false
Do this:

code
 buildCss style.css
 gazetteCss

📦 100.0.0 7/02/2024
🎉 if not present, `date` is now derived from file creation time
🎉 if not present, `title` is now computed by un-camelcasing the filename
⚠️ BREAKING: (no one should be affected) date and title are now computed automatically so if you had a file missing those previously on purpose (for some reason), they will now actually have those.

📦 99.2.0 7/01/2024
🎉 added changes.parsers
🎉 Scrollsets now supports defining concept delimiters other than `id`

📦 99.1.0 7/01/2024
🎉 added `limit` parser to snippets

📦 99.0.0 6/30/2024
⚠️ BREAKING: I moved `wws` to its own repo

📦 98.0.2 6/30/2024
🏥 another missing file in package fix

📦 98.0.1 6/29/2024
🏥 fix bug #115 in `wws`. Thank you Nick Noble!
 https://github.com/breck7/scroll/issues/115 bug #115
 https://github.com/nickisnoble Nick Noble

📦 98.0.0 6/26/2024
⚠️ BREAKING: `writeText` is now `buildText`
⚠️ BREAKING: `writeConcepts` is now `buildConcepts`
⚠️ BREAKING: `writeMeasures` is now `buildMeasures`
⚠️ BREAKING: (no one should be affected), `buildFilesInFolder` now returns an object of all built files.

📦 97.4.0 6/25/2024
🎉 added `scatterplot` can now take a url as a data source

📦 97.3.1 6/24/2024
🏥 bug fix

📦 97.3.0 6/24/2024
🎉 added `scatterplot` parser

📦 97.2.0 6/23/2024
🎉 added `stamp` mini language

📦 97.1.1 6/21/2024
🏥 test fix

📦 97.1.0 6/21/2024
🎉 added `sparkline` parser using beautiful tiny sparkline library by Marius Gundersen.
 https://github.com/mariusGundersen/sparkline sparkline library
 https://mariusgundersen.net/ Marius Gundersen

belowAsCode
sparkline 5 7 27 87 300 17 10 5

📦 97.0.0 6/19/2024
🎉 BREAKING: upgraded scrollSDK to get `grammar` to `parsers` change.

📦 96.0.0 6/18/2024
🎉 Instead of `grammar` it's just `parsers`.
⚠️ BREAKING: (no one should be affected) files previously ending in `.grammar` now end in `.parsers`.

📦 95.2.0 6/16/2024
🎉 added `formatAndSave` method.

📦 95.1.0 6/14/2024
🎉 added `wws` command line app.

📦 95.0.0 6/11/2024
🎉 added `downloadUrl` parser.
⚠️ BREAKING: `canonicalLink` is now `canonicalUrl`.
⚠️ BREAKING: `homeLink` is now `homeUrl`.

📦 94.0.1 6/1/2024
🏥 make slideshow start after the first dinkus

📦 94.0.0 5/31/2024
🎉 jtree is now the "ScrollSDK" and "Tree Notation" is now "Particles"
⚠️ BREAKING: (only advanced users affected), if you wrote custom Parsers, you may need to find/replace `jtree` with `scrollsdk`

📦 93.7.1 5/30/2024
🏥 katex should print contents in txt compilation

📦 93.7.0 5/29/2024
🎉 added `classes` parser

📦 93.6.2 5/28/2024
🏥 more Windows fixes

📦 93.6.1 5/28/2024
🏥 upgrade JTree to try and get Scroll working on Windows

📦 93.6.0 5/28/2024
🎉 clean up generated html (add a <body> tag).

📦 93.5.0 5/27/2024
🎉 clean up generated html (add a <head> tag, for instance).

📦 93.4.0 5/27/2024
🎉 improved meta tags

📦 93.3.0 5/27/2024
🎉 all Parsers can now use `requireOnce`
🎉 added `abstractCustomListItemParser` for making HTML lists with custom markers
🏥 bug fix in slideshow

📦 93.2.0 5/23/2024
🎉 `writeConcepts` and `writeMeasures` now strips blank values when generating JSON and/or JS

📦 93.1.0 5/23/2024
🎉 `tableSearch` now will save the sort order to the url
🏥 fixed bug where updates to externals would not get copied

📦 93.0.0 5/21/2024
🎉 `scroll format` command now also prettifies concepts and measurements in ScrollSets. If a measurement's `sortIndex` jumps to a new integer (for example, 1.9 to 2.1), a newline will be inserted before it.
⚠️ BREAKING: (no one should be affected) the default `sortIndex` is now 1.9, and the sort index of `id` is 1.0. Update `sortIndex` accordingly.

📦 92.0.0 5/20/2024
🎉 simplified ScrollSets by removing the filename "magic". When putting a concept into a file, make the `id` the filename (without the extension). Have the id be a simple one word url friendly string. If you want a pretty title, add a `name` measure. Everything much simpler this way.
⚠️ BREAKING: (no one should be affected) remove any spaghetti filename code.

📦 91.0.0 5/19/2024
🎉 `printAuthor` parser prints the author defined by `author`. `byLine` has been deprecated--replace with `printAuthor`.
⚠️ BREAKING: `author` parser now takes a URL.

📦 90.5.0 5/19/2024
🎉 added `printDate` parser

📦 90.4.1 5/19/2024
🏥 `helpfulNotFound` now assumes the script can be found at the root of the domain.

📦 90.4.0 5/19/2024
🎉 helpful 404 can now take multiple sitemaps as a parameter

📦 90.3.0 5/18/2024
🎉 renamed `Scroll Datasets` to `ScrollSets`.

📦 90.2.3 5/18/2024
🏥 `Coverage` in Measurements should round down.

📦 90.2.2 5/18/2024
🏥 fixed Grammar method name conflict with measures. Now they should be `isMeasureRequired`.

📦 90.2.1 5/18/2024
🏥 fixed `metaTags` from breaking try.scroll.pub
🏥 got `slideshow` working on try.scroll.pub

📦 90.2.0 5/18/2024
🎉 added `slideshow` parser
🎉 grammar extensions can now use "copyFromExternal"

📦 90.1.1 5/17/2024
🏥 added test and fixed bug with `printTitle` in text files

📦 90.1.0 5/17/2024
🎉 2.5x faster test running thanks to adding cacheing to measure parser

📦 90.0.0 5/16/2024
⚠️ BREAKING: `idParser` and `filenameParser` no longer ship in default grammar. This will allow for useful future dataset features. Instead, add them yourself if you are using Concepts like this:

code
 idParser
  extends abstractIdParser
 filenameParser
  extends abstractFilenameParser

📦 89.2.1 5/16/2024
🏥 fixed required measurements when computeds are involved
🎉 print folder name when running scroll test

📦 89.2.0 5/16/2024
🎉 added support for required measurements

📦 89.1.2 5/16/2024
🏥 loadConcepts should only load Scroll files containing a concept (as determined by having an "id ").

📦 89.1.1 5/16/2024
🏥 minor fix in themes grammar.

📦 89.1.0 5/15/2024
🎉 added ability to override content in `printTitle`

📦 89.0.0 5/15/2024
🎉 `printTitle` parser added for easier templates
⚠️ BREAKING: `title` is now a setter. This regex handles the migration:
 - `^title ` `printTitle\ntitle `
  - Then (optionally) run "scroll format" or "scroll list | scroll format" to format which will automove your titles up top.

📦 88.0.0 5/15/2024
🎉 easier snippets! if you have a dinkus anywhere "***|****|---", that will be used as an "endSnippet"
⚠️ BREAKING: (no one should be affected). If you had a post that purposefully had no `endSnippet` and does have a dinkus, it will now generate a snippet rather than using the whole post.

📦 87.0.1 5/15/2024
🏥 fixed off by 1 bug in computed measures

📦 87.0.0 5/14/2024
⚠️ BREAKING: added stricter conventions for `measureNames`. Restrict them from containing "_", which we use to combine nested measures.

📦 86.0.2 5/12/2024
🏥 add relative paths to sitemaps if needed

📦 86.0.1 5/12/2024
🏥 improved test coverage

📦 86.0.0 5/12/2024
🎉 added a v1 version of a markdown style of doing quotes `>` (with aftertext support)!
🎨 made the View Source links have same style as other Scroll chrome, and removed those links in short snippet renders (never get needed there--only on the actual page)
⚠️ BREAKING: if you have any lines starting with `> `, those will now be parsed by the quickQuoteParser

📦 85.9.0 5/12/2024
🎉 added `minutes` to read (assuming 200 words/minute) to `printSearch` and `printCsv` exports
🎉 you can now pass groups to `sitemap` for making sitemaps specific to certain folders/groups
🎉 for `printFeed`, `snippets`, `fullSnippets` providing groups is now optional

📦 85.8.0 5/10/2024
🎉 measures and concepts can now also be written as Javascript for explore pages.

📦 85.7.0 5/10/2024
🎉 `replaceJs` now has access to the filepath

📦 85.6.0 5/10/2024
🎉 `sortBy` can now sort on multiple columns and handle asc/desc

📦 85.5.0 5/10/2024
🎉 `writeConcepts` and `writeMeasures` can now take multiple filenames in one line and also include a `sortBy` condition.

📦 85.4.0 5/10/2024
🎉 Scroll now auto-adds a "filename" measure as to which file the concept appears in.

📦 85.3.0 5/10/2024
🎉 Scroll now only wraps compiler output with html tags if permalink ends in "html" or "htm". Makes it easier to use Scroll to compile files to different language targets.

📦 85.2.1 5/10/2024
🏥 fixed bug where `id` measure was appearing twice

📦 85.2.0 5/10/2024
🏥 fixed bug with nested measure names.
🎉 some slight enhancements to computed measures

📦 85.1.0 5/09/2024
🎉 added support for nested measures. The underscore "_" character is used for column names for nested measures for the broadest compatibility with other data science tools

📦 85.0.0 5/08/2024
🎉 upgraded jtree to get ability for faster compilations
⚠️ BREAKING: removed `replaceDefault` parser. No one should be affected.
⚠️ BREAKING: renamed `nodejs` parser to `replaceNodejs. Few should be affected.

📦 84.10.1 5/08/2024
🏥 fix hanging test (infinite loop regression) during build when you have just 1 file.

📦 84.10.0 5/08/2024
🎉 faster html generation when `keyboardNav` was in use. First implementation was accidentally quadratic.

📦 84.9.0 5/08/2024
🎉 faster concepts and measures compilation

📦 84.8.1 5/07/2024
🏥 `printSearchTable` now generates correct links when searching across multiple folders

📦 84.8.0 5/07/2024
🎉 `tableSearch` now takes a parameter from the url `#q=[search]`. Updating the searching box also updates url.

📦 84.7.0 5/07/2024
🎉 Added `printSearchTable` parser

📦 84.6.0 5/07/2024
🎉 Added support for computed measures
🎉 better measure statistics printing

📦 84.5.1 5/07/2024
🏥 better error printing with `scroll test` and fix bug in `percentCell`

📦 84.5.0 5/07/2024
🎉 Added `writeMeasures` and `printMeasures` parsers
🎉 Added `abstractPercentageMeasureParser`

📦 84.4.0 5/06/2024
🎉 Added `loadConcepts` parser for if you had a dataset split into many files in a folder.
🎉 Added `float sortIndex [int]` for sorting the measures(columns) in dataset generation. Lower sort indexes come first.

📦 84.3.0 5/06/2024
🎉 `scroll test` will now report if an aftertext pattern has no matches.

📦 84.2.0 5/06/2024
🎉 added `****` as an "end of post dinkus" which prints ⁂
🎉 tabular tables now support aftertext!
🏥 allow multiword strings to be used as an `id` in concepts

📦 84.1.0 5/04/2024
🎉 snippets now export some content in plain text
🎉 improved the default site generated by `scroll init`

📦 84.0.0 5/04/2024
🎉 Datasets (aka "Concept files") version 2! Much simpler.
🎉 Added the `id` parser for using datasets.
🎉 Removed the `[measureName]: ` syntax introduced in version 77. You no longer have to worry about the annoyance that introduced when writing a paragraph such as "Sidenote: yada yada".
🎉 Added `belowAsCodeUntil` parser

⚠️ BREAKING: removed `::` parser. Now concepts are simply identified by the parser `id`.
⚠️ BREAKING: `writeDataset` is now `writeConcepts` and `printDataset` is now `printConcepts`.
⚠️ BREAKING: Removed the `[measureName]: ` syntax introduced in version 77. To use datasets (aka Concept files) now, just extend Scroll parsers like you normally would. See this blog post for an example.
 link blog/datasets.html this blog post for an example

📦 83.3.0 5/04/2024
🎉 repeating the baseUrl after `openGraphImage` is no longer required. Will be auto-added if not present.

📦 83.2.0 5/04/2024
🎉 added `link` under `image`. Also added `target`.
🎉 for posts with multiple images, you can now put `openGraph` under an `image` node as an alternative to adding a separate `openGraphImage` line
🎉 added `mediumColumns` parser
🎉 added `thinColumns` parser.

* Note: `startColumns` will eventually be removed. You can now safely switch those to `thinColumns`.

📦 83.1.0 5/03/2024
🎉 added `expander` parser

expander Click me
Anything in the section will show up here. A blank line ends a section.

📦 83.0.0 5/03/2024
🎉 all tables now print in plain text outputs
🎉 added `printTable` parser
⚠️ BREAKING: root level tabular tables no longer produce output. Add a `printTable [index]` to print any existing tabular tables.

`printTable` will look for a table to print using this strategy:
- If an index is provided, print that table.
- Else, is there a table right below this line?
- Else, is there a table right before this line?
- Else, print the first table in the file.

📦 82.2.0 5/03/2024
🎉 pruned more files from `npm install`

📦 82.1.0 5/03/2024
🎉 pruned dependencies to make `npm install -g scroll-cli --production` fast

📦 82.0.1 5/01/2024
🏥 fixed regression where `endSnippet` was showing up in html

📦 82.0.0 5/01/2024
🎉 meta tags can now have nested comments
🎉 added `formatCommand` to the CLI for nicely formatting files, moving top matter to the top, cleaning up white space, etc, so you don't have to worry about that.
🎉 plain text files now will have a maximum of 2 blank lines in a row
🎉 plain text files now print date, if there's a dateline

The current formatting conventions are:

- Scroll files end in a single newline
- Trailing spaces and tabs are stripped from lines, unless the whole line is whitespace
- `importOnly`, if present, is moved to the very top
- 3 or more newlines are trimmed down to 2
- Meta tags are moved to the top of the file
- 2 newlines comes after meta tags
- Tags that print content and comments stay put
- Meta tags are sorted alphabetically with no blank lines in between [In the future, may want to allow customizing this]

Note that currently the `title` tag is a meta tag and a tag that prints content. Going to split that up into 2 tags soon.
Note that if you are doing something like a tutorial and using a `belowAsCode` where you purposely put a top matter parser not at the top, it will currently get moved to the top by format. We can probably add a feature like treating meta nodes with `// noFormat` as if they were content nodes.

📦 81.2.0 4/30/2024
🎉 added `related` and `relatedList` parsers

📦 81.1.0 4/29/2024
🎉 added `plainTextOnly` for rare case when you need to include content only for the plain text version.
🏥 `html` should not print in text versions (since it is _html_ :)).

📦 81.0.0 4/29/2024
🏥 links now appear in plain text output. relative links are made absolute.
🏥 indented lists now appear in plain text output.

⚠️ BREAKING: (no one should be affected) if you extended the `thoughtParser`, that is now called `paragraphParser`.

📦 80.2.1 4/29/2024
🏥 fixed regression in tabular tables printing
// a hint that we should refactor that and make all table printing explicit :)

📦 80.2.0 4/29/2024
🎉 added `helpfulNotFound` parser for better 404s.

📦 80.1.0 4/29/2024
🎉 `wordCount` in `printCsv` now measures wordCount in the text version of a post.

📦 80.0.0 4/29/2024
🎉 Scroll now generates text files! Added the `writeText` parser.
 link blog/textFiles.html Scroll now generates text files

* Note: there are likely to be a few rapid releases to refine this.

📦 79.1.0 4/27/2024
🎉 added `printSiteMap` parser for text sitemap generation.

📦 79.0.1 4/27/2024
🏥 fix npm issue

📦 79.0.0 4/27/2024
🎉 better offline builds: if used, katex, tableSearch, and maps now copy their needed css and js into their folder and those assets are served locally rather than through CDN.
⚠️ BREAKING: you may need to make some slight updates, such as adding the copied files to .gitignore.

📦 78.0.2 4/27/2024
🏥 open graph image url fix: remove the extra "/" which caused images not to show in Twitter

📦 78.0.1 4/26/2024
🏥 style fix: ensure column splits don't separate images from their captions

📦 78.0.0 4/25/2024
🎉 made tabular data a root level parser in Scroll.
⚠️ BREAKING: if you had lines with tabs that currently match the catchall paragraph, you'll need to make those explicit paragraphs to avoid them getting parsed by the tabular data parser. You should be able to find those lines with a regex like this: `^(\t|[^ ]+\t)`

Spreadsheets are great tools for working with tabular data. I want to copy/paste between Scroll docs and spreadsheets. This makes it easier.

Tabular data is better than line orientation for experimental data because it requires half the number of tokens and it's more efficient eye movement during comparisons and proofreading.

Scroll already supported tabular data using `tabTable`, but that made copy/paste workflows between spreadsheets and text editors a pain. This should be more ergonomic and make it easier to work with this useful tool of thought.

📦 77.3.1 4/23/2024
🏥 style fix: fixed style bug where on narrow screens the post title would overlap the corner nav buttons.

📦 77.3.0 4/22/2024
🎨 updated presentation of footnotes

📦 77.2.0 4/22/2024
🎨 improved default table styles

📦 77.1.0 4/21/2024
🎉 Simplified datasets further after user tests.

📦 77.0.0 4/21/2024
🎉 Added Scroll Datasets, which consists of the `::`, `printDataset`, `writeDataset`, and `*:` and `*::` parsers.
 link blog/datasets.html Scroll Datasets

⚠️ BREAKING: if you had lines starting with a word then colon, that used the catchall paragraph, such as `Sidenote: yada yada.`, those will now be parsed incorrectly as measures. Just explicitly make them paragraphs `* Sidenote: yada yada.`. This regex can help you find any instances: `^[^ ]+: .`

📦 76.0.0 4/19/2024
🎨 try using "rem" in CSS to better support the "zooming out" effect on a blog

The code below added to a page will create the zoom out effect:

code
 css html {font-size: var(--base-font-size, 8px);}

⚠️ BREAKING: There might be some slight style breaks related to this change.

📦 75.2.1 4/18/2024
🏥 style fix: removed top margin on headers when they are in the first section

📦 75.2.0 4/18/2024
🎨 increased the default font-size from 14px to 16px
🎨 changed the font-family and line height of captions which previously looked off
🎨 adjusted margins on question h4s
🏥 fix slight line-height issue with datelines

📦 75.1.1 4/16/2024
🏥 fix bug where quick links could not be used inside a footnote definition.

📦 75.1.0 4/10/2024
🎉 Added `***` parser to print a Dinkus
 https://en.wikipedia.org/wiki/Dinkus Dinkus

belowAsCode 6

Now I will show an example.

***

Above is a dinkus.

📦 75.0.0 4/06/2024
🏥 Revert version 74. There was a simpler way to fix that pattern.

📦 74.0.0 4/06/2024
- (Reverted)

📦 73.2.0 4/05/2024
🎉 added `thanksTo` parser

📦 73.1.0 4/05/2024
🎉 added `plainText` parser
🎉 added `printSource` parser to be able to dump the source code for a group of posts to a plain text file.

📦 73.0.0 4/03/2024
🎉 added `printCsv` parser to make it as easy to generate a CSV of a blog as it is to generate an RSS feed

📦 72.4.4 2/07/2024
🏥 do not print "undefined" in tables in rows missing columns

📦 72.4.3 11/04/2023
🏥 fix extra indentation in nested lists. Browser already adds it.

📦 72.4.2 11/04/2023
🏥 do not compile aftertext nodes having the "hidden" attribute

📦 72.4.1 11/04/2023
🏥 fixed regression where `<!DOCTYPE html>` was present in RSS pages. Thank you to Joao for the report.

📦 72.4.0 6/27/2023
🎉 provide "dropcap" CSS class.
🎉 tweaked default styling of images and captions

This paragraph has a dropcap. It can be a useful visual aid for the reader to break up sections. You can read more about dropcaps on Wikipedia.
 class dropcap
 https://en.wikipedia.org/wiki/Initial dropcaps on Wikipedia

📦 72.3.0 6/13/2023
🎉 if you want to disable `wrapsOn` you can now provide parameters to specify only the wraps you want, if any.
🏥 by default katex wraps won't run unless there is a `katex` node in a file. So any paragraph containing multiple $ will now behave as before katex wraps were added.

📦 72.2.0 5/31/2023
🎉 added `wideColumns` parser

📦 72.1.0 5/26/2023
🏥 Bold and italics are no longer parsed inside inline code `2*4*2` or inline $\KaTeX$ $X_{2_i}$.

📦 72.0.0 5/25/2023
🎉 added support for inline $\TeX$ via $\KaTeX$.
 - Current implementation requires adding at least one `katex` node in your file and will load the KaTeX code.

katex

📦 71.5.0 5/19/2023
🎉 added support for extra newlines between items in ordered lists
🎉 added support for custom footnote labels and move footnote link to end with new style
🎉 added hover style to "Built with Scroll" footer link

📦 71.4.0 5/9/2023
🎉 style improvements to lists

📦 71.3.0 5/8/2023
🎉 added `program` parser for Program Links. See blog post for details.
 link blog/programLinks.html blog post

📦 71.2.0 5/07/2023
🏥 add `&lt;!DOCTYPE html&gt;` to improve performance on Google Lighthouse.
🏥 fix regression of meta description generation and add test
🏥 upgrade JTree to get colorized test output

📦 71.1.0 5/07/2023
🏥 add `&lt;html lang&gt;&lt;/html&gt;` back as you need that to get proper hyphenation. Added test.
🎉 added `htmlLang` parser for overriding the default lang which is set to "en"
🎉 added `text-align: justify;` on paragraphs to Gazette and Tufte themes.

📦 71.0.0 5/06/2023
🎉 added `tufteCss` beta theme.
🎉 added `###`, `####` and `#####` headers.
⚠️ BREAKING: slight changes to the h1-h4 font sizes and margins in the default gazetteTheme.
 - A single # is now h1, ## is h2, et cetera. `title` can be thought of as `h0`.
⚠️ BREAKING: `gazetteHeader` is now `pageHeader` and `gazetteFooter` is now `pageFooter`. Headers and footers can be independent of themes.

📦 70.0.0 4/29/2023
🎉 Paragraphs no longer need to start with '* '. All non-blank lines that don't start with a defined parser are now treated as a paragraph. The catch-all is no longer an error. It is recommended to start all paragraphs with a capital letter, as in the future it may become the standard that parsers start with a lowercase or symbol, and you will avoid any future parser collisions.
 - Thanks to zoeartemis for the feedback.
 - No changes are needed but you can update your files with the find/replace combo: `\n\* ` `\n`.
  - You may want to use the case sensitive `\n\* [a-z]` search first to find any paragraphs that start with a lowercase letter.
  - You also want to be careful of any lines that would now start with `&lt;!`, as they will be parsed as HTML nodes.

📦 69.3.0 4/26/2023
🎉 Add `katex` parser. KaTeX: "The fastest math typesetting library for the web."
 https://katex.org/ KaTeX

📦 69.2.0 4/18/2023
🎉 added the `tag` parser to thought nodes so you can change the compiled html tag (needed in rare circumstances)
🎉 added the `thought` parser and standardized vocab to calling the thought node the main node that most nodes extend.
🎉 added the `style` parser to provide inline html styles to a thought node.

📦 69.1.4 4/13/2023
🏥 get tfs fixes in jtree

📦 69.1.3 4/13/2023
🏥 get tfs fixes in jtree

📦 69.1.1 4/13/2023
🏥 Improve syntax highlighting of counters and comments

📦 69.1.0 4/13/2023
🎉 Added counters

📦 69.0.0 4/9/2023
No one should be affected. This was an internal rewrite to upstream the imports code to `ParticleFileSystem` in Jtree. No changes for Scroll users.
⚠️ BREAKING: `scrollKeywords` is no longer exported
⚠️ BREAKING: `DefaultScrollCompiler` is now `DefaultScrollParser`
⚠️ BREAKING: `ScrollDiskFileSystem` and `ScrollInMemoryFileSystem` replaced by `ScrollFileSystem`

📦 68.0.0 4/3/2023
Simplify theme building.
⚠️ BREAKING: `gazetteTheme` is now `gazetteCss`.
⚠️ BREAKING:
code
 // Change `gazetteTheme noTags` to:
 gazetteCss
  tags false

📦 67.1.0 4/3/2023
Maintenance release. Update packages and remove unused package and specify required NodeJs versions accurately.

📦 67.0.0 4/2/2023
This is _The Theme Release_.
🎉 Introduce the idea of parsers for theming scrolls.
⚠️ BREAKING: `author` node is now `byLine`. `author` is kept for now but updating is recommended.
⚠️ BREAKING: `scrollCssTag` is gone. use `gazetteTheme` for previous behavior. `scrollCss` is gone, use `gazetteTheme noTag`.
⚠️ BREAKING: SCROLL_CSS has been removed. `gazetteTheme` now contains that CSS code.
⚠️ BREAKING: `scrollHeader` is now `gazetteHeader` and `scrollFooter` is now `gazetteFooter`
⚠️ BREAKING: css classes: `scrollHeaderComponent` => `gazetteHeader`, `scrollFooterComponent` => `gazetteFooter`
⚠️ BREAKING: `kpiTable` is now `dashboard`

📦 66.0.0 4/2/2023
⚠️ BREAKING: This upgrades to JTree 73 and Grammar 6. Any custom grammar files need to be updated (generally this just means a find/replace of `Node` to `Parser`).

📦 65.0.0 3/30/2023
🎉 Upgrade to Jtree 71 to get Grammar 5 wiith scoped parsers.

📦 64.0.0 3/28/2023
🎉 Upgrade to Jtree 70 to get Grammar 4. Now comments and blank lines are okay in grammars.

📦 63.1.0 3/27/2023
🎉 Added `abstractScrollWithRequirementsNode` and use it for `copyButtons` and `map` to only include the external JS and CSS once.
🎉 Added `compileSettings` as an input in all Scroll nodes rather than maintaining state on instances
🏥 minor code cleanup and bug fixes

📦 63.0.1 3/27/2023
🏥 cache hotfix for embedded snippets.

📦 63.0.0 3/27/2023
This was a big internal refactor to remove the outdated concept of `ScrollFolder` and rely on the file system parameter instead. This makes it easier to build webapps serving dynamic Scroll pages. It also simplifies the upcoming isomorphic release.
⚠️ BREAKING: Only users using Scroll as a module may be affected:
 - Removed `ScrollFolder`. Exports now include `ScrollDiskFileSystem` and `ScrollInMemoryFileSystem`. To get the same behavior as `new ScrollFolder("folder").buildFiles()` use `new ScrollDiskFileSystem().buildFilesInFolder("folder")`.
 - Instead of `new ScrollFolder(__dirname).defaultScrollCompiler` use `DefaultScrollCompiler`
⚠️ BREAKING: Only users using Scroll extensions may be affected:
 - In extensions `compileSnippet` should now be `compileEmbeddedVersion`
 - Instead of `file.folder.folder` use `file.folderPath`
⚠️ BREAKING: Only users using `loop` may be affected:
 - Temporarily renamed `relativeLink` to `linkRelativeToCompileTarget`

📦 62.5.1 3/27/2023
🏥 if something goes wrong in a nodejs block, be sure to clean up the temporary file

📦 62.5.0 3/23/2023
🎉 New parser `canonicalUrl` if you need to include query strings in canonical link.

code
 canonicalUrl https://scroll.pub/tests/maps.html?canonLinkTest=true

📦 62.4.0 3/23/2023
🏥 SEO fix: metaTags now sets canonical link

📦 62.3.0 3/22/2023
🎉 New parser `map` using LeafletJS
 https://leafletjs.com/ LeafletJS

📦 62.2.0 3/15/2023
🎉 Added `copyButtons` parser. Use that to give code blocks a copy-to-clipboard button on hover.

📦 62.1.0 3/13/2023
🎉 Added `nodejs` node for including small node.js scripts inside a Scroll file, similar to a PHP snippet. <?php ?>. The snippet is written to disk and then require is used to run it. Exports variables are then replaced throughout the script.

📦 62.0.1 3/13/2023
🏥 fixes bug when using custom grammars with in memory node types.

📦 62.0.0 3/11/2023
🎉 Support for in memory file systems. Useful for dynamic websites and future web browser versions and versions with url imports.
⚠️ BREAKING: (no one should be affected). `ScrollFolder` constructor now requires an argument. You can now pass an object as a second param to use a virtual filesystem.
⚠️ BREAKING: (no one should be affected). Removed `DefaultScrollCompiler` export. Instead use `new ScrollFolder().defaultScrollCompiler`

📦 61.0.0 3/11/2023
⚠️ BREAKING: (no one should be affected). Removed `buildNeeded` method only used programmatically by PLDB. Switching that to dynamic generation which is a better pattern.

📦 60.0.0 3/10/2023
🎉 Added `quickHtml` node. A line starting with `<` will be treated as an `html` node. So these are the same:

code
 html <hr>
 <hr>

⚠️ BREAKING: (no one should be affected). The default _catch all_ node will still report as an error but will now behave as if it's a paragraph (`*`) node.

📦 59.6.0 3/10/2023
🎉 Added Horizontal line parser: `---`

---

📦 59.5.0 3/9/2023
🎉 Additional shorter comment syntax: `//`. Previously it was only `comment`

// This comment won't appear in the HTML

📦 59.4.0 3/7/2023
🏥 fix relative links when using snippets from multiple folders
🎉 ability to override the default home link in the default theme

📦 59.3.0 3/6/2023
🏥 CSS fix in default theme so super elements in footnotes don't increase line-height.

📦 59.2.0 3/6/2023
🎉 Default theme change: links are now only underlined on hover.

📦 59.1.0 3/6/2023
🎉 `scroll init` now creates a `.gitignore` file and also runs `git init`.

📦 59.0.0 3/3/2023
🎉 `image` parser now supports `class` and `id` tags
🎉 `class` tag with just a class will now apply to the whole parent element and not insert a span
🏥 fix so image tag works in try.scroll.pub

📦 58.5.1 3/2/2023
🏥 don't compile linkify node to HTML

📦 58.5.0 3/2/2023
🎉 you can now disable linkify on a node.

📦 58.4.0 3/1/2023
🎉 you can now create new loop item providers in extensions by extending `abstractItemsProviderNode`

📦 58.3.1 2/28/2023
🏥 markup directives in indented lists should not compile to anything

📦 58.3.0 2/28/2023
🎉 checklists! use `[]` and `[x]`
🎉 lists `-` are now indentable

## Scroll now has checklists!

[x] Support checklists
 [x] Make them indentable
[] Solve world peace
- Regular Lists are also now indentable
 - This is a child
  - And this is a grandchild

📦 58.2.3 2/22/2023
🏥 Windows fix

📦 58.2.2 2/21/2023
🏥 Bug fix

📦 58.2.1 2/21/2023
🏥 fix for empty cells

📦 58.2.0 2/21/2023
🎉 table nodes now make cells that are just a link links

📦 58.1.0 2/16/2023
🎉 added `loop` node type:

belowAsCode
loop
 words #2a2d34ff #009ddcff #f26430ff #6761a8ff #009b72ff
 javascript `<span style="background-color: ${item}; width: 30px; height: 30px; display: inline-block;">&nbsp;</span>`

📦 58.0.1 2/9/2023
🏥 made `startColumns` clear the section stack. Simpler behavior.

📦 58.0.0 2/9/2023
⚠️ BREAKING: (no one should be affected). `getFullyExpandedFile` is no longer exported. Instead use: `new ScrollFile(undefined, filePath).importResults.code`
⚠️ BREAKING: (no one should be affected). Order of params to `ScrollFile` have changed. `absoluteFilePath` is now param #2, instaed of #3.
🏥 mtime fixes for cache builds.

📦 57.0.1 2/8/2023
🏥 fix permalink regression

📦 57.0.0 2/8/2023
🎉 added support for `css` one liners
 class blueOneLiner
css .blueOneLiner { color: blue;}
aboveAsCode 2

🎉 `title` nodes are now proper aftertext nodes and can use all features of aftertext
🎉 the `hidden` parser can now be used on any aftertext node
🏥 if there is no `permalink` on a file the `title` node won't output an a tag
⚠️ BREAKING: (no one should be affected). If you had put markup directives in your title tags, such as *bolds*, those will now actually be evaluated.
⚠️ BREAKING: `title` blocks now start a section like `#` and `##`, so you may need to add an empty line to end the section, for example if you previously had a `startColumns` right after the title tag.

📦 56.1.0 2/8/2023
🎉 `snippets` nodes can now accept multiple groups and also groups can be in different folders. Syntax is `[folderPath]/[groupName]` For example:

scrollCode
 # The Long Beach Pub
 snippets 2023/index stories/index 2022/index

📦 56.0.1 2/7/2023
🏥 fix bug with images after jtree upgrade

📦 56.0.0 2/7/2023
⚠️ BREAKING: upgraded to `jtree` 66. If you are extending Scroll you may need to migrate extensions.

📦 55.6.0 2/7/2023
🏥 tweaks to improve site created by `scroll init`

📦 55.5.0 1/31/2023
🎉 `aboveAsCode` and `belowAsCode` now take an optional number for showing multiple nodes.
🎉 default list CSS style has been adjusted slightly to move bullets inline.
🎉 New list type: _ordered lists_:
belowAsCode 3
1. One
2. Two
3. Three

📦 55.4.1 1/31/2023
🏥 fix spurious `table` grammar error message

📦 55.4.0 1/30/2023
🎉 added `table` parser which supports custom delimiters:

table
 delimiter &&
 data
  name&&score
  kaia&&400
  pemma&&100
aboveAsCode

📦 55.3.0 1/29/2023
🎉 the `class` aftertext directive now inserts a span across the whole element content if no text search is provided.

css
 .classDemo {color:blue;}
aboveAsCode
belowAsCode
This whole text will be blue.
 class classDemo

📦 55.2.0 1/26/2023
🏥 upgrade jtree

📦 55.1.0 1/20/2023
🎉 added `replaceJs` parser.

📦 55.0.1 1/19/2023
🏥 fix bug where variables were replacing themselves, leading to possible errors.

📦 55.0.0 1/19/2023
🏥 improve detection of piped input.
🏥 improve `youTube` CORS fix to work whether someone includes www.youtube or not.
⚠️ BREAKING: removed `watch` command. `nodemon` can be used for hot reloading. Install with `sudo npm install -g nodemon`. Then run:

bashCode
 nodemon -e scroll -x "scroll build"

Or alias it:

bashCode
 alias watch="nodemon -e scroll -x 'scroll build'"

You can add the following code to the page(s) you are working on to have them reload without manually refreshing the browser:

scrollCode
 html <meta http-equiv="refresh" content="1;">

📦 54.1.0 1/19/2023
🏥 `scroll init` no longer starts with a `viewSourceBaseUrl`. If not provided then the View Source link is to the scroll file, so new sites don't start with broken links.

📦 54.0.0 1/19/2023
🎉 `link` nodes can now have `target`. This link will open in blank tab.
 https://scroll.pub This link
  target _blank
  title Title can also be set.
aboveAsCode
🎉 `youTube` nodes can now have captions.
🏥 fix: non-embed `youTube` links are converted to proper embed links to fix CORS issues.
⚠️ BREAKING: ~no one should be affected. `scrollImageComponent` CSS class changed to `scrollCaptionedComponent`. If you were overwriting the previous class may need to update.
⚠️ BREAKING: `note` parser under `link` nodes has been renamed to `title` and instead of it being a block just the line is used. This is to better reflect what it does. See example above.

📦 53.0.2 1/18/2023
🏥 fix: `youTube` definition was missing a cell type for url.

📦 53.0.1 1/17/2023
🏥 fix: `redirectTo` definition was missing a cell type for url.

📦 53.0.0 1/17/2023
⚠️ BREAKING: there was undocumented behavior where `*` nodes previously supported multiple lines of text. This now throws an errors. If you need the old behavior you can copy/paste the old node's Grammar code into your project.

📦 52.2.1 1/16/2023
🏥 fix: a `*` node with just a link now works correctly. Previously was rendering blank.

📦 52.2.0 1/13/2023
🎉 `html` now also supports quick oneliners:

belowAsCode
html <b>here is some html</b>

📦 52.1.1 1/12/2023
🏥 fix: getFilesWithTag was including files marked with `importOnly`

📦 52.1.0 1/12/2023
🏥 Upgrade JTree.

📦 52.0.0 1/10/2023
🎉 API usage: new getter `buildNeeded` returns whether the folder needs to be rebuilt. You can use this to skip unnecessary builds for faster perf.
⚠️ BREAKING: This should not break anyone however behavior has changed. `scroll build` now does not overwrite unmodified files. Now `mtime` reflects when the generated HTML last changed instead of when the `scroll build` command was last run. This speeds up `rsync` deploys.

📦 51.0.0 1/9/2023
🎉 This version introduces the concept of `Sections`. Headers (`#`, `##` and `?`) now start a section, and a blank line ends it. A section will not be split across columns.
⚠️ BREAKING: This slightly changes layouts (for the better, hopefully in all cases) so do a manual inspection of output.

📦 50.2.0 1/5/2023
🏥 fix bug where it was trying to get image dimensions of remote images when building
🎉 upgrade jtree to get perf improvements

📦 50.1.0 1/5/2023
🎉 `listCommand` now much faster (~33% in pldb) because `findScrollsInDirRecursive` will now skip `node_modules` folders entirely.

📦 50.0.0 1/4/2023
🎉 made footnotes compile faster
⚠️ BREAKING: simplified footnotes by removing `notes` parser. Referencing a footnote is done the same way but now footnotes just print immediately like you'd expect.

belowAsCode
For example^exampleFootnote

^exampleFootnote This is an example footnote.
aboveAsCode

📦 49.1.0 1/4/2023
🎉 add `viewSource` parser.

📦 49.0.0 1/4/2023
⚠️ BREAKING: renamed `footnote` and `caveat` directives to `hoverNote` to avoid confusion with footnotes.
⚠️ BREAKING: removed `startRuledColumns` which doesn't appear to be used anywhere
🏥 general code cleanup and refactor by splitting big grammar files into separate files.

📦 48.3.0 1/2/2023
🎉 added `youTube` parser for embedding youTube videos with proper responsive sizing.

📦 48.2.0 1/2/2023
🎉 simplify default theme by removing ornamental borders

📦 48.1.0 1/2/2023
🏥 fix: keyboardNav now only cycles through pages with keyboardNav (feed.xml files are excluded, for example)
🏥 fix: previous/next buttons are not shown if there is no keyboardNav

📦 48.0.0 1/1/2023
This release simplifies and removes things from the default install.

⚠️ BREAKING: the `github` parser is now `git` to make it clearer what it does. The git SVG is now used in the default theme.
⚠️ BREAKING: removed `twitter` parser and removed the Twitter link from default theme.
⚠️ BREAKING: `SVGS` is no longer exported.
🎉 Minor style fix of header and switched email SVG with a nice svg from http://laurareen.com

📦 47.4.0 12/30/2022
🎉 rss 2.0 now generated with `printFeed`, meaning pubDate and lastBuildDate are included.

📦 47.3.0 12/29/2022
🎉 upstreamed `stumpNoSnippet` for advanced use case of PLDB until we have better support for custom grammars when using as a library.

📦 47.2.1 12/29/2022
🏥 endColumns nodes should not be printed in snippets

📦 47.2.0 12/29/2022
🎉 added `doNotPrint` class to header and footer elements for better printability.

📦 47.1.2 12/05/2022
🏥 character encoding regression fix.

📦 47.1.1 11/30/2022
🏥 init fixes

📦 47.1.0 11/29/2022
🎉 you can now specify number of max columns in `startColumns` parser
🏥 fixed body padding regression

📦 47.0.0 11/28/2022
This is a major breaking refactor. Scroll now generates flat html. This release is NOT recommended for the feint of heart. Wait a day or two until the bugs are ironed out.

⚠️ BREAKING: removed automatic meta tag generation. You now need to explicitly add a `metaTags` parser.
⚠️ BREAKING: removed `<!doctype>`, `<html>`, `<head>`, and `<body>` tags. Unnecessary. Modern browsers don't need them. HTML never should have had head/body split.
⚠️ BREAKING: removed `SCROLL_CSS` export.

📦 46.2.0 11/27/2022
🏥 `stump` parser works now

📦 46.1.0 11/27/2022
🏥 `scrollCss` works now

📦 46.0.0 11/27/2022
This is a major breaking refactor. *All the implicit imports are gone*. Everything must be explicitly included now (perhaps with a few slight exceptions like meta tags). This migration guide is a work in progress. This release is NOT recommended for the feint of heart. Wait a day or two until the bugs are ironed out.

⚠️ BREAKING: removed `maxColumns` and `columnWidth` and `template`
⚠️ BREAKING: headers and footers are not provided by default. You now must explicitly include them with `scrollHeader` and `scrollFooter`. The previous behavior of `scrollHeader` and `scrollFooter` has been removed.
⚠️ BREAKING: columns are not provided by default. You now need to wrap your content in `startColumns` and `endColumns`.
⚠️ BREAKING: CSS is not included by default. You need to use the snippet parser `scrollCssTag`. The previous behavior of `scrollCss` has been removed. Also `printScrollCss` is now `scrollCss`.

📦 45.0.0 11/24/2022
🎉 a whole new way to do footnotes/end notes.

## Footnotes example

Brockton is a city in Massachusetts^state. It was incorporated in 1881^inc.
 https://en.wikipedia.org/wiki/Brockton,_Massachusetts Brockton

## Notes

^state A state in the United States.

^inc Incorporated as a city in 1881, but as a town in 1821. Wikipedia.
 https://en.wikipedia.org/wiki/Brockton,_Massachusetts Wikipedia

📦 44.0.1 11/24/2022
🏥 fix hidden title bug

📦 44.0.0 11/24/2022
This is the `title` simplification refactor release.
🎉 new: `description` parser for use in open graph description generation.
🎉 new: optional `hidden` parser on `title` nodes for setting `title` without printing it.
⚠️ BREAKING: Group pages no longer have a `title` in their HTML by default. Must set manually.
⚠️ BREAKING: Removed `siteTitle` and `siteDescription` parsers. Those concepts no longer make sense after the introduction of `groups` concept. Generally if you rename `siteTitle` to `title` and `siteDescription` to `description` it should work well.
⚠️ BREAKING: Removed `htmlTitle` parser.

📦 43.1.1 2022.11.22
🏥 fix aftertext bug where `http` quick links were not matching.

📦 43.1.0 2022.11.14
🎉 new: new `SVGS` export when using as a library.

📦 43.0.1 2022.11.14
🏥 list element (`- some item`) compiler was generating an extra `p` tag.

📦 43.0.0 2022.11.12
🎉 New: Linkify! Links like https://breckyunits.com and email addresses like feedback@scroll.pub are now compiled to HTML `a` tags automatically. Note: if an `a` tag is detected in the node Linkify will be DISABLED for that node.
⚠️ BREAKING: (no one should be affected) slim chance linkify may insert links where you previously did not want them.

📦 42.0.0 2022.11.09
⚠️ BREAKING: `scroll check` is now `scroll test`

📦 41.0.0 2022.11.08
⚠️ BREAKING: switched from date format of MM-DD-YYYY to YYYY.MM.DD

regexCode
 search ^# (\d+\.\d+\.\d+) (\d+)\-(\d+)\-(\d+)
 replace # $1 $4.$2.$3

📦 40.0.0 2022.11.05
⚠️ BREAKING: (no one should be affected) `caption` now extends the thought (`*`) node.

blog/screenshot.png
 caption You can now use all aftertext directives like *bold* in caption nodes. Note: in the future we may just remove the parser `caption` and you can just use `*` directly.

📦 39.0.0 2022.11.03
⚠️ BREAKING: `scroll init` no longer creates a `feed.xml` file by default. You can easily add an XML feed manually with the 2 steps below:

code
 comment Add the content below to feed.scroll
 settings.scroll
 permalink feed.xml
 template blank
 printFeed index

code
 comment Add the line below to your posts and/or settings import file.
 rssFeedUrl feed.xml

📦 38.2.0 2022.11.01
🎉 new dayjs aftertext directive.

📦 38.1.0 2022.11.01
🏥 fix group page not having a header.

📦 38.0.0 2022.10.31
🎉 add left and right buttons to default theme.

📦 37.1.1 2022.10.28
🏥 Fixed bad table regression where table content was not printing

📦 37.1.0 2022.10.28
🎉 Documentation improvement

📦 37.0.0 2022.10.28
⚠️ BREAKING: Removed the original `aftertext` node in favor of `*` nodes. Regex [search replace] to upgrade: `^aftertext\n ` `* `
⚠️ BREAKING: Removed basic `paragraph` node. Regex [search replace] to upgrade: `^paragraph\n ` `* `
⚠️ BREAKING: Removed basic `question` node. Regex [search replace] to upgrade: `^question ` `? `
⚠️ BREAKING: Removed basic `section` node. Regex [search replace] to upgrade: `^section ` `# `
⚠️ BREAKING: Removed basic `subsection` node. Regex [search replace] to upgrade: `^subsection ` `## `
⚠️ BREAKING: Removed basic `list` node.
⚠️ BREAKING: Removed basic `orderedList` node.
⚠️ BREAKING: Removed basic `unorderedList` node.
⚠️ BREAKING: Removed support for 🔗 links. Regex [search replace] to upgrade: ` ([^ ]+)🔗([^ ]+)` ` <a href="https://$2">$1</a>`

The goal of this release is to simplify and speed up Scroll by removing legacy features.
This is a major release that removes a bunch of the original parsers in favor of the newer more advanced aftertext nodes.
If you don't want to upgrade at this time, it's very easy to just add the removed grammar definitions from this commit into your existing scrolls using the normal extension pattern.
You can also easily alias the newer aftertext node types with the original parsers above if you'd prefer.

📦 36.1.0 2022.10.27
🎉 Now you can leave the "pattern" part blank in link node in aftertext to make the whole line a link.
🏥 Adjust estimateLines hueristics

📦 36.0.1 2022.10.24
🏥 Fix home icon

📦 36.0.0 2022.10.22
⚠️ BREAKING: simpler CSS and header

📦 35.1.2 2022.10.12
🏥 cleanup previous commit

📦 35.1.1 2022.10.12
🏥 fix duplicated text in `*` nodes bug

📦 35.1.0 2022.10.05
🎉 Added new better way to do lists.
aboveAsCode

📦 35.0.0 2022.10.04
⚠️ BREAKING: (no one should be affected) changed return value of api method `findScrollsInDirRecursive`.

📦 34.2.0 2022.10.03
🎉 add `redirectTo` tag

📦 34.1.0 2022.10.02
🎉 had an idea for a new type of text tag that blinks

📦 34.0.3 2022.9.30
🏥 Fix github workflow building.

📦 34.0.2 2022.9.30
🏥 !

📦 34.0.1 2022.9.30
🏥 test fix

📦 34.0.0 2022.9.30
🎉 add support for recursive building and checking using pipes! `scroll list | scroll build`
⚠️ BREAKING: (no one should be affected) renamed `execute` method on ScrollCli class to `executeUsersInstructionsFromShell`

📦 33.1.0 2022.9.29
🎉 remove extraneous words and lines printing in CLI

📦 33.0.0 2022.9.29
⚠️ BREAKING: (no one should be affected) removed "migrate" command. was more trouble than it was worth. better to have that as a separate module.
⚠️ BREAKING: (no one should be affected) `where` command is now `list`

📦 32.0.0 2022.9.27
🎉 improved 'where' command to scan pwd and skip node_modules folders. much faster and simpler.

📦 31.5.0 2022.9.9
🎉 new parsers: `?`, `#` and `##`

# A Header

## A Subheader

? Have you thought of the most important question?

📦 31.4.1 2022.9.3
🏥 and that is why you always run the tests.

📦 31.4.0 2022.9.3
🎉 New parsers: `*`, `footnote`, and `readingList`

* This is a _thought_. It's like a condensed form of aftertext with *bold* and _italics_ and `code` turned on by default.
 hoverNote default
  And it supports hover notes!
aboveAsCode

📦 31.3.0 2022.9.3
🏥 Fixed bad regression where only the first word of a replacement line was getting replaced.

📦 31.2.0 2022.9.2
🎉 added `openGraphImage` node

📦 31.1.0 2022.9.1
🎉 `replace` now supports multiline strings
🏥 fixed broken links bug if using keyboard nav without groups

📦 31.0.0 2022.8.31
⚠️ BREAKING: upgraded to jtree 56. This is not likely to break anyone. However, if you are extending Scroll with your own nodeTypes you will need to make sure that your abstract nodes (and *only* your abstract nodes) have an id that begins with `abstract`. You can then remove all occurrences of the parser `abstract` from your grammar node definitions.

📦 30.1.1 2022.8.30
🎉 Improve header message thanks to dg's feedback

📦 30.1.0 2022.8.29
🎉 Perf: ~2x as fast as v30.1

📦 30.0.0 2022.8.29
🎉 Perf: ~2x as fast as v29
⚠️ BREAKING: If using `getFullyExpandedFile(str)` replace with `getFullyExpandedFile(str).code`
⚠️ BREAKING: If using any ScrollFile programatically, a few undocumented getters may have changed.

📦 29.0.0 2022.8.28
⚠️ BREAKING: if using programatically instead of ScrollPage use ScrollFile

📦 28.3.2 2022.8.27
🏥 fixed bug with open graph image tags

📦 28.3.1 2022.8.27
🏥 fixed minor grammar typo and added test

📦 28.3.0 2022.8.27
🎉 added `author` and `kpiTable` node types

📦 28.2.0 2022.8.26
🏥 export getFullyExpandedFile

📦 28.1.0 2022.8.26
🏥 imports can now be recursive

📦 28.0.0 2022.8.26
This is a *major* update that radically simplifies Scroll and adds significant new capabilities.

## From 3 file types to 1

`scroll.settings` and `*.grammar` files are gone. Everything is now done with `.scroll` files, and now every parser is documented and usable on try.scroll.com and type checked.

## Imports and variables

Use `[filepath]` to import one scroll file into another. Use `replace` and `replaceDefault` for variables.

## Add your own Grammar extensions directly in your Scroll files

Define new nodeTypes or create your own aliases on a per file basis. Use the import parser and build your own collection of common reusable node types for your project(s).

## Unlimited Tags and Tag Pages

Add files to one or more tags and then customize how each tag page prints. No more magic or implicit creation of collection pages.

## Multiple Compiler Passes

The new language features (imports, grammar nodes, and variables) required a change from a 1 one stage compilation process to a multi-stage compiler pass pattern. The compilers passes run in this order: imports, grammar extensions, then variables. So variables cannot be used in imports or grammar extensions.

## Change list

⚠️ BREAKING: The `git` setting is renamed to `viewSourceBaseUrl`
⚠️ BREAKING: The `sourceLink` setting is renamed to `viewSourceUrl`
⚠️ BREAKING: removed `skipIndexPage`. Instead you now opt-in to group pages like this: `groups index.html`
⚠️ BREAKING: removed `scroll.settings` concept. Use `settings.scroll` now.
⚠️ BREAKING: `footer` is now `scrollFooter` and `header` is now `scrollHeader`
⚠️ BREAKING: removed `ignoreGrammarFiles`. Custom grammar extensions must now be explicitly imported and/or be in `.scroll` files.
⚠️ BREAKING: changed link text from "Article source" to "View source"
⚠️ BREAKING: `css` setting is now `scrollCss`
⚠️ BREAKING: DefaultScrollScriptCompiler is now DefaultScrollCompiler
⚠️ BREAKING: removed buildSinglePages, buildIndexPage, buildSnippetsPage, buildRssFeed, and buildCssFile. Everything done by `buildFiles` now. See 'full.scroll', `index.scroll`, `feed.scroll`, and `style.scroll` in `tests/kitchenSink` for how to implement those in new pattern.
⚠️ BREAKING: in default theme CSS some class names have changed:

code
 scrollArticleDateComponent => scrollDateComponent
 scrollArticlePageComponent => scrollFilePageComponent
 scrollSingleArticleTitle => scrollFilePageTitle
 scrollIndexPageArticleContainerComponent => scrollGroupPageFileContainerComponent
 scrollArticleSourceLinkComponent => scrollFileViewSourceUrlComponent
 scrollIndexPageComponent => scrollGroupPageComponent
 scrollIndexPageFileContainerComponent => scrollGroupPageFileContainerComponent

⚠️ just calling ScrollScript Scroll again unless it becomes confusing
🎉 keyboardNav will now use the first group a file belongs to if prev and next are not supplied

## Updating custom CSS

code
 comment Put this in a file named style.scroll
 buildCss style.css
 gazetteCSS

📦 27.1.1 2022.8.24
🏥 only activate keyboard shortcuts if no element has focus

📦 27.1.0 2022.8.24
🎉 added new cli command: `scroll where`

📦 27.0.1 2022.8.23
🏥 mutability fix

📦 27.0.0 2022.8.23
🎉 added `keyboardNav` node
⚠️ BREAKING: all `permalink` lines in `.scroll` files need `.html`. Run `scroll migrate` to find and update automatically.

📦 26.1.0 2022.8.23
🎉 export SCROLL_CSS for tryscroll app
⚠️ now calling the language ScrollScript instead of Scrolldown

📦 26.0.0 2022.8.23
⚠️ (potentially) breaking: scrolldown.grammar is no longer built/checked in and SCROLLDOWN_GRAMMAR_FILENAME no longer exported.

📦 25.6.0 2022.8.19
🎉 simpler API for programmatic usage: `new ScrollPage('title Hello world')`

📦 25.5.1 2022.7.22
🏥 minor grammar fix

📦 25.5.0 2022.7.22
🏥 path fixes for Windows thanks to @celtic-coder

📦 25.4.0 2022.7.14
🎉 50% faster builds

📦 25.3.2 2022.7.14
🎉 added cacheing for 40% faster builds

📦 25.3.1 2022.7.14
🏥 fixed links in treeTable

📦 25.3.0 2022.7.14
🎉 added `treeTable`

belowAsCode
table
 delimiter particles
 printTable
 data
  row
   name Javascript
   example
    console.log("Hello world")
  row
   name Python
   example
    # A code block
    print "Hello world"

📦 25.2.1 2022.7.01
🏥 fixed broken links in feed.xml

📦 25.2.0 2022.6.22
🎉 added `htmlTitle` and `sourceLink` parsers so an article can override the defaults

📦 25.1.0 2022.6.19
🎉 if scroll has an rss feed add a <link> tag to built pages

📦 25.0.0 2022.6.15
⚠️ on single article pages, the header will now span across all columns.

📦 24.9.0 2022.6.15
🎉 added "css" setting. Set `css split` to write CSS to `scroll.css` instead of inline, or `css none` to not generate CSS.
🏥 removed extra blank lines in snippets.html generation

📦 24.8.0 2022.6.15
🎉 if "baseUrl" is set building will also generate an RSS "feed.xml"

📦 24.7.0 2022.6.13
🏥 fix when using Scroll programmatically image sizeOf check will use correct folder
🎉 add param to specify index/snippets page when using programmatically

📦 24.6.0 2022.6.10
🎉 added `wrap` parser for advanced custom wraps in aftertext.

Some !simple! and *advanced* usages. An #absolute link# and @@@a relative link@@@. Show some ++added text++ or some --deleted text--.
 inlineMarkup ! em
 inlineMarkup * b
 inlineMarkup # a href="https://example.com"
 inlineMarkup @@@ a href="potato.html"
 inlineMarkup ++ span style="color:green"
 inlineMarkup -- span style="color:red; text-decoration: line-through;"
aboveAsCode

📦 24.5.0 2022.6.10
🎉 added `wrapsOn` parser to aftertext.

Support for traditional *bold*, `code`, and _italics_ in aftertext with the parser `wrapsOn`.
aboveAsCode

📦 24.4.0 2022.6.08
🎉 if your scroll has an article(s) with "endSnippet", scroll will create "snippets.html".

📦 24.3.1 2022.5.25
🏥 fix bug where images were stuck at 35ch even when the browser sized columns wider

📦 24.3.0 2022.2.16
This tiny release adds some ways to include more caveats and context around words and references.
🎉 added 'caveat' directive to aftertext for adding caveats around parts of text
🎉 added 'note' directive to aftertext links for providing more context around included links

## Caveat Example

This is a great idea.
 hoverNote great
  I'm not actually sure if this is a great idea. But often I want to include a comment and link it
  back to the text, but don't quite want to footnote it.
aboveAsCode

## Link Quote Example

This report showed the treatment had a big impact.
 https://example.com/report This report
  title The average growth in the treatment group was 14.2x higher than the control group.
aboveAsCode

📦 24.2.0 2022.1.18
🎉 added 'id' directive to aftertext for adding ids to paragraphs <p id="foo"></p>
🎉 added 'loremIpsum' nodeType to help in testing and exploring

Example demonstrating the above:

code
 aftertext
  Click here to go to the middle paragraph.
  link #middleParagraph Click here
 
 loremIpsum 20
 
 aftertext
  Here is the middle paragraph.
  id middleParagraph
 
 loremIpsum 20

📦 24.1.1 2022.1.13
🏥 fix bug where migrator was not replacing 🔗 links in paragraphs when upgrading to aftertext
🏥 fix typo in release notes

📦 24.1.0 2022.1.13
🎉 added migrate command to automate migrations when there are breaking changes
🎨 added background color and styling to inline code elements in default theme

📦 24.0.0 2022.1.11
🎉 if a table has a column name ending in "Link", that will be used to link the matching column. See example below.
⚠️ if you have tables with a column ending in "Link" beware the new behavior

belowAsCode
table
 delimiter |
 printTable
 data
  name|nameLink
  Wikipedia|https://wikipedia.org

⚠️ the first paragraph of an article no longer prints a dateline. Use aftertext instead. See example below.

By default the article's date will be used but you can also provide a custom date.

belowAsCode
A truck transporting llamas collided into a pajama factory late last night.
 dateline 2/21/2020

To migrate and keep your existing datelines use the command scroll migrate.
 code scroll migrate

📦 23.2.0 2021.12.22
🎉 add "matchAll" and "match" support to aftertext for more advanced matching options
🎉 add "class" markup directive to aftertext
🎉 add "css" node for easier insertion of CSS
🏥 fix bug in aftertext when 2 tags started at same index
🏥 make basic dateline work in browser

? Can you show an example of the new advanced aftertext features?

How much wood can a woodchuck chuck if a woodchuck could chuck wood?
 https://en.wikipedia.org/wiki/Groundhog woodchuck
  matchAll
 class standout wood
  match 0 3
aboveAsCode

css
 .standout {
  background-color: yellow;
  border: 1px dashed red;
  padding: 5px;
 }
aboveAsCode

📦 23.1.0 2021.12.21
🎉 add dateline node to aftertext.

📦 23.0.0 2021.12.09
🎉 add aftertext node type, with bold, italics, underline, link (& quick link), email, code and strikethrough parsers
🎉 add belowAsCode and aboveAsCode
🎉 split base grammar into files for easier extensibility

? Can you show an example of aftertext?

You write some text. After your text, you add your markup instructions with selectors to select the text to markup, one command per line. For example, this paragraph is written in Aftertext and the source code looks like:
 italics After your text
 italics selectors
aboveAsCode

📦 22.4.0 2021.11.25
🎉 add basic caption support to images

blog/screenshot.png
 caption This is a caption
aboveAsCode

📦 22.3.0 2021.08.23
🎉 columnWidth to set a custom column width per article or folder
🎉 maxColumns can be set globally in settings

📦 22.2.0 2021.08.23
🎉 integrated design feedback into default theme for better readability

📦 22.1.0 2021.07.23
🏥 you can now ignore custom grammar files in a dir with ignoreGrammarFiles

📦 22.0.0 2021.07.09
🎉 scroll.settings file is now optional and you can use scroll to build a single page.
🎉 you can now set 'header' and/or 'footer' on articles.

📦 21.4.0 2021.07.08
🎉 you can now set 'maxColumns' on articles.

📦 21.3.0 2021.07.07
🎉 if all articles have 'skipIndexPage', 'index.html' will not be built

📦 21.2.0 2021.07.06
⚠️ internal CSS changes

📦 21.0.0 2021.06.21
🎉 built in support for custom grammars!
⚠️ internal nodejs API changes: Article is no longer exported and ScrollBuilder is now ScrollFolder

📦 20.0.0 2021.06.21
🎉 new question nodetype. Simply compiles to an h4 for now but more semantic this way.
🎉 new section nodetype. Simply compiles to an h3 for now but more semantic this way.
🎉 new subsection nodetype. Simply compiles to an h4 for now but more semantic this way.
⚠️ title2-title6 have been removed. use question, section and subsection instead.

? Why the new `question` nodes?

Question and answer structures are literally older than the Socratic Method. Such a common semantic pattern deserves it's own parsers.

? How do I migrate from title# nodes?

The below regex may help.

code
 Find ^title\d (.+\?)
  ReplaceWith question $1
 Find ^title\d (.+)
  ReplaceWith section $1

📦 19.3.1 2021.06.20
🎉 show the version in footer
🏥 fix title in single pages without a title

📦 19.3.0 2021.06.20
🏥 fix bug where readme.scroll could be overwritten by init

📦 19.2.0 2021.06.17
🎉 improved styling for tables

📦 19.1.0 2021.06.17
🏥 fix bug with http links
🏥 simpler article padding and changed scroll title to h2 from h1

📦 19.0.0 2021.06.17
🎉 ability to override header and footer

📦 18.4.0 2021.06.17
🏥 improved alignment of images

📦 18.3.0 2021.06.16
🎉 og meta tags for social media sharing

📦 18.2.0 2021.06.16
🏥 title now links to "index.html". less magic and works much better locally

📦 18.1.1 2021.06.16
🏥 fix regression where 2 columns on mobile were not downsizing to 1

📦 18.1.0 2021.06.16
🎉 short articles now are put into 1 or 2 columns

📦 18.0.0 2021.06.15
🎉 build is now ~46% faster
🏥 refactored html generation in preparation for easier extending and theming

📦 17.5.0 2021.06.05
🏥 fixed numerous bugs in importing RSS feeds and added examples

📦 17.4.0 2021.06.04
🎉 typography adjustments
🏥 fixed overlapping social icons up top on mobile. just keep git link

📦 17.3.0 2021.06.03
🎉 images now link to the full size image

📦 17.2.2 2021.06.02
🏥 fixed safari-only bug not painting overflowing code blocks on single pages

📦 17.2.1 2021.05.25
🏥 fixed bug where sequential links were not getting parsed

📦 17.2.0 2021.05.25
🏥 tables can now break on single pages for higher information density

📦 17.1.0 2021.05.25
🎉 pipeTable

table
 delimiter |
 printTable
 data
  what|why
  PipeTable|Because it's awesome!

📦 17.0.0 2021.05.25
🎉 tabTable and commaTable
⚠️ table is now spaceTable
🏥 do not crash if an empty row in a table

📦 16.2.0 2021.05.24
🏥 do not crash if an image is not found

📦 16.1.0 2021.05.24
🎉 building a site is now ~2.4x faster 🏎

📦 16.0.0 2021.05.22
⚠️ rename scrollSettings.map to scroll.settings

📦 15.0.0 2021.05.21
🎉 Scroll will detect and emit image sizes during build to reduce layout shifts.

📦 14.3.0 2021.05.21
🏥 Scroll is now somewhat usable as an NPM module.

📦 14.2.0 2021.05.20
🏥 added html head meta viewport tag for better mobile experience.

📦 14.1.0 2021.05.20
🏥 added doctype tag
🏥 added html head meta description tag

📦 14.0.0 2021.05.19
⚠️ removed links nodeType
⚠️ fixed bug where sometimes permalinks were still using title and not filename

📦 13.3.0 2021.05.18
🎉 html and image node types

To use an image node:

code
 image foo.jpg

QuickParagraphs are now an error. When you want to drop in some HTML, do so with HTML node:

code
 html
  <b>anything goes here</b>

📦 13.2.0 2021.05.18
🎉 Added <code>scroll check</code> command

📦 13.1.0 2021.05.18
🎉 🔗links in lists as well as paragraphs

📦 13.0.0 2021.05.17
🎉 🔗links in paragraph nodes.
🎉 skipIndexPage nodeType

? How do I use the new single word links?

For single word links in paragraph nodes only (for now) you can now do:

code
 paragraph
  This is a link🔗example.com

Below is a regex for migrating existing <code>*.scroll</code> files.

code
 <a href="https://([^"]+)">([^ ]+)</a>
 $2🔗$1

? How do I use the 🔗link tag with multiword links?

The 🔗link tag only supports single word links. Like everything with ScrollScript, you have a number of options if the conventional design doesn't work for you. Your options are:

- 1. Link just one word. If you need more, perhaps camelCase or snake_case your words together into one concept.
- 2. Repeat the link twice <code>foo 🔗link bar 🔗link</code>
- 3. Use &lt;a> tags.
- 4. Extend the ScrollScript grammar for your site.

? Can I not include a page in the index page?
Now you can! Sometimes you just want to publish an independent page without including it in the index. To do that, just add `skipIndexPage`.

📦 12.1.0 2021.05.14
🎉 chat nodeType

chat
 You can now do dialogues
 Cool!

📦 12.0.0 2021.05.12
⚠️ scroll create is now scroll init
⚠️ Removed export command
🏥 removed example.com folder. Less code and now flat.

📦 11.0.0 2021.05.11
🎉 list, orderedList, and links node types
🎉 codeWithLanguageNode
🏥 HTML escaped in code blocks

📦 10.0.0 2021.05.10
🎉 table nodeType for SSVs with linkify
🎉 Better docs in ScrollScript grammar
⚠️ Removed list nodeType
⚠️ Removed link nodeType
🏥 Windows return character fix
🏥 multiline support in subheader nodeTypes

📦 9.0.0 2021.05.05
🎉 ScrollScript now has a quote nodeType.
🏥 Code block format bug fixes.
🏥 Styling improvements

📦 8.0.0 2021.04.10
🎉 Scroll now just builds files. No web server needed.

📦 7.0.0 2021.04.03
⚠️ Scroll the language is now called Scrolldown (thanks FB!).
🏥 Bug fixes.
🎉 Better perf.

📦 6.0.0 2021.03.08
🎉 By popular request, Scroll now also publishes each article to its own page.
🎉 Fewer links. Do less. KISS.
🎉 Better perf.
🎉 "permalink" nodeType

📦 5.0.0 2021.02.28
🎉 Changed name of everything from dumbdown to Scroll per user feedback
⚠️ File extension of articles needs to be "scroll" and not "dd" now.

📦 4.2.0 2021.02.22
🏥 Fixed paragraph parsing and rendering

📦 4.1.0 2021.02.22
🎉 "git" scrollSetting for article source links.

endColumns

footer.scroll
