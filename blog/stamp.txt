Stamp: a microlang for project templates
========================================
by Breck Yunits
 https://twitter.com/breckyunits Breck Yunits

June 23, 2024

Regardless if you specialize in React, Rails, Django, Next, Java, C#, or ObjectiveC, you probably use _templates_ to start new projects.

Templates generate a handful of files like `readme.md`, `.gitignore`, and `main`.

They also initialize a handful of directories like `src/` and `tests/`.

What if it was even easier to make, edit and use these templates?

*

Introducing Stamp, a microlang (only 60 lines of code, including comments) that makes it as concise as possible to write, edit, share and expand project templates.
 https://github.com/breck7/scroll/blob/main/parsers/stamp.parsers 60 lines of code

*

How to use
==========

1. Install Scroll
```
npm install -g scroll-cli
```

2. Create `myFirstStamp.scroll`
```
stamp
 .gitignore
  *.html
 readme.scroll
  # My First Stamp
  
 scripts/
  hello.js
   console.log("Hello world")
```

3. Run `scroll build`

Done!

*

Stamp was jointly created by me and Guillaume Papin. Other tools (listed below) do similar things, but with some slight differences.
 https://github.com/Sarcasm Guillaume Papin
 https://github.com/breck7/scrollsdk/issues/120 jointly created

‚ÅÇ

[Image Omitted]

Prior Art
=========
- cookiecutter
 https://github.com/cookiecutter/cookiecutter cookiecutter
- Dired
 https://www.gnu.org/software/emacs/manual/html_node/emacs/Dired.html Dired
- vimv
 https://github.com/thameera/vimv vimv
- ptar
 https://github.com/jtvaughan/ptar ptar
- shar
 https://en.wikipedia.org/wiki/Shar shar
- dar
 http://dar.linux.free.fr/ dar
- metatar
 https://github.com/xyproto/metatar metatar
- txtar
 https://pkg.go.dev/golang.org/x/tools@v0.1.0/txtar txtar
- Archiving files in plain text
 https://blog.oquijano.net/id/9?lang=en Archiving files in plain text
- Wikipedia list of archive formats
 https://en.wikipedia.org/wiki/List_of_archive_formats Wikipedia list of archive formats

Built with Scroll v153.0.0
