figure {
  margin: 0;
  padding: 0;
}
.dropcap:first-letter {
  font-size: 3rem;
  line-height: .9em;
  margin-right: .125rem;
  display: block;
  float: left;
}
.dinkus {
  text-align: center;
  padding: 1rem;
}
.dinkus span {
  vertical-align: sub;
}
details {
  margin-top: 10px;
}
summary {
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  cursor: pointer;
}
.scrollCaptionedFigure {
  display: block;
  break-inside: avoid;
  text-align: center;
}
.scrollCaptionedFigure img {
  max-width: 100%;
  height: auto;
  margin-top: .1875rem;
}
.scrollCaptionedFigure figcaption {
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  font-size: .8rem;
}
.scrollCaptionedFigure figcaption .scrollParagraph {
  margin-top: 0;
}
.scrollCodeBlock {
  overflow: auto;
  font-size: .8rem;
  hyphens: none;
  white-space: pre;
  break-inside: avoid;
  display: block;
  margin: .5rem 0;
  padding: .5rem;
  border-radius: 0;
  position: relative;
}
.scrollCodeBlock:hover .scrollCopyButton {
  opacity: .5;
}
.scrollCodeBlock:hover .scrollCopyButton:hover {
  opacity: .8;
}
.scrollCodeBlock:hover .scrollCopyButton:active {
  opacity: 1;
}
.scrollCopyButton {
  position: absolute;
  top: .125rem;
  right: .125rem;
  font-size: .875rem;
  cursor: pointer;
  opacity: 0;
}
.scrollCopyButton::after {
  content: "[ ]";
}
.scrollCopiedButton::after {
  content: "[âœ“]";
}
html,body,div,span,p,ol,ul,li,table,figure {
  margin: 0;
  padding: 0;
  border: 0;
  vertical-align: baseline;
  border-spacing: 0;
}
ol,ul {
  padding-left: 1rem;
}
li {
  margin-top: .4rem;
  line-height: 1.4;
}
a {
  text-decoration-color: transparent;
}
a:hover {
  text-decoration-color: initial;
}
sup,sub {
  vertical-align: baseline;
  position: relative;
  top: -.375rem;
}
sub {
  top: .375rem;
}
html {
  padding: .25rem;
  background-color: rgb(244,244,244);
  font-family: Exchange,Georgia,serif;
  color: #000;
  font-size: var(--base-font-size, 16px);
  hyphens: auto;
}
p {
  margin-top: .4rem;
  line-height: 1.4rem;
}
.scrollQuote {
  break-inside: avoid;
  display: block;
  margin: .5rem 0;
  padding: .5rem;
  background: rgba(204,204,204,.5);
  white-space: pre-line;
  border-left: .5rem solid rgba(204,204,204,.8);
}
code {
  font-size: .9rem;
  background-color: rgba(204,204,204,.5);
  padding: .125rem .25rem;
  border-radius: .25rem;
}
.scrollParagraph {
  text-align: justify;
}
.scrollColumns {
  column-count: auto;
  column-fill: balance;
  column-width: 35ch;
  column-gap: 1.5rem;
  padding-left: 1.25rem;
  padding-right: 1.25rem;
  margin: auto;
}
.scrollSnippetContainer {
  padding: 1ch 0;
  break-inside: avoid;
  text-align: justify;
}
h1,h2,h3,h4 {
  margin: .625rem 0;
}
h1 {
  font-size: 1.25rem;
}
h2 {
  font-size: 1.125rem;
}
h3,h4 {
  font-size: 1rem;
}
h1.scrollTitle {
  text-align: center;
  margin: auto;
  margin-bottom: .15625rem;
  margin-top: 0;
  font-size: 1.75rem;
  max-width: calc(100vw - 2 * (1.5625rem + 1.875rem));
}
h1.scrollTitle a {
  color: #000;
}
.scrollDateline {
  font-style: italic;
  line-height: 1.4rem;
  font-size: .75rem;
}
.scrollSection {
  break-inside: avoid;
}
.scrollSection h1,.scrollSection h2,.scrollSection h3,.scrollSection h4 {
  text-align: center;
}
h4.scrollQuestion {
  text-align: left;
  margin: 1.4rem 0 0 0;
}
.scrollSection:first-child h1,.scrollSection:first-child h2,.scrollSection:first-child h3,.scrollSection:first-child h4 {
  margin-top: 0;
}
.scrollSection:first-child h4.scrollQuestion {
  margin-top: 0;
}
.scrollNoteLink {
  opacity: .4;
  text-decoration: none;
}
.scrollNoteLink:hover {
  opacity: 1;
}
.scrollFootNoteUsageLink {
  opacity: .7;
  text-decoration: none;
}
.scrollFootNoteUsageLink:hover {
  opacity: 1;
}
.scrollHoverNote {
  text-decoration: underline dashed 1px rgba(0,0,0,.1);
  cursor: default;
}
.scrollCodeBlock {
  border-left: .5rem solid rgba(204,204,204,.8);
}
.scrollTable {
  table-layout: fixed;
  font-family: "SF Pro", "Helvetica Neue", "Segoe UI", "Arial";
  margin: .5rem 0;
  overflow: hidden;
  font-size: .8rem;
  width: 100%;
  hyphens: none;
  border: 1px solid rgba(224,224,224,.8);
}
.scrollTable td,.scrollTable th {
  padding: .1875rem;
  overflow: hidden;
  white-space: nowrap;
}
.scrollTable td:hover {
  text-overflow: unset;
  overflow: unset;
  white-space: unset;
}
.scrollTable th {
  text-transform: capitalize;
}
.scrollTable th {
  border-bottom: 2px solid rgba(0,0,0,.6);
  text-align: left;
}
.scrollTable tr:nth-child(even) {
  background: rgba(224,224,224,.6);
}
.scrollByLine {
  font-size: .875rem;
  font-style: italic;
  margin: .25rem 0;
  text-align: center;
}
.scrollViewSource {
  text-align: center;
  font-family: Verdana;
  font-weight: 100;
}
.scrollViewSource a {
  color: rgba(204,204,204,.5);
}
.scrollViewSource a:hover {
  color: #333;
}
.scrollContinueReadingLink {
  display: block;
  text-align: center;
}
.scrollDashboard {
  width: 100%;
  font-size: 1.875rem;
  text-align: center;
  font-weight: bold;
  break-inside: avoid;
  margin-top: .5rem;
  margin-bottom: .5rem;
}
.scrollDashboard td {
  width: 33.3%;
  border: 1px solid #e8e8e8;
}
.scrollDashboard span {
  font-size: 1.25rem;
  display: block;
}
.scrollChat span {
  font-family: Verdana;
  margin-top: .3125rem;
  padding: .3125rem 1.25rem;
  border-radius: .9375rem;
  display: inline-block;
}
.scrollChatLeft span {
  background: rgba(204,204,204, .5);
}
.scrollChatRight span {
  color: white;
  background: rgb(0,132,255);
}
.scrollYouTubeHolder {
  position: relative;
  width: 100%;
  height: 0;
  padding-bottom: 56.25%;
}
.scrollYouTubeEmbed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

ScrollSets: source code for CSVs
================================
by Breck Yunits

[Image Omitted]
 More examples of ScrollSets from sets.scroll.pub.
  https://sets.scroll.pub/

April 21, 2024

The source code for this blog post contains a ScrollSet about the planets and generates this HTML file as well as a CSV, a TSV, and a JSON file. This page demonstrates *ScrollSets*.
 https://scroll.pub/blog/scrollsets.scroll
 https://scroll.pub/blog/planets.csv
 https://scroll.pub/blog/planets.tsv
 https://scroll.pub/blog/planets.json

ScrollSets are useful for small single day projects and large multi-year projects with thousands of concepts like PLDB (a Programming Language Database).
 https://pldb.io

***

ScrollSets are normal plain text files written in Scroll that also contain measurements of concepts and output that data into formats ready for data visualization and analysis tools.
 https://scroll.pub/

ScrollSets are line oriented but represent a table(s). You might call them _deconstructed csvs_ or _deconstructed spreadsheets_.

- Use LLMs to *instantly generate ScrollSets* that are ready for human verification and improvement.
- Intermingle structured data with markup to *annotate any and every part of a ScrollSets* while still generating strict tabular files for data analysis tools.
- Put data, schema, citations, and documentation *all* in one (or more) plain text file(s) to easily share, collaborate on, and improve, all *tracked by git for trust*.
- Add unlimited citations (or none) to *every* measurement.

Quick Code Example:
===================

This ScrollSets has 2 measures (columns) and 2 concepts (rows).

Documentation, column definitions, rows and *any notes/markup/content* can go in the same file.

# Measures (aka Header, aka Columns, aka Schema)

idParser
 // Every concept needs an "id" (or other concept delimiter)
 extends abstractIdParser
moonsParser
 extends abstractIntegerParser

# Concepts (aka Rows)

id mars
moons 2
 // I verified moon count with Google. - BY

id jupiter
moons 63
 // Note: the moons of Jupiter have their own Wikipedia Page
  https://en.wikipedia.org/wiki/Moons_of_Jupiter moons of Jupiter

buildConcepts demo.csv

The code above generates an HTML page and `demo.csv` that contains this:
========================================================================

id,moons
mars,2
jupiter,63

Overview:
=========
- ScrollSets are built from 4 atomic elements:
 - concepts
  - think of rows in a spreadsheet
  - denoted by a line starting with `id `
  - concepts are multiple lines of measurements
 - measures
  - think of these as the column names in a spreadsheet, along with meta information about the column
  - aka "parsers"
  - measures are defined in Parsers that start with a line like `moonsParser`
 - values
  - these are just the values of the measurements
 - measurements
  - concept & measure & value = measurement
  - 1 measurement = 1 line
  - measurements can have nested comments that are stripped when compiling to TSV/CSV

How to use
==========
- A concept is like a row in a database. All concepts need an id (or other concept delimiter). When you write `id [conceptId]`, Scroll knows that is the beginning of a new concept.
- Measure definitions (aka "parsers") must come before the first concept and are written as Parsers, just like any other Scroll Parser. Measure parsers need to extend one of the abstract measure parser classes defined in `measures.scroll`.
- Measurements are then done like this `appeared 2024`

FAQ
===
Isn't the better idea to enhance existing spreadsheet GUIs with LLM generation capabilities?
============================================================================================
Almost certainly. Using ScrollSets will be much slower and worse than future spreadsheet apps with carefully crafted LLM integrations.

However, it's important to also have simple, lower tech, timeless tools and ScrollSets is one of those.

Can't you do this same thing with YAML and/or Markdown?
=======================================================
Yes! You can easily achieve the same thing as LLMs & ScrollSets using LLMs & YAML, or LLMs & YAML & Markdown.
 https://yaml.org/
 https://github.github.com/gfm/

For YAML, just put your documentation and schema in YAML comments up top and then have a tiny script to read that YAML and dump CSV/TSV/JSON or whatever. YAML gives you loads of data structures to use and is widely supported in many languages. But generating HTML from the same file would require more work.

If you want to intermix markup content with your data, you can use Markdown to add the marked up content and then have code sections embedding the YAML and a tiny script to parse out those YAML blocks and write your data to disk.

So, why use Scroll for storing data instead of YAML?
====================================================
Either can do the job. I expect the Scroll design to end up being more ergonomic, but that might not be true or may be unimportant.

If you don't like Scroll's (evolving) version and want to switch it will always be straightforward to automatically refactor to YAML.

What other related work is out there?
=====================================
This is a simple pattern to implement, so I'm sure it is likely it has been done a few times before. Please let me know so I can include links to--and learn from--any other prior art.

What are the advanced features?
===============================
- Types correctly exported in JSON
- Supports nested measures
- Support for computed measures
- Autojoins across files on ids^roadmap
- Auto generates normalized tables for array measures^roadmap
- Support for text blobs^roadmap
^roadmap: Planned.

What is the origin of ScrollSets?
=================================
LLM dataset generation is a _major_ breakthrough in datasets. ScrollSets are, at best, a minor improvement. They are designed to work alongside LLMs to help solve the Dataset Needed problem.
 https://breckyunits.com/dataset-needed.html

ScrollSets evolved out of TrueBase. ScrollSets have eliminated the need for the TrueBase software (and existing TrueBase sites should be migrated to ScrollSets), but were informed by the TrueBase build experience.
 https://truebase.treenotation.org

Although ScrollSets are designed for a world with LLMs, the design is meant to be useful without them as well, and would also have been mildly useful 30 years ago.

What were the design goals?
===========================
- Have an LLM do the bulk of the work while humans supervise to remove hallucinations.
- Can store everything (documentation, schema, all concepts) in 1 clean plain text file or split into many files (using the `import` parser).
- The ScrollSet syntax balances _looseness_ useful in creative thinking with the _tightness_ needed by tabular data visualization and analysis tools.

Why are measures and concepts root-level features and not indented?
===================================================================
The normal way to implement this in Scroll would be something like:
measures
 id string
 moons int
concept
 id mars
 moons 2
concept
 id jupiter
 moons 63

The flat design was chosen for ergonomic reasons. ScrollSets seem like they might be useful enough to be worth breaking from Scroll convention a bit. Like all things in Scroll, ScrollSets are an experiment, and maybe this design will evolve.

Extended Example: a Planets ScrollSet
=====================================

Below is the ScrollSet embedded in this Scroll file.

Measurements of the measures
============================

Extended Measures Example
=========================

Extended Concepts Example
=========================
