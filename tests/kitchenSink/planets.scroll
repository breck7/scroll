import header.scroll

wideColumns 1

title Scroll Datasets: source code for CSVs

viewSource

This source file contains a dataset on the planets and generates this HTML page as well as a CSV, TSV, and JSON file. It demonstrates Scroll Datasets.
 link planets.scroll This source file
 link planets.csv CSV
 link planets.tsv TSV
 link planets.json JSON

writeDataset planets.csv
writeDataset planets.json
writeDataset planets.tsv

groups index all

endSnippet

Scroll Datasets are a format for sticking structured data in plain text files that easily convert to tabular formats like CSV for visualization and analysis.

- *Designed for working with LLMs* to generate ad hoc datasets with human review.
- You can *intermingle structured data with markup* to easily annotate any and every part of a dataset while still generating clean datasets.
- A Scroll Dataset file can contain the documentation, schema and data all in one (or more) plain text file(s) so the dataset can continually be improved and *tracked by git*.

# Quick Code Example:

code
 
 This dataset has 2 measures (columns) and 2 concepts (rows).
 
 Documentation, column definitions, rows and *any notes/markup/content* can go in the same file.
 
 # Schema:
 
 id: string
 moons: int
 
 # Data:
 
 :::
 
 id: mars
 moons: 2
 
 I verified moon count with Google. - BY
 
 :::
 
 id: jupiter
 moons: 63
 
 The moons of Jupiter have their own Wikipedia Page
  https://en.wikipedia.org/wiki/Moons_of_Jupiter moons of Jupiter
 
 :::
 
 writeDataset demo.csv
 

# The code above generates an HTML page and `demo.csv` that contains this:

code
 id,moons
 mars,2
 jupiter,63

# Overview:
- A dataset consists of 4 atomic elements:
 - measures (column definitions, aka schemas)
 - concepts (rows)
 - values (values)
 - measurements (concept & measure & value = measurement)

# Benefits
- Have an LLM do the bulk of the work while humans supervise to remove hallucinations.
- Can store everything (documentation, schema, all concepts) in 1 clean plain text file or split into many files.
- Mix of "looseness" for creative work with just enough tightness to enable easy generation of clean data.

# Features
- Supports nested measures^roadmap
- Gradual typing in measure definitions^roadmap
- Autojoins across files on ids^roadmap
- Auto generates normalized tables for array measures^roadmap
- Support for text blobs^roadmap
- Support for computed measures^roadmap

^roadmap Planned.
 label +

# Origin
Scroll Datasets evolved out of TrueBase. Scroll Datasets have eliminated the need for the TrueBase software, but were informed by the TrueBase build experience. They are designed to help solve the Dataset Needed problem.
 https://truebase.treenotation.org TrueBase
 https://breckyunits.com/dataset-needed.html Dataset Needed

# Related Work
Can you do this same thing with YAML and/or Markdown? Yes! You can easily achieve the same thing as LLMs & Scroll Datasets using LLMs & YAML, or LLMs & YAML & Markdown.
 https://yaml.org/ YAML
 https://github.github.com/gfm/ Markdown

For YAML, just put your documentation and schema in YAML comments up top and then have a tiny script to read that YAML and dump CSV/TSV/JSON or whatever. YAML gives you loads of data structures to use and is widely supported in many languages. But generating HTML from the same file would require more work.

If you want to intermix markup content with your datasets, you can use Markdown to add the marked up content and then have code sections embedding the YAML and a tiny script to parse out those YAML blocks and write your data to disk.

? So, why use Scroll for this instead of YAML?

Either can do the job. I expect the Scroll design to end up being more ergonomic, but that might not be true or may be unimportant.
 // ergonomic: relating to or designed for efficiency and comfort in the working environment.

If you don't like Scroll's (evolving) version and want to switch it will always be straightforward to automatically refactor to YAML.

# Design notes
? Why the flat design with the delimiter and not something like:
code
 concept
  id mars
  moons 2
 concept
  id jupiter
  moons 63

The flat design seems more ergonomic and worth breaking from Scroll convention a bit. Scroll Datasets are still experimental. Maybe the current design will change.

# How to use
- Measure definitions are done like this `appeared:: int`
- A concept is like a row in a database. Concepts are marked by the `:::`.
- Measurements are done like this `appeared: 2024`

# Planets Dataset

Below is the dataset embedded in this Scroll file.

printDataset
tableSearch

## Measure Definitions (schemas)
A schema is a set of measure definitions. You can think of measures as columns. Measure names (currently) can only contain [a-zA-Z0-9_]. They cannot contain spaces or periods (the period is reserved for nested measures).

id:: string

title:: string

diameter:: int
 description What is the diameter of the planet?

surfaceGravity:: int
 description What is the surface gravity of the planet?

yearsToOrbitSun:: float
 description How many Earth years does it take for the planet to orbit the Sun?

moons:: int
 description How many moons does the planet have?

aka:: string
 description What are the alternative names for the planet?

# Data

:::

id: mars
title: Mars
diameter: 6794
surfaceGravity: 4
yearsToOrbitSun: 1.881
moons: 2

// Til Mars has 2 moons!

:::

id: jupiter
title: Jupiter
diameter: 142984
surfaceGravity: 25
yearsToOrbitSun: 11.86
moons: 63

The moons of Jupiter have their own Wikipedia Page
 https://en.wikipedia.org/wiki/Moons_of_Jupiter moons of Jupiter

:::

id: earth
title: Earth
diameter: 12756
surfaceGravity: 10
yearsToOrbitSun: 1
moons: 1
aka: Pale Blue Dot
hasLife: true
wikipedia: https://en.wikipedia.org/wiki/Earth
age: 4500000000

* Note: It was only during the 19th century that geologists realized Earth's age was at least many millions of years.

:::

id: mercury
title: Mercury
diameter: 4879
surfaceGravity: 4
yearsToOrbitSun: 0.241
moons: 0

:::

id: saturn
title: Saturn
diameter: 120536
surfaceGravity: 9
yearsToOrbitSun: 29.46
moons: 64

:::

id: uranus
title: Uranus
diameter: 51118
surfaceGravity: 8
yearsToOrbitSun: 84.01
moons: 27

:::

id: venus
title: Venus
diameter: 12104
surfaceGravity: 9
yearsToOrbitSun: 0.615
moons: 0

:::

id: neptune
title: Neptune
diameter: 49572
surfaceGravity: 11
yearsToOrbitSun: 164.79
moons: 14

:::

pageFooter
