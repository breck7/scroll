// Related work:
 CSS is great for text selector ideas: https://www.w3schools.com/cssref/css_selectors.asp
 Roff has a lot of related markup ideas: https://www.systutorials.com/docs/linux/man/7-groff_man/
abstractAftertextParser
 description Text followed by markup commands.
 extends abstractScrollParser
 inScope abstractAftertextDirectiveParser abstractAftertextAttributeParser aftertextTagParser abstractCommentParser
 string defaultClassName scrollParagraph
 javascript
  get markupInserts() {
   const { originalTextPostLinkify } = this
   return this.filter(particle => particle.isMarkup)
    .map(particle => particle.getInserts(originalTextPostLinkify))
    .filter(i => i)
    .flat()
  }
  buildHtmlSnippet(buildSettings) {
   if (this.has("noSnippet")) return ""
   return super.buildHtmlSnippet(buildSettings)
  }
  get originalText() {
   return this.content ?? ""
  }
  get originalTextPostLinkify() {
   const { originalText } = this
   const shouldLinkify = this.get("linkify") === "false" || originalText.includes("<a ") ? false : true
   return shouldLinkify ? this.replaceNotes(Utils.linkify(originalText)) : originalText
  }
  replaceNotes(originalText) {
   // Skip the replacements if there are no footnotes or the text has none.
   if (!this.root.footnotes.length || !originalText.includes("^")) return originalText
   this.root.footnotes.forEach((note, index) => {
    const needle = note.cue
    const {linkBack} = note
    if (originalText.includes(needle)) originalText = originalText.replace(new RegExp("\\" + needle + "\\b"), `<a href="#${note.htmlId}" class="scrollNoteLink" id="${linkBack}"><sup>${note.label}</sup></a>`)
   })
   return originalText
  }
  get text() {
   const { originalTextPostLinkify, markupInserts } = this
   let adjustment = 0
   let newText = originalTextPostLinkify
   markupInserts.sort((a, b) => {
     if (a.index !== b.index)
       return a.index - b.index
     // If multiple tags start at same index, the tag that closes first should start last. Otherwise HTML breaks.
     if (b.index === b.endIndex) // unless the endIndex is the same as index
       return a.endIndex - b.endIndex
     return b.endIndex - a.endIndex
   })
   markupInserts.forEach(insertion => {
    insertion.index += adjustment
    const consumeStartCharacters = insertion.consumeStartCharacters ?? 0
    const consumeEndCharacters = insertion.consumeEndCharacters ?? 0
    newText = newText.slice(0, insertion.index - consumeEndCharacters) + insertion.string + newText.slice(insertion.index + consumeStartCharacters)
    adjustment += insertion.string.length - consumeEndCharacters - consumeStartCharacters
   })
   return newText
  }
  get tag() {return "p"}
  get className() {
   if (this.get("class"))
     return this.get("class")
   const classLine = this.getParticle("addClass")
   if (classLine && classLine.applyToParentElement) return classLine.content
   return this.defaultClassName
  }
  get isHidden() {
    return this.has("hidden")
  }
  buildHtml(buildSettings) {
   if (this.isHidden) return ""
   this.buildSettings = buildSettings
   const { className, styles } = this
   const classAttr = className ? `class="${this.className}"` : ""
   const selfClose = this.isSelfClosing ? " /" : ""
   const tag = this.get("tag") || this.tag
   if (tag === "none") // Allow no tag for aftertext in tables
     return this.text
   const id = this.has("id") ? "" : `id="${this.htmlId}" ` // always add an html id
   return this.getHtmlRequirements(buildSettings) + `<${tag} ${id}${this.htmlAttributes}${classAttr}${styles}${selfClose}>${this.htmlContents}${this.closingTag}`
  }
  get htmlContents() {
    return this.text
  }
  get closingTag() {
    if (this.isSelfClosing) return ""
    const tag = this.get("tag") || this.tag
    return `</${tag}>`
  }
  get htmlAttributes() {
   const attrs = this.filter(particle => particle.isAttribute)
   return attrs.length ? attrs.map(particle => particle.htmlAttributes).join(" ") + " " : ""
  }
  get inlineStyles() {
    // Todo: cleanup
    const style = this.getParticle("style")
    const fontFamily = this.getParticle("font")
    const color = this.getParticle("color")
    const right = this.getParticle("right")
    if (!style && !fontFamily && !color && !right)
      return ""
    return `${style?.content};${fontFamily?.css};${color?.css};${right?.css}`
  }
  get styles() {
    const {inlineStyles} = this
    return inlineStyles ? ` style="${inlineStyles}"` : ""
  }
  get htmlId() {
   return this.get("id") || "particle" + this.index
  }

abstractAftertextAttributeParser
 atoms cueAtom
 boolean isAttribute true
 description Set HTML attribute.
 javascript
  get htmlAttributes() {
   return `${this.cue}="${this.content}"`
  }

aftertextTagParser
 atoms cueAtom htmlTagAtom
 description Override the HTML tag that the compiled particle will use.
 cue tag

abstractAftertextDirectiveParser
 atoms cueAtom
 catchAllAtomType stringAtom
 boolean isMarkup true
 javascript
  getErrors() {
    if (this.silenceErrors) return [] // todo: generalize this?
    const errors = super.getErrors()
    if (!this.isMarkup || this.matchWholeLine) return errors
    const inserts = this.getInserts(this.parent.originalTextPostLinkify)
    // todo: make AbstractParticleError class exported by sdk to allow Parsers to define their own error types.
    // todo: also need to be able to map lines back to their line in source (pre-imports)
    if (!inserts.length)
     errors.push(this.makeError(`No match found for "${this.getLine()}".`))
    return errors
  }
  get pattern() {
   return this.getAtomsFrom(1).join(" ")
  }
  get shouldMatchAll() {
   return this.has("matchAll")
  }
  getMatches(text) {
   const { pattern } = this
   const escapedPattern = pattern.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&")
   return [...text.matchAll(new RegExp(escapedPattern, "g"))].map(match => {
    const { index } = match
    const endIndex = index + pattern.length
    return [
     { index, string: `<${this.openTag}${this.allAttributes}>`, endIndex },
     { index: endIndex, endIndex, string: `</${this.closeTag}>` }
    ]
   })
  }
  getInserts(text) {
   const matches = this.getMatches(text)
   if (!matches.length) return false
   if (this.shouldMatchAll) return matches.flat()
   const match = this.getParticle("match")
   if (match)
    return match.indexes
     .map(index => matches[index])
     .filter(i => i)
     .flat()
   return matches[0]
  }
  get allAttributes() {
   const attr = this.attributes.join(" ")
   return attr ? " " + attr : ""
  }
  get attributes() {
   return []
  }
  get openTag() {
   return this.tag
  }
  get closeTag() {
   return this.tag
  }

abstractMarkupParser
 extends abstractAftertextDirectiveParser
 inScope abstractMarkupParameterParser
 int patternStartsAtAtom 1
 javascript
  get matchWholeLine() {
    return this.getAtomsFrom(this.patternStartsAtAtom).length === 0
  }
  get pattern() {
   return this.matchWholeLine ? this.parent.originalText : this.getAtomsFrom(this.patternStartsAtAtom).join(" ")
  }

abstractMarkupParameterParser
 atoms cueAtom
 cueFromId

matchAllParser
 popularity 0.000024
 description Use this to match all occurrences of the text.
 extends abstractMarkupParameterParser

matchParser
 popularity 0.000048
 catchAllAtomType integerAtom
 description Use this to specify which index(es) to match.
 javascript
  get indexes() {
   return this.getAtomsFrom(1).map(num => parseInt(num))
  }
 example
  aftertext
   hello ello ello
   bold ello
    match 0 2
 extends abstractMarkupParameterParser

boldParser
 popularity 0.000096
 cueFromId
 description Bold matching text.
 extends abstractMarkupParser
 string tag b

italicsParser
 popularity 0.000241
 cueFromId
 description Italicize matching text.
 extends abstractMarkupParser
 string tag i

underlineParser
 popularity 0.000024
 description Underline matching text.
 cueFromId
 extends abstractMarkupParser
 string tag u

afterTextCenterParser
 popularity 0.000193
 description Center paragraph.
 cue center
 extends abstractMarkupParser
 string tag center

aftertextCodeParser
 popularity 0.000145
 description Wrap matching text in code span.
 cue code
 extends abstractMarkupParser
 string tag code
 javascript
  get allAttributes() {return `class="scrollInlineCode"` }

aftertextStrikeParser
 popularity 0.000048
 description Wrap matching text in s span.
 cue strike
 extends abstractMarkupParser
 string tag s

abstractHtmlAttributeParser

addClassMarkupParser
 popularity 0.000772
 description Add a custom class to parent element. Provide query to add span matching text.
 extends abstractMarkupParser
 atoms cueAtom classNameAtom
 cue addClass
 string tag span
 javascript
  get applyToParentElement() {
   return this.atoms.length === 2
  }
  getInserts(text) {
   // If no select text is added, set the class on the parent element.
   if (this.applyToParentElement) return []
   return super.getInserts(text)
  }
  get className() {
   return this.getAtom(1)
  }
  get attributes() {
   return [`class="${this.className}"`]
  }
  get matchWholeLine() {
    return this.applyToParentElement
  }
  get pattern() {
   return this.matchWholeLine ? this.parent.content : this.getAtomsFrom(2).join(" ")
  }

aftertextIdParser
 popularity 0.000145
 cue id
 description Provide an ID to be output in the generated HTML tag.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlIdAtom
 single

aftertextStyleParser
 popularity 0.000217
 cue style
 description Set HTML style attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType cssAnyAtom
 javascript
   htmlAttributes = "" // special case this one
   get css() { return `${this.property}:${this.content};` }

aftertextFontParser
 popularity 0.000217
 cue font
 description Set font.
 extends aftertextStyleParser
 atoms cueAtom fontFamilyAtom
 catchAllAtomType cssAnyAtom
 string property font-family
 javascript
   get css() {
     if (this.content === "Slim") return "font-family:Helvetica Neue; font-weight:100;"
     return super.css
   }

aftertextColorParser
 popularity 0.000217
 cue color
 description Set font color.
 extends aftertextStyleParser
 catchAllAtomType cssAnyAtom
 string property color
 example
  color blue

aftertextRightParser
 cue right
 description Right align a paragraph.
 extends aftertextStyleParser
 example
  > Veni. Vidi. Vici.
   Julius caesar
    right
 javascript
  get css() { return "text-align: right;" }

aftertextHrefParser
 popularity 0.000217
 cue href
 description Set HTML href attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom urlAtom

aftertextSrcParser
 extends aftertextHrefParser
 cue src
 description Set HTML src attribute.

aftertextOnclickParser
 popularity 0.000217
 cue onclick
 description Set HTML onclick attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType javascriptAnyAtom

aftertextHiddenParser
 cue hidden
 atoms cueAtom
 description Do not compile this particle to HTML.
 extends abstractAftertextAttributeParser
 single

aftertextValueParser
 popularity 0.000217
 cue value
 description Set HTML value attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextForParser
 popularity 0.000217
 cue for
 description Set HTML for attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextPlaceholderParser
 popularity 0.000217
 cue placeholder
 description Set HTML placeholder attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextRowsParser
 popularity 0.000217
 cue rows
 description Set HTML rows attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom integerAtom

aftertextTypeParser
 popularity 0.000217
 cue type
 description Set HTML type attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlTypeAtom

aftertextAltParser
 popularity 0.000217
 cue alt
 description Set HTML alt attribute for images.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextTitleParser
 popularity 0.000217
 cue title
 description Set HTML title attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextNameParser
 popularity 0.000217
 cue name
 description Set HTML name attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextOnsubmitParser
 popularity 0.000217
 cue onsubmit
 description Set HTML onsubmit attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType javascriptAnyAtom

aftertextClassParser
 popularity 0.000217
 cue class
 description Set HTML class attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType classNameAtom

aftertextMaxlengthParser
 popularity 0.000217
 cue maxlength
 description Set HTML maxlength attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom integerAtom

aftertextPatternParser
 popularity 0.000217
 cue pattern
 description Set HTML pattern attribute for input validation.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextRequiredParser
 popularity 0.000217
 cue required
 description Set HTML required attribute.
 extends abstractAftertextAttributeParser
 single

aftertextDisabledParser
 popularity 0.000217
 cue disabled
 description Set HTML disabled attribute.
 extends abstractAftertextAttributeParser
 single

aftertextReadonlyParser
 popularity 0.000217
 cue readonly
 description Set HTML readonly attribute.
 extends abstractAftertextAttributeParser
 single

aftertextNoSnippetParser
 cue noSnippet
 description Generate no HTML snippet.
 extends abstractAftertextAttributeParser
 single

aftertextAriaLabelParser
 popularity 0.000217
 cue aria-label
 description Set ARIA label for accessibility.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextTargetParser
 popularity 0.000217
 cue target
 description Set HTML target attribute for links.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextContentParser
 popularity 0.000217
 cue content
 description Set HTML content attribute.
 extends abstractAftertextAttributeParser
 catchAllAtomType htmlAnyAtom

aftertextMinParser
 cue min
 extends abstractAftertextAttributeParser
 atoms cueAtom numberAtom

aftertextMaxParser
 cue max
 extends abstractAftertextAttributeParser
 atoms cueAtom numberAtom

aftertextStepParser
 cue step
 extends abstractAftertextAttributeParser
 atoms cueAtom numberAtom

aftertextWidthParser
 cue width
 extends abstractAftertextAttributeParser
 catchAllAtomType cssAnyAtom

aftertextHeightParser
 cue height
 extends abstractAftertextAttributeParser
 catchAllAtomType cssAnyAtom

aftertextDataParser
 popularity 0.000217
 pattern ^data\-
 description Set HTML data- attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom
 catchAllAtomType htmlAnyAtom
 example
  div My score
   data-score 100

aftertextRoleParser
 popularity 0.000217
 cue role
 description Set ARIA role attribute for accessibility.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextTabindexParser
 popularity 0.000217
 cue tabindex
 description Set tabindex attribute for keyboard navigation.
 extends abstractAftertextAttributeParser
 atoms cueAtom integerAtom

aftertextColspanParser
 popularity 0.000217
 cue colspan
 description Set colspan attribute for table cells.
 extends abstractAftertextAttributeParser
 atoms cueAtom integerAtom

aftertextRowspanParser
 popularity 0.000217
 cue rowspan
 description Set rowspan attribute for table cells.
 extends abstractAftertextAttributeParser
 atoms cueAtom integerAtom

aftertextMethodParser
 popularity 0.000217
 cue method
 description Set form method attribute (GET/POST).
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlMethodAtom

aftertextActionParser
 popularity 0.000217
 cue action
 description Set form action URL.
 extends abstractAftertextAttributeParser
 atoms cueAtom urlAtom

aftertextAutocompleteParser
 popularity 0.000217
 cue autocomplete
 description Set form autocomplete attribute.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextMultipleParser
 popularity 0.000217
 cue multiple
 description Allow multiple selections or files.
 extends abstractAftertextAttributeParser
 single

aftertextSelectedParser
 popularity 0.000217
 cue selected
 description Set selected state for options.
 extends abstractAftertextAttributeParser
 single

aftertextCheckedParser
 popularity 0.000217
 cue checked
 description Set checked state for inputs.
 extends abstractAftertextAttributeParser
 single

aftertextRelParser
 popularity 0.000217
 cue rel
 description Set rel attribute for links.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextEnctypeParser
 popularity 0.000217
 cue enctype
 description Set form enctype for file uploads.
 extends abstractAftertextAttributeParser
 atoms cueAtom htmlAnyAtom

aftertextAcceptParser
 popularity 0.000217
 cue accept
 description Set accepted file types for file inputs.
 extends abstractAftertextAttributeParser
 catchAllAtomType mimeTypeAtom