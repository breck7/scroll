buildCssParser
 popularity 0.000048
 description Compile to CSS file.
 extends abstractBuildTwoCommandParser

cssAnyAtom
 extends codeAtom
cssLengthAtom
 extends codeAtom
cssLineParser
 popularity 0.002870
 catchAllAtomType cssAnyAtom
 catchAllParser cssLineParser
cssParser
 popularity 0.007211
 extends abstractScrollParser
 description A style tag.
 cueFromId
 catchAllParser cssLineParser
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   return `<style>${this.css}</style>`
  }
  get css() {
    return this.content ?? this.subparticlesToString()
  }
  buildCs() {
    return this.css
  }

inlineCssParser
 description Inline CSS from files.
 popularity 0.007211
 extends abstractScrollParser
 cueFromId
 catchAllAtomType filePathAtom
 javascript
  buildHtml() {
   return `<style>/* ${this.content} */\n${this.css}</style>`
  }
  get css() {
    return this.atoms.slice(1).map(filename => this.root.readFile(filename)).join("\n\n")
  }
  buildCs() {
    return this.css
  }

scrollBackgroundColorParser
 description Quickly set CSS background.
 popularity 0.007211
 extends abstractScrollParser
 cue background
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   return `<style>html, body { background: ${this.content};}</style>`
  }

scrollFontColorParser
 description Quickly set CSS font-color.
 popularity 0.007211
 extends abstractScrollParser
 cue color
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   return `<style>html, body { color: ${this.content};}</style>`
  }

scrollFontParser
 description Quickly set font family.
 popularity 0.007211
 extends abstractScrollParser
 cue font
 atoms cueAtom fontFamilyAtom
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   const font = this.content === "Slim" ? "Helvetica Neue; font-weight:100;" : this.content
   return `<style>html, body, h1,h2,h3 { font-family: ${font};}</style>`
  }

quickCssParser
 popularity 0.007524
 description Make a CSS tag.
 extends abstractQuickIncludeParser
 atoms urlAtom
 pattern ^[^\s]+\.(css)$
 javascript
  buildHtml() {
   return `<link rel="stylesheet" type="text/css" href="${this.filename}">`
  }
