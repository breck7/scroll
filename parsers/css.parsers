buildCssParser
 popularity 0.000048
 description Compile to CSS file.
 extends abstractBuildTwoCommandParser
 example
  buildCss

cssAnyAtom
 extends codeAtom
cssValueAtom
 extends cssAnyAtom
cssLengthAtom
 extends codeAtom
cssLineParser
 popularity 0.002870
 catchAllAtomType cssAnyAtom
 catchAllParser cssLineParser
cssParser
 popularity 0.007211
 extends abstractScrollParser
 description A style tag.
 example
  css
   body { color: red;}
 cueFromId
 catchAllParser cssLineParser
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   return `<style>${this.css}</style>`
  }
  get css() {
    return this.content ?? this.subparticlesToString()
  }
  buildCss() {
    return this.css
  }

scrollInlineCssParser
 description Inline CSS from files.
 popularity 0.007211
 extends abstractInlineFileParser
 cue inlineCss
 string joinChar \n\n
 string htmlTag style
 javascript
  buildCss() {
    return this.contents
  }

scrollBackgroundColorParser
 description Quickly set CSS background.
 popularity 0.007211
 extends abstractScrollParser
 cue background
 catchAllAtomType cssAnyAtom
 example
  background red
 javascript
  buildHtml() {
   return `<style>html, body { background: ${this.content};}</style>`
  }

scrollFontColorParser
 description Quickly set CSS font-color.
 popularity 0.007211
 extends abstractScrollParser
 cue color
 catchAllAtomType cssAnyAtom
 javascript
  buildHtml() {
   return `<style>html, body { color: ${this.content};}</style>`
  }

scrollFontParser
 description Quickly set font family.
 popularity 0.007211
 extends abstractScrollParser
 cue font
 atoms cueAtom fontFamilyAtom
 catchAllAtomType cssAnyAtom
 example
  font Slim
 javascript
  buildHtml() {
   const font = this.content === "Slim" ? "Helvetica Neue; font-weight:100;" : this.content
   return `<style>html, body, h1,h2,h3 { font-family: ${font};}</style>`
  }

quickCssParser
 popularity 0.007524
 description Make a CSS tag.
 extends abstractQuickIncludeParser
 example
  style.css
 atoms urlAtom
 pattern ^[^\s]+\.(css)(?:\?[^\s]*)?$
 boolean noSnippet true
 javascript
  buildHtml() {
   return `<link rel="stylesheet" type="text/css" href="${this.filename}">`
  }

cssSelectorAtom
 paint keyword.control
 examples body h1
 // todo add html tags, css and ids selector regexes, etc
cssVendorPrefixCueAtom
 description Properties like -moz-column-fill
 paint variable.function
 extends cueAtom
cssPropertyNameAtom
 paint variable.function
 // todo Where are these coming from? Can we add a url link
 enum align-content align-items align-self all animation animation-delay animation-direction animation-duration animation-fill-mode animation-iteration-count animation-name animation-play-state animation-timing-function backface-visibility background background-attachment background-blend-mode background-clip background-color background-image background-origin background-position background-repeat background-size border border-bottom border-bottom-color border-bottom-left-radius border-bottom-right-radius border-bottom-style border-bottom-width border-collapse border-color border-image border-image-outset border-image-repeat border-image-slice border-image-source border-image-width border-left border-left-color border-left-style border-left-width border-radius border-right border-right-color border-right-style border-right-width border-spacing border-style border-top border-top-color border-top-left-radius border-top-right-radius border-top-style border-top-width border-width bottom box-shadow box-sizing break-inside caption-side clear clip color column-count column-fill column-gap column-rule column-rule-color column-rule-style column-rule-width column-span column-width columns content counter-increment counter-reset cursor direction display empty-atoms fill filter flex flex-basis flex-direction flex-flow flex-grow flex-shrink flex-wrap float font @font-face font-family font-size font-size-adjust font-stretch font-style font-variant font-weight  hanging-punctuation height hyphens justify-content @keyframes left letter-spacing line-height list-style list-style-image list-style-position list-style-type margin margin-bottom margin-left margin-right margin-top max-height max-width @media min-height min-width nav-down nav-index nav-left nav-right nav-up opacity order outline outline-color outline-offset outline-style outline-width overflow overflow-x overflow-y padding padding-bottom padding-left padding-right padding-top page-break-after page-break-before page-break-inside perspective perspective-origin position quotes resize right tab-size table-layout text-align text-align-last text-decoration text-decoration-color text-decoration-line text-decoration-style text-indent text-justify text-overflow text-shadow text-transform top transform transform-origin transform-style transition transition-delay transition-duration transition-property transition-timing-function unicode-bidi vertical-align visibility white-space width atom-break atom-spacing atom-wrap z-index overscroll-behavior-x user-select -ms-touch-action -webkit-user-select -webkit-touch-callout -moz-user-select touch-action -ms-user-select -khtml-user-select gap grid-auto-flow grid-column grid-column-end grid-column-gap grid-column-start grid-gap grid-row grid-row-end grid-row-gap grid-row-start grid-template-columns grid-template-rows justify-items justify-self

scrollStylesParser
 cue styles
 extends abstractScrollParser
 description Write CSS with Particle Syntax.
 inScope abstractCommentParser
 catchAllParser selectorParser
 javascript
  getSelector() {
   return ""
  }
  get css() {
   return this.topDownArray
    .filter(particle => particle.isSelectorParser)
    .map(subparticle => subparticle.compile())
    .join("")
  }
  buildHtml() {
   return `<style>${this.css}</style>`
  }
  buildCss() {
    return this.css
  }
 example
  styles
   .styleTest
    h1
     color blue
  div
   class styleTest
   h1 Hello world
 propertyParser
  catchAllAtomType cssValueAtom
  catchAllParser errorParser
  javascript
   compile(spaces) {
    return `${spaces}${this.cue}: ${this.content};`
   }
  atoms cssPropertyNameAtom
 variableParser
  extends propertyParser
  pattern --
 browserPrefixPropertyParser
  extends propertyParser
  pattern ^\-\w.+
  atoms cssVendorPrefixCueAtom
 selectorParser
  inScope propertyParser variableParser commentParser
  catchAllParser selectorParser
  boolean isSelectorParser true
  javascript
   getSelector() {
    const parentSelector = this.parent.getSelector()
    return this.cue
     .split(",")
     .map(part => {
      if (part.startsWith("&")) return parentSelector + part.substr(1)
      return parentSelector ? parentSelector + " " + part : part
     })
     .join(",")
   }
   compile() {
    const propertyParsers = this.getSubparticles().filter(particle => particle.doesExtend("propertyParser"))
    if (!propertyParsers.length) return ""
    const spaces = "  "
    return `${this.getSelector()} {
   ${propertyParsers.map(subparticle => subparticle.compile(spaces)).join("\n")}
   }\n`
   }
  atoms cssSelectorAtom
