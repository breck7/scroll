buildCommandAtom
 extends cueAtom
 description Give build command atoms their own color.
 paint constant

abstractBuildCommandParser
 extends abstractScrollParser
 cueFromId
 atoms buildCommandAtom
 catchAllAtomType filePathAtom
 inScope slashCommentParser
 javascript
  isTopMatter = true
  buildHtml() {
   return ""
  }
  get extension() {
    return this.cue.replace("build", "")
  }
  buildOutput() {
    return this.root.compileTo(this.extension)
  }
  async _buildFileType(extension) {
    const {root} = this
    const { fileSystem, folderPath, filename, filePath, path, lodash, permalink } = root
    const capitalized = lodash.capitalize(extension)
    const buildKeyword = "build" + capitalized
    const outputFiles = this.content?.split(" ") || [""]
    for (let name of outputFiles) {
      const link = name || permalink.replace(".html", "." + extension.toLowerCase())
      try {
        await fileSystem.writeProduct(path.join(folderPath, link), root.compileTo(capitalized))
        root.log(`ðŸ’¾ Built ${link} from ${filename}`)
      } catch (err) {
        console.error(`Error while building '${filePath}' with extension '${extension}'`)
        throw err
      }
    }
  }

abstractBuildOneCommandParser
 // buildOne and buildTwo are just a dumb/temporary way to have CSVs/JSONs/TSVs build first. Will be merged at some point.
 extends abstractBuildCommandParser
 javascript
  async buildOne() { await this._buildFileType(this.extension) }

abstractBuildTwoCommandParser
 extends abstractBuildCommandParser
 javascript
  async buildTwo() {
    await this._buildFileType(this.extension)
  }