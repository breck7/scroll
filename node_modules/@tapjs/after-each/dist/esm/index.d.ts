/**
 * Plugin class providing {@link @tapjs/after-each!AfterEach#afterEach}
 * on the {@link @tapjs/test!index.Test} class.
 *
 * @module
 */
import { TapPlugin, TestBase } from '@tapjs/core';
import type { Test } from '@tapjs/test';
/**
 * Implementation class returned by plugin function
 */
export declare class AfterEach {
    #private;
    constructor(t: TestBase);
    /**
     * Run the supplied function after every *child* test, and any of those
     * child tests' children, and so on.
     *
     * The test that has just completed is passed in as an argument to the
     * function. Note that at this point, the test is fully ended, so attempting
     * to call assertion methods on it will raise an error.
     *
     * @group Test Lifecycle Management
     */
    afterEach(fn: (t: Test) => any): void;
}
/**
 * Plugin method that creates the {@link @tapjs/after-each!AfterEach} instance
 */
export declare const plugin: TapPlugin<AfterEach>;
//# sourceMappingURL=index.d.ts.map