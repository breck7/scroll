{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":";;;AAAA,sCAOoB;AAIpB,qBAAqB;AACrB,MAAM,OAAO,GAAG,GAAG,EAAE;IACnB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAA;AAC9C,CAAC,CAAA;AACD,oBAAoB;AAEpB,MAAa,WAAW;IACtB,EAAE,CAAU;IACZ,YAAY,CAAW;QACrB,IAAI,CAAC,EAAE,GAAG,CAAC,CAAA;IACb,CAAC;IAUD,KAAK,CACH,IAAyB,EACzB,KAAiB;QAEjB,IAAI,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YACpC,KAAK,GAAG,IAAI,CAAA;YACZ,IAAI,GAAG,SAAS,CAAA;SACjB;QACD,IAAI,KAAK,YAAY,CAAA;QACrB,KAAK,KAAK,EAAE,CAAA;QACZ,OAAO,IAAI,CAAC,EAAE,CAAC,GAAG,CAChB,YAAK,EACL,IAAA,oBAAa,EAAQ,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,EAC1C,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAChB,CAAA;IACH,CAAC;CACF;AA9BD,kCA8BC;AAEM,MAAM,MAAM,GAA2B,CAAC,CAAW,EAAE,EAAE,CAC5D,IAAI,WAAW,CAAC,CAAC,CAAC,CAAA;AADP,QAAA,MAAM,UACC","sourcesContent":["import {\n  parseTestArgs,\n  PromiseWithSubtest,\n  Stdin,\n  StdinOpts,\n  TapPlugin,\n  TestBase,\n} from '@tapjs/core'\n\nexport type PromiseWithStdin = PromiseWithSubtest<Stdin>\n\n/* c8 ignore start */\nconst stdinCB = () => {\n  throw new Error('this should not be called')\n}\n/* c8 ignore stop */\n\nexport class StdinPlugin {\n  #t: TestBase\n  constructor(t: TestBase) {\n    this.#t = t\n  }\n  /**\n   * Parse standard input as a child test\n   *\n   * @group Subtest Methods\n   */\n  stdin(): PromiseWithStdin\n  stdin(name: string): PromiseWithStdin\n  stdin(name: string, extra: StdinOpts): PromiseWithStdin\n  stdin(extra: StdinOpts): PromiseWithStdin\n  stdin(\n    name?: string | StdinOpts,\n    extra?: StdinOpts\n  ): PromiseWithStdin {\n    if (name && typeof name === 'object') {\n      extra = name\n      name = undefined\n    }\n    name ??= '/dev/stdin'\n    extra ??= {}\n    return this.#t.sub(\n      Stdin,\n      parseTestArgs<Stdin>(name, extra, stdinCB),\n      this.#t.t.stdin\n    )\n  }\n}\n\nexport const plugin: TapPlugin<StdinPlugin> = (t: TestBase) =>\n  new StdinPlugin(t)\n"]}