{"version":3,"file":"counts.js","sourceRoot":"","sources":["../../src/counts.ts"],"names":[],"mappings":";;;AAYA;;;;;;;GAOG;AACH,MAAa,MAAM;IACjB,KAAK,GAAW,CAAC,CAAA;IACjB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,IAAI,GAAW,CAAC,CAAA;IAChB,QAAQ,GAAW,CAAC,CAAA;IACpB,YAAY,CAAuB;QACjC,IAAI,CAAC;YAAE,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC/B,CAAC;IACD,MAAM;QACJ,MAAM,CAAC,GAAe;YACpB,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;SAChB,CAAA;QACD,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,IAAI;YAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAA;QACjC,IAAI,IAAI,CAAC,QAAQ;YAAE,CAAC,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAA;QAC7C,OAAO,CAAC,CAAA;IACV,CAAC;CACF;AArBD,wBAqBC","sourcesContent":["/**\n * JSON object representation of {@link @tapjs/core!counts.Counts}\n */\nexport interface CountsJSON {\n  total: number\n  pass: number\n  fail?: number\n  skip?: number\n  todo?: number\n  complete?: number\n}\n\n/**\n * Class representing a count of all the assertions in a test\n *\n * The {@link @tapjs/core!counts.Counts#complete} field is only used when counting tests and\n * tracking their completion status.\n *\n * @internal\n */\nexport class Counts {\n  total: number = 0\n  pass: number = 0\n  fail: number = 0\n  skip: number = 0\n  todo: number = 0\n  complete: number = 0\n  constructor(c?: Counts | CountsJSON) {\n    if (c) Object.assign(this, c)\n  }\n  toJSON(): CountsJSON {\n    const c: CountsJSON = {\n      total: this.total,\n      pass: this.pass,\n    }\n    if (this.fail) c.fail = this.fail\n    if (this.todo) c.todo = this.todo\n    if (this.skip) c.skip = this.skip\n    if (this.complete) c.complete = this.complete\n    return c\n  }\n}\n"]}