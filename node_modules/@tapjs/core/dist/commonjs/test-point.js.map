{"version":3,"file":"test-point.js","sourceRoot":"","sources":["../../src/test-point.ts"],"names":[],"mappings":";;;AAAA,yCAAkC;AAClC,qCAA8B;AAc9B;;GAEG;AACH,MAAa,SAAS;IACpB,EAAE,CAAmB;IACrB,IAAI,CAAQ;IACZ,OAAO,CAAQ;IACf,KAAK,CAAwB;IAC7B,GAAG,CAAQ;IAEX,YACE,EAAW,EACX,OAAe,EACf,KAA8B;QAE9B,KAAK,GAAG,KAAK,IAAI,EAAE,CAAA;QACnB,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAA;QAChC,OAAO,GAAG,OAAO;aACd,IAAI,EAAE;aACN,OAAO,CAAC,SAAS,EAAE,GAAG,CAAC;aACvB,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;QACvB,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,CAAA;QACjC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAA;QAClB,IAAI,CAAC,IAAI,GAAG,OAAO,CAAA;QACnB,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC,IAAA,YAAG,EAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAA;IACjD,CAAC;CACF;AAvBD,8BAuBC;AAED,MAAM,SAAS,GAAG,CAChB,WAAmB,EACnB,KAA2B,EACnB,EAAE;IACV,IAAI,OAAO,GAAG,WAAW,CAAC,CAAC,CAAC,MAAM,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;IAEpD,IAAI,KAAK,CAAC,IAAI,EAAE;QACd,OAAO,IAAI,SAAS,CAAA;QACpB,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAClC,OAAO,IAAI,GAAG,GAAG,IAAA,YAAG,EAAC,KAAK,CAAC,IAAI,CAAC,CAAA;SACjC;KACF;SAAM,IAAI,KAAK,CAAC,IAAI,EAAE;QACrB,OAAO,IAAI,SAAS,CAAA;QACpB,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAClC,OAAO,IAAI,GAAG,GAAG,IAAA,YAAG,EAAC,KAAK,CAAC,IAAI,CAAC,CAAA;SACjC;KACF;SAAM,IAAI,KAAK,CAAC,IAAI,EAAE;QACrB,OAAO,IAAI,UAAU,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI,CAAA;KAC1C;IAED,2CAA2C;IAE3C,MAAM,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,GAAG,IAAA,gBAAK,EAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAA;IAC5D,OAAO,IAAI,QAAQ,GAAG,IAAI,CAAA;IAE1B,OAAO,OAAO,CAAA;AAChB,CAAC,CAAA","sourcesContent":["import { diags } from './diags.js'\nimport { esc } from './esc.js'\nimport { Extra } from './index.js'\n\n/**\n * Very simple result object, just indicating pass/fail status,\n * message, and the {@link @tapjs/core!index.Extra} object provided to the\n * assertion method.\n */\nexport interface Result {\n  ok: boolean\n  message: string\n  extra: Extra\n}\n\n/**\n * Object representing a single test point `ok` / `not ok` line\n */\nexport class TestPoint {\n  ok: 'ok ' | 'not ok '\n  name: string\n  message: string\n  extra: { [key: string]: any }\n  res: Result\n\n  constructor(\n    ok: boolean,\n    message: string,\n    extra?: { [key: string]: any }\n  ) {\n    extra = extra || {}\n    this.ok = ok ? 'ok ' : 'not ok '\n    message = message\n      .trim()\n      .replace(/[\\n\\r]/g, ' ')\n      .replace(/\\t/g, '  ')\n    this.res = { ok, message, extra }\n    this.extra = extra\n    this.name = message\n    this.message = tpMessage(esc(this.name), extra)\n  }\n}\n\nconst tpMessage = (\n  description: string,\n  extra: { [k: string]: any }\n): string => {\n  let message = description ? ` - ${description}` : ''\n\n  if (extra.skip) {\n    message += ' # SKIP'\n    if (typeof extra.skip === 'string') {\n      message += ' ' + esc(extra.skip)\n    }\n  } else if (extra.todo) {\n    message += ' # TODO'\n    if (typeof extra.todo === 'string') {\n      message += ' ' + esc(extra.todo)\n    }\n  } else if (extra.time) {\n    message += ' # time=' + extra.time + 'ms'\n  }\n\n  // TODO: add # time if duration_ms in extra\n\n  const diagYaml = extra.diagnostic ? '\\n' + diags(extra) : ''\n  message += diagYaml + '\\n'\n\n  return message\n}\n"]}