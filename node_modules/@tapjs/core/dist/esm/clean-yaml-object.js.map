{"version":3,"file":"clean-yaml-object.js","sourceRoot":"","sources":["../../src/clean-yaml-object.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,cAAc,CAAA;AACrC,OAAO,EAAE,mBAAmB,EAAE,MAAM,MAAM,CAAA;AAC1C,OAAO,EAAE,YAAY,EAAE,MAAM,SAAS,CAAA;AACtC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,UAAU,CAAA;AAEzC,MAAM,WAAW,GAAG,CAAC,IAAY,EAAE,EAAE;IACnC,IAAI;QACF,OAAO,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,CAAA;KAClC;IAAC,OAAO,CAAC,EAAE;QACV,OAAM;KACP;AACH,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,GAAyB,EAAE,GAAW,EAAE,EAAE,CACxD,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;AAEhD;;;;GAIG;AACH,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,MAA4B,EAAE,EAAE;IAC9D,MAAM,GAAG,GAAG,EAAE,GAAG,MAAM,EAAE,CAAA;IACzB,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE;QAC9C,MAAM,EAAE,GAAG,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC;YACjC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;YACzD,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;QACrB,MAAM,CAAC,GAAG,KAAK,CAAC,UAAU,CAAC,EAAE,CAAC,CAAA;QAC9B,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;QACb,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA;KAClD;IACD,IACE,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ;QAC7B,GAAG,CAAC,KAAK;QACT,CAAC,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EACzB;QACA,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAA;KACvC;IAED,IAAI,GAAG,CAAC,WAAW,IAAI,OAAO,GAAG,CAAC,WAAW,KAAK,QAAQ,EAAE;QAC1D,GAAG,CAAC,WAAW,GAAG,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAA;KACnD;IAED,IACE,GAAG,CAAC,EAAE;QACN,GAAG,CAAC,EAAE,YAAY,KAAK,CAAC,YAAY;QACpC,GAAG,CAAC,EAAE,CAAC,QAAQ;QACf,GAAG,CAAC,EAAE,CAAC,gBAAgB;QACvB,GAAG,CAAC,EAAE,CAAC,UAAU;QACjB,CAAC,GAAG,CAAC,MAAM,EACX;QACA,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE,CAAC,gBAAgB,CAAA;QACpC,MAAM,OAAO,GAAG,WAAW,CAAC,IAAI,CAAC,CAAA;QACjC,IAAI,OAAO,EAAE;YACX,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;YACjC,IAAI,GAAG,CAAC,EAAE,CAAC,UAAU,IAAI,KAAK,CAAC,MAAM,EAAE;gBACrC,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,CAAC,CAAC,CAAA;gBACpD,MAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,EAAE,KAAK,CAAC,MAAM,CAAC,CAAA;gBAC7D,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,GAAG,CAAC,CAAC,CAAA;gBACzC,MAAM,KAAK,GACT,GAAG,CAAC,EAAE,CAAC,YAAY;oBACnB,IAAI;oBACJ,GAAG,CAAC,EAAE,CAAC,YAAY,IAAI,IAAI,CAAC,MAAM;oBAChC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;oBAC7C,CAAC,CAAC,EAAE,CAAA;gBACR,MAAM,OAAO,GAAG,KAAK;qBAClB,KAAK,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,CAAC,UAAU,CAAC;qBACnC,MAAM,CAAC,KAAK,CAAC;qBACb,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;gBAClD,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAA;gBAC3C,IAAI,MAAM;oBAAE,GAAG,CAAC,MAAM,GAAG,MAAM,GAAG,IAAI,CAAA;aACvC;SACF;KACF;IACD,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,YAAY,KAAK,CAAC,YAAY,EAAE;QAClD,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,MAAM,EAAE,CAAA;KACzB;IAED,kCAAkC;IAClC,oDAAoD;IACpD,uDAAuD;IACvD,oDAAoD;IACpD,uCAAuC;IACvC,IACE,OAAO,IAAI,GAAG;QACd,QAAQ,IAAI,GAAG;QACf,GAAG,CAAC,KAAK,KAAK,GAAG,CAAC,MAAM;QACxB,CAAC,GAAG,CAAC,IAAI,EACT;QACA,MAAM,CAAC,GAAG,GAAG,CAAC,KAAK,CAAA;QACnB,MAAM,CAAC,GAAG,GAAG,CAAC,MAAM,CAAA;QACpB,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ;YAChD,GAAG,CAAC,IAAI,GAAG,mBAAmB,CAC5B,UAAU,EACV,QAAQ,EACR,CAAC,GAAG,IAAI,EACR,CAAC,GAAG,IAAI,CACT,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;aACnB,IACH,CAAC;YACD,CAAC;YACD,OAAO,CAAC,KAAK,QAAQ;YACrB,OAAO,CAAC,KAAK,QAAQ,EACrB;YACA,MAAM,CAAC,GAAG,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACtB,IAAI,CAAC,CAAC,CAAC,KAAK,EAAE;gBACZ,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAA;aAClB;iBAAM;gBACL,GAAG,CAAC,IAAI,GAAG,0BAA0B,CAAA;aACtC;SACF;aAAM;YACL,2BAA2B;YAC3B,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;YACpB,MAAM,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;YACpB,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA;YAClD,MAAM,EAAE,GAAG,CAAC,OAAO,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,IAAI,CAAA;YAClD,IAAI,EAAE,KAAK,EAAE,EAAE;gBACb,GAAG,CAAC,IAAI,GAAG,mBAAmB,CAC5B,UAAU,EACV,QAAQ,EACR,EAAE,EACF,EAAE,CACH,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAA;aACvB;SACF;QACD,IAAI,GAAG,CAAC,IAAI,KAAK,4BAA4B,EAAE;YAC7C,OAAO,GAAG,CAAC,IAAI,CAAA;SAChB;QACD,IAAI,GAAG,CAAC,IAAI,EAAE;YACZ,OAAO,GAAG,CAAC,KAAK,CAAA;YAChB,OAAO,GAAG,CAAC,MAAM,CAAA;SAClB;KACF;IAED,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QAC9C,IAAI,eAAe,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;YAC/B,OAAO,GAAG,CAAC,GAAG,CAAC,CAAA;SAChB;KACF;IAED,wDAAwD;IACxD,gDAAgD;IAChD,IAAI,OAAO,GAAG,CAAC,OAAO,KAAK,QAAQ;QAAE,OAAO,GAAG,CAAC,OAAO,CAAA;IAEvD,6BAA6B;IAC7B,IACE,GAAG,CAAC,IAAI,KAAK,IAAI;QACjB,OAAO,GAAG,CAAC,QAAQ,KAAK,QAAQ;QAChC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAC3B;QACA,GAAG,CAAC,QAAQ,GAAG,eAAe,CAAA;KAC/B;IAED,OAAO,GAAG,CAAA;AACZ,CAAC,CAAA;AAED;;;;GAIG;AACH,MAAM,CAAC,MAAM,YAAY,GAAG,IAAI,GAAG,CAAC;IAClC,MAAM;IACN,MAAM;IACN,SAAS;IACT,IAAI;IACJ,MAAM;IACN,QAAQ;IACR,MAAM;IACN,MAAM;IACN,YAAY;IACZ,UAAU;IACV,QAAQ;IACR,uEAAuE;IACvE,UAAU;IACV,UAAU;IACV,mDAAmD;IACnD,4CAA4C;IAC5C,MAAM;IACN,YAAY;IACZ,MAAM;IACN,aAAa;IACb,KAAK;CACN,CAAC,CAAA;AAEF;;;GAGG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC;IACnC,IAAI;IACJ,OAAO;IACP,SAAS;IACT,OAAO;IAEP,mDAAmD;IACnD,4CAA4C;IAC5C,SAAS;IACT,gBAAgB;CACjB,CAAC,CAAA;AAEF;;;GAGG;AACH,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,aAAa;IACb,YAAY;IACZ,qCAAqC;IACrC,eAAe;CAChB,CAAA;AAED,MAAM,eAAe,GAAG,CAAC,GAAW,EAAE,KAAU,EAAE,EAAE,CAClD,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC;IACrB,CAAC,aAAa,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;IAC1C,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;AAEtC,iEAAiE;AACjE,MAAM,OAAO,GAAG,CAAC,GAAQ,EAAa,EAAE;IACtC,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,IAAI,CAAA;KACZ;IACD,IAAI,OAAO,GAAG,KAAK,QAAQ,EAAE;QAC3B,OAAO,KAAK,CAAA;KACb;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;QACtB,OAAO,GAAG,CAAC,MAAM,KAAK,CAAC,CAAA;KACxB;IACD,KAAK,MAAM,CAAC,IAAI,GAAG,EAAE;QACnB,OAAO,KAAK,CAAA;KACb;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import * as stack from '@tapjs/stack'\nimport { createTwoFilesPatch } from 'diff'\nimport { readFileSync } from 'node:fs'\nimport { format, strict } from 'tcompare'\n\nconst tryReadFile = (path: string) => {\n  try {\n    return readFileSync(path, 'utf8')\n  } catch (_) {\n    return\n  }\n}\n\nconst hasOwn = (obj: { [k: string]: any }, key: string) =>\n  Object.prototype.hasOwnProperty.call(obj, key)\n\n/**\n * Prepare an object for printing to YAML diagnostics.\n *\n * Looks up source, calculates diffs of actual/expected values, and so on.\n */\nexport const cleanYamlObject = (object: { [k: string]: any }) => {\n  const res = { ...object }\n  if (hasOwn(res, 'stack') && !hasOwn(res, 'at')) {\n    const st = Array.isArray(res.stack)\n      ? res.stack.map(s => String(s).trimEnd() + '\\n').join('')\n      : String(res.stack)\n    const p = stack.parseStack(st)\n    res.at = p[0]\n    res.stack = p.map(c => String(c) + '\\n').join('')\n  }\n  if (\n    typeof res.stack === 'string' &&\n    res.stack &&\n    !res.stack.endsWith('\\n')\n  ) {\n    res.stack = res.stack.trimEnd() + '\\n'\n  }\n\n  if (res.errorOrigin && typeof res.errorOrigin === 'object') {\n    res.errorOrigin = cleanYamlObject(res.errorOrigin)\n  }\n\n  if (\n    res.at &&\n    res.at instanceof stack.CallSiteLike &&\n    res.at.fileName &&\n    res.at.absoluteFileName &&\n    res.at.lineNumber &&\n    !res.source\n  ) {\n    const file = res.at.absoluteFileName\n    const content = tryReadFile(file)\n    if (content) {\n      const lines = content.split('\\n')\n      if (res.at.lineNumber <= lines.length) {\n        const startLine = Math.max(res.at.lineNumber - 3, 0)\n        const endLine = Math.min(res.at.lineNumber + 2, lines.length)\n        const line = lines[res.at.lineNumber - 1]\n        const caret =\n          res.at.columnNumber &&\n          line &&\n          res.at.columnNumber <= line.length\n            ? ['-'.repeat(res.at.columnNumber - 1) + '^']\n            : []\n        const context = lines\n          .slice(startLine, res.at.lineNumber)\n          .concat(caret)\n          .concat(lines.slice(res.at.lineNumber, endLine))\n        const csplit = context.join('\\n').trimEnd()\n        if (csplit) res.source = csplit + '\\n'\n      }\n    }\n  }\n  if (res.at && res.at instanceof stack.CallSiteLike) {\n    res.at = res.at.toJSON()\n  }\n\n  // show a line by line string diff\n  // diff the yaml, to make it more humane, especially\n  // when strings or buffers are very large or multi-line\n  // the shipped compare methods will generally supply\n  // their own diff, which is much nicer.\n  if (\n    'found' in res &&\n    'wanted' in res &&\n    res.found !== res.wanted &&\n    !res.diff\n  ) {\n    const f = res.found\n    const w = res.wanted\n    if (typeof f === 'string' && typeof w === 'string')\n      res.diff = createTwoFilesPatch(\n        'expected',\n        'actual',\n        w + '\\n',\n        f + '\\n'\n      ).replace(/^=+\\n/, '')\n    else if (\n      f &&\n      w &&\n      typeof f === 'object' &&\n      typeof w === 'object'\n    ) {\n      const s = strict(f, w)\n      if (!s.match) {\n        res.diff = s.diff\n      } else {\n        res.note = 'object identities differ'\n      }\n    } else {\n      // some mixed stringly bits\n      const ff = format(f)\n      const fw = format(w)\n      const fs = (typeof f === 'string' ? f : ff) + '\\n'\n      const ws = (typeof w === 'string' ? w : fw) + '\\n'\n      if (fw !== ff) {\n        res.diff = createTwoFilesPatch(\n          'expected',\n          'actual',\n          ws,\n          fs\n        ).replace(/^=+\\n/, '')\n      }\n    }\n    if (res.diff === '--- expected\\n+++ actual\\n') {\n      delete res.diff\n    }\n    if (res.diff) {\n      delete res.found\n      delete res.wanted\n    }\n  }\n\n  for (const [key, value] of Object.entries(res)) {\n    if (shouldDeleteKey(key, value)) {\n      delete res[key]\n    }\n  }\n\n  // if the 'message' is a string, then we print it on the\n  // test point, so no need to repeat in the diags\n  if (typeof res.message === 'string') delete res.message\n\n  // worker: remove inline code\n  if (\n    res.eval === true &&\n    typeof res.filename === 'string' &&\n    res.filename.includes('\\n')\n  ) {\n    res.filename = '<inline code>'\n  }\n\n  return res\n}\n\n/**\n * Properties that are *always* removed from the diagnostics, either because\n * they are internal (eg, `time`), overly noisy (eg, `parent`), or captured\n * elsewhere in the TAP output (eg, `skip`).\n */\nexport const deleteAlways = new Set([\n  'todo',\n  'time',\n  'childId',\n  'cb',\n  'name',\n  'indent',\n  'skip',\n  'bail',\n  'diagnostic',\n  'buffered',\n  'parent',\n  // only relevant if activated, a failedTodo or failedSkip will be added\n  'failSkip',\n  'failTodo',\n  // TODO: keys added by plugins, but referenced here\n  // How can this list be adjusted by plugins?\n  'grep',\n  'grepInvert',\n  'only',\n  'saveFixture',\n  'env',\n])\n\n/**\n * Fields on this list are removed from YAML diagnostics if they are empty\n * (ie, falsey, empty array, or object with no keys)\n */\nexport const deleteIfEmpty = new Set([\n  'at',\n  'stack',\n  'context',\n  'debug',\n\n  // TODO: keys added by plugins, but referenced here\n  // How can this list be adjusted by plugins?\n  'runOnly',\n  'compareOptions',\n])\n\n/**\n * Fields are removed from YAML diagnostics if they match any of these\n * patterns.\n */\nexport const deleteIfMatch = [\n  /^_?tapChild/,\n  /^tapStream/,\n  // TODO: create a @tapjs/mocha plugin\n  /^tapMochaTest/,\n]\n\nconst shouldDeleteKey = (key: string, value: any) =>\n  deleteAlways.has(key) ||\n  (deleteIfEmpty.has(key) && isEmpty(value)) ||\n  deleteIfMatch.some(r => r.test(key))\n\n// return true if object is empty, including inherited properties\nconst isEmpty = (obj: any): obj is {} => {\n  if (!obj) {\n    return true\n  }\n  if (typeof obj !== 'object') {\n    return false\n  }\n  if (Array.isArray(obj)) {\n    return obj.length === 0\n  }\n  for (const _ in obj) {\n    return false\n  }\n  return true\n}\n"]}