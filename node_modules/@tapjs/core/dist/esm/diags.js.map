{"version":3,"file":"diags.js","sourceRoot":"","sources":["../../src/diags.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,UAAU,CAAA;AAC3B,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAA;AAGxD;;;GAGG;AACH,MAAM,CAAC,MAAM,KAAK,GAAG,CAAC,GAAU,EAAE,EAAE;IAClC,MAAM,KAAK,GAAG,eAAe,CAAC,GAAG,CAAC,CAAA;IAClC,IACE,CAAC,KAAK;QACN,OAAO,KAAK,KAAK,QAAQ;QACzB,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,EAC1B;QACA,OAAO,EAAE,CAAA;KACV;IACD,OAAO,CACL,SAAS;QACT,IAAI;aACD,SAAS,CAAC,KAAK,CAAC;aAChB,KAAK,CAAC,IAAI,CAAC;aACX,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;aAC1C,IAAI,CAAC,IAAI,CAAC;QACb,SAAS,CACV,CAAA;AACH,CAAC,CAAA","sourcesContent":["import yaml from 'tap-yaml'\nimport { cleanYamlObject } from './clean-yaml-object.js'\nimport { Extra } from './index.js'\n\n/**\n * Print the YAML diagnostics based on the {@link @tapjs/core!index.Extra}\n * object received\n */\nexport const diags = (obj: Extra) => {\n  const clean = cleanYamlObject(obj)\n  if (\n    !clean ||\n    typeof clean !== 'object' ||\n    !Object.keys(clean).length\n  ) {\n    return ''\n  }\n  return (\n    '  ---\\n' +\n    yaml\n      .stringify(clean)\n      .split('\\n')\n      .map(l => (l.trim() ? '  ' + l : l.trim()))\n      .join('\\n') +\n    '  ...\\n'\n  )\n}\n"]}