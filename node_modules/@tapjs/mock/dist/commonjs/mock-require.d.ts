/// <reference types="node" />
import Module from 'module';
/**
 * Export of the Module class, but with the `require()` and `load()` methods
 * exposed.
 */
export type CorrectModule = Omit<Module, 'require'> & {
    require(id: string): any;
    load(id: string): void;
};
export type CorrectModuleCtor = Omit<typeof Module, 'new' | 'prototype'> & {
    new (id: string, parent: CorrectModule | MockedModule): CorrectModule;
    _cache: {
        [k: string]: CorrectModule;
    };
};
declare const CorrectModule: CorrectModuleCtor;
/**
 * A child class of Module, which loads modules from the mock object
 * if specified, otherwise will load *unmocked* modules in its own
 * mocked environment, so that they will load the mocked modules as well.
 */
export declare class MockedModule extends CorrectModule {
    #private;
    constructor(id: string, parent: CorrectModule | MockedModule, mocker?: Mocker);
    /**
     * Override require() to perform our mocked require
     */
    require(id: string): any;
}
/**
 * Class that handles swapping out real modules for mocks as needed
 */
export declare class Mocker {
    #private;
    module: MockedModule;
    constructor(parentFileName: string, fileName: string, mocks?: {
        [k: string]: any;
    });
    /**
     * Return the module we've previously loaded from the specified filePath,
     * or undefined if it's new.
     */
    getSeen(filePath: string): Module | MockedModule | undefined;
    /**
     * Set the module in the internal cache once loaded
     */
    setSeen(filePath: string, mod: MockedModule): void;
    /**
     * returns true if the set of mocks includes the specified ID
     */
    hasMock(id: string): boolean;
    /**
     * Get the mock at the specified identifier, or undefined if it's not mocked
     */
    getMock(id: string): any;
}
/**
 * Function that actually performs a mocked require()
 */
export declare const mockRequire: (module: string, mocks?: {
    [k: string]: any;
}, caller?: Function | ((...a: any[]) => any)) => any;
export {};
//# sourceMappingURL=mock-require.d.ts.map