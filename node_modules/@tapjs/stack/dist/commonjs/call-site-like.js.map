{"version":3,"file":"call-site-like.js","sourceRoot":"","sources":["../../src/call-site-like.ts"],"names":[],"mappings":";;;AAAA,mCAAiD;AACjD,+BAAoD;AACpD,6BAAmC;AACnC,yCAImB;AAEnB,MAAM,QAAQ,GAAG,sBAAsB,CAAA;AA2BvC,MAAM,UAAU,GAAG,CAAC,CAAM,EAAwB,EAAE,CAClD,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,WAAW,EAAE,IAAI,KAAK,UAAU,CAAA;AAEpE,MAAa,YAAY;IACvB,MAAM,CAAC,iBAAiB,CAAC,CAAQ,EAAE,CAAoB;QACrD,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;IAC3C,CAAC;IAED,SAAS,CAAgB;IACzB,IAAI,CAAS;IACb,UAAU,CAA8C;IACxD,YAAY,CAAgD;IAC5D,IAAI,CAAwC;IAC5C,UAAU,CAAe;IACzB,QAAQ,CAA4C;IACpD,QAAQ,CAA4C;IACpD,UAAU,CAA8C;IACxD,YAAY,CAAgD;IAC5D,MAAM,CAAuC;IAC7C,QAAQ,CAAyC;IACjD,UAAU,CAA2C;IACrD,aAAa,CAA8C;IAC3D,SAAS,CAAkB;IAC3B,UAAU,CAAY;IAEtB,kDAAkD;IAClD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;IACzC,CAAC;IAED,IAAI,gBAAgB;QAClB,IAAI,CAAC,IAAI,CAAC,SAAS;YAAE,OAAO,IAAI,CAAC,SAAS,CAAA;aACrC,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YAC7C,OAAO,IAAA,mBAAa,EAAC,IAAI,CAAC,SAAS,CAAC,CAAA;SACrC;aAAM;YACL,OAAO,IAAI,CAAC,SAAS,CAAA;SACtB;IACH,CAAC;IAED,IAAI,GAAG;QACL,OAAO,IAAI,CAAC,IAAI,CAAA;IAClB,CAAC;IAED,IAAI,GAAG,CAAC,GAAuB;QAC7B,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAC1C,IAAI,CAAC,SAAS,EAAE,QAAQ,CACzB,CAAA;aACF;SACF;QACD,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;QACpC,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CACxC,IAAI,CAAC,SAAS,EAAE,QAAQ,CACzB,CAAA;aACF;SACF;QACD,IAAI,IAAI,CAAC,UAAU;YAAE,IAAI,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,CAAA;IAChD,CAAC;IAED,YACE,CAAe,EACf,CAAsC;QAEtC,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE;YACzB,CAAC,GAAG,IAAA,4BAAiB,EAAC,CAAC,CAAC,CAAA;SACzB;QAED,IAAI,UAAU,CAAC,CAAC,CAAC,EAAE;YACjB,MAAM,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;YAChC,IAAI,CAAC,SAAS,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA;YAC/D,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,eAAe,EAAE,CAAA;YACvC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;YACvB,MAAM,UAAU,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;YACpC,IAAI,UAAU,EAAE;gBACd,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE,UAAU,CAAC,CAAA;aAClD;YACD,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;YAC/B,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,WAAW,EAAE,CAAA;YAC/B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;YACnC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,eAAe,EAAE,CAAA;YACvC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,EAAE,CAAA;YACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,EAAE,CAAA;YAC5B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,EAAE,CAAA;YAChC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,aAAa,EAAE,CAAA;SACvC;aAAM,IAAI,IAAA,iCAAsB,EAAC,CAAC,CAAC,EAAE;YACpC,kCAAkC;YAClC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAA;YACxB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;YACvB,IAAI,CAAC,CAAC,UAAU,EAAE;gBAChB,IAAI,CAAC,UAAU,GAAG,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAA;aACpD;YAED,IAAI,CAAC,UAAU;gBACb,CAAC,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAA;YAClD,IAAI,CAAC,YAAY;gBACf,CAAC,CAAC,YAAY,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAA;YACtD,MAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAA;YAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAA;YAC/D,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAA;YACvB,IAAI,SAAS,EAAE;gBACb,IAAI,CAAC,SAAS,GAAG,SAAS,CAAA;gBAC1B,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;aAC/D;YACD,IAAI,KAAK,GAAG,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,CAAA;YAC3B,IAAI,MAAM,GAAkB,IAAI,CAAA;YAChC,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAA;YAE5B,IAAI,KAAK,EAAE;gBACT,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;oBAC5B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAA;oBACzB,KAAK,GAAG,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAA;iBAC9C;qBAAM;oBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;iBAC3B;gBACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;gBACtB,MAAM,WAAW,GAAG,KAAK,CAAC,KAAK,CAAC,QAAQ,CAIvC,CAAA;gBACD,IAAI,WAAW,EAAE;oBACf,KAAK,GAAG,WAAW,CAAC,CAAC,CAAC,CAAA;oBACtB,MAAM,GAAG,WAAW,CAAC,CAAC,CAAC,CAAA;iBACxB;gBACD,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;gBAC7B,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;gBACpB,IAAI,CAAC,KAAK,SAAS,EAAE;oBACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,IAAI,CAAA;oBAC7C,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,CAAA;oBAC7B,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;wBACvC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA;qBAC/C;oBACD,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;oBACrB,wDAAwD;oBACxD,qBAAqB;iBACtB;qBAAM;oBACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;oBACxB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;iBACrB;gBACD,oBAAoB;aACrB;iBAAM;gBACL,IAAI,CAAC,aAAa,GAAG,KAAK,CAAA;gBAC1B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;gBACpB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAA;gBACxB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;aACvB;SACF;aAAM;YACL,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAA;SAC1D;QAED,yEAAyE;QACzE,wEAAwE;QACxE,IACE,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,YAAY;YACjB,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAC5C;YACA,IAAI,CAAC,YAAY,GAAG,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,YAAY,EAAE,CAAA;SAC5D;aAAM,IAAI,IAAI,CAAC,YAAY,KAAK,IAAI,CAAC,UAAU,EAAE;YAChD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;SACvB;QAED,mEAAmE;QACnE,oEAAoE;QACpE,2DAA2D;QAC3D,sEAAsE;QACtE,kCAAkC;QAClC,IACE,IAAI,CAAC,SAAS;YACd,UAAU,CAAC,CAAC,CAAC;YACb,CAAC,IAAI,CAAC,UAAU;YAChB,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EACnC;YACA,yDAAyD;YACzD,2CAA2C;YAC3C,qBAAqB;YACrB,MAAM,GAAG,GAAG,CAAC,IAAI,CAAC,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAA;YACnD,oBAAoB;YACpB,IAAI,CAAC,UAAU,GAAG,IAAA,sBAAa,EAAC,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAA;YACpD,IAAI,IAAI,CAAC,UAAU,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC1D,8DAA8D;gBAC9D,kEAAkE;gBAClE,8DAA8D;gBAC9D,0CAA0C;gBAC1C,2DAA2D;gBAC3D,6DAA6D;gBAC7D,iEAAiE;gBACjE,kBAAkB;gBAClB,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS;gBACvC,uDAAuD;gBACvD,gDAAgD;gBAChD,qBAAqB;gBACrB,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,EAChC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;gBACzC,oBAAoB;iBACrB,CAAA;gBACD,IAAI,OAAO,EAAE;oBACX,MAAM,MAAM,GAAqB;wBAC/B,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,aAAa;wBACvC,qBAAqB;wBACrB,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,GAAG,OAAO,CAAC,eAAe;wBAClD,oBAAoB;qBACrB,CAAA;oBACD,MAAM,YAAY,GAAG,OAAO,CAAC,YAAY,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;oBACrD,MAAM,cAAc,GAAG,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,CAAC,CAAC,CAAA;oBACzD,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;oBACpD,IAAI,CAAC,SAAS,GAAG;wBACf,qBAAqB;wBACrB,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,IAAI,IAAI,CAAC;wBAC/C,oBAAoB;wBACpB,UAAU,EAAE,IAAI,CAAC,UAAU;wBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;qBAChC,CAAA;oBAED,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,cAAc,CAAA;oBACvC,IAAI,CAAC,UAAU,GAAG,YAAY,CAAA;oBAC9B,IAAI,CAAC,YAAY,GAAG,cAAc,CAAA;iBACnC;aACF;SACF;IACH,CAAC;IAED,WAAW,CAAC,QAAwB;QAClC,IAAI,CAAC,GAAG,QAAQ,CAAA;QAChB,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAA;QAChB,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;YAAE,OAAO,CAAC,CAAA;QACnC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;YAAE,CAAC,GAAG,IAAA,mBAAa,EAAC,CAAC,CAAC,CAAA;QACjD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;YAAE,OAAO,CAAC,CAAA;;YAChC,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAA;QAC9B,IAAI;YACF,MAAM,GAAG,GAAG,IAAA,eAAQ,EAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;YAClC,OAAO,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;SACvC;QAAC,MAAM;YACN,OAAO,CAAC,CAAA;SACT;IACH,CAAC;IACD,aAAa,CAAC,QAAwB;QACpC,IAAI,CAAC,GAAG,QAAQ,CAAA;QAChB,IAAI,CAAC,CAAC;YAAE,OAAO,CAAC,CAAA;QAChB,IAAI,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC;YAAE,OAAO,CAAC,CAAA;QACnC,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC;YAAE,CAAC,GAAG,IAAA,mBAAa,EAAC,CAAC,CAAC,CAAA;QACjD,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS;YAAE,OAAO,CAAC,CAAA;QACrC,IAAI;YACF,OAAO,IAAA,cAAO,EAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;SAC7B;QAAC,MAAM;YACN,OAAO,CAAC,CAAA;SACT;IACH,CAAC;IAED,QAAQ,CAAC,OAAO,GAAG,KAAK;QACtB,+DAA+D;QAC/D,yDAAyD;QACzD,MAAM,MAAM,GACV,OAAO;YACP,IAAI,CAAC,SAAS,EAAE,QAAQ;YACxB,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,SAAS,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ;YACzC,CAAC,IAAA,iBAAU,EAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAA;QAC/D,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,GACrD,MAAM,IAAI,IAAI,CAAC,SAAS;YACtB,CAAC,CAAC;gBACE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;gBACrD,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU;gBACrC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,YAAY;gBACzC,SAAS,EAAE,SAAS;aACrB;YACH,CAAC,CAAC,OAAO;gBACT,CAAC,CAAC;oBACE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC;oBAC3C,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,YAAY,EAAE,IAAI,CAAC,YAAY;oBAC/B,SAAS,EAAE,SAAS;iBACrB;gBACH,CAAC,CAAC,IAAI,CAAA;QACV,MAAM,GAAG,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,SAAS,EAAE,CAAA;QAC7D,KAAK,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,SAAS,CAAC,EAAE;YACpC,IAAI,CAAC,EAAE,QAAQ,EAAE;gBACf,CAAC,CAAC,QAAQ,GAAG,OAAO;oBAClB,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,QAAQ,CAAC;oBAChC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA;aACjC;SACF;QAED,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,IAAI,EAAE,CAAA;QACnC,IAAI,EAAE,GAAG,EAAE,CAAA;QACX,IAAI,KAAK,GAAG,EAAE,CAAA;QACd,IAAI,KAAK,GAAG,EAAE,CAAA;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,IAAI,aAAa,CAAA;YAC3C,EAAE,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,EAAE,CAAA;YAC7B,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,EAAE,CAAA;YACpC,KAAK,GAAG,IAAI,CAAC,QAAQ,GAAG,OAAO,GAAG,EAAE,CAAA;SACrC;QACD,IAAI,CAAC,KAAK,IAAI,EAAE,EAAE;YAChB,KAAK,GAAG,EAAE,CAAA;SACX;QACD,MAAM,EAAE,GAAG,IAAI,CAAC,UAAU,CAAA;QAC1B,IACE,KAAK;YACL,EAAE;YACF,EAAE;YACF,KAAK,KAAK,EAAE;YACZ,KAAK,KAAK,KAAK;YACf,KAAK,KAAK,KAAK,EACf;YACA,KAAK,IAAI,QAAQ,EAAE,GAAG,CAAA;SACvB;QACD,IAAI,IAAI,CAAC,aAAa,IAAI,KAAK,EAAE;YAC/B,KAAK,GAAG,OAAO,KAAK,EAAE,CAAA;SACvB;QACD,IAAI,EAAE,GAAG,EAAE,CAAA;QACX,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAA;QACzC,IAAI,IAAI,GAAG,GAAG,CAAC,QAAQ,IAAI,EAAE,CAAA;QAC7B,MAAM,KAAK,GAAG,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,YAAY,CAAA;QAChD,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,EAAE,GAAG,WAAW,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAA;YACnD,IAAI,KAAK,EAAE;gBACT,MAAM,CAAC,GAAG,GAAG,CAAC,QAAQ,IAAI,aAAa,CAAA;gBACvC,IAAI,EAAE,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,YAAY,EAAE,CAAA;gBACrD,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE;oBAC3C,MAAM,CAAC,GAAG,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAA;oBAChC,MAAM,EAAE,UAAU,EAAE,CAAC,EAAE,YAAY,EAAE,CAAC,EAAE,GAAG,GAAG,CAAC,SAAS,CAAA;oBACxD,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,GAAG,CAAA;iBAC9B;gBACD,EAAE,IAAI,KAAK,EAAE,EAAE,CAAA;aAChB;YACD,4CAA4C;YAC5C,qBAAqB;YACrB,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAA;YAC5B,oBAAoB;YACpB,OAAO,GAAG,KAAK,GAAG,EAAE,EAAE,CAAA;SACvB;QAED,IAAI,IAAI,IAAI,KAAK,EAAE;YACjB,IAAI,KAAK,EAAE;gBACT,qBAAqB;gBACrB,IAAI,GAAG,IAAI,IAAI,aAAa,CAAA;gBAC5B,oBAAoB;gBACpB,IAAI,IAAI,IAAI,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,YAAY,EAAE,CAAA;aACjD;SACF;aAAM,IAAI,GAAG,EAAE;YACd,IAAI,GAAG,QAAQ,CAAA;YACf,6BAA6B;YAC7B,qBAAqB;SACtB;aAAM;YACL,IAAI,GAAG,EAAE,CAAA;SACV;QACD,oBAAoB;QACpB,IAAI,CAAC,GAAG,EAAE,CAAA;QACV,IAAI,GAAG,CAAC,SAAS,IAAI,GAAG,CAAC,SAAS,CAAC,QAAQ,EAAE;YAC3C,MAAM,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,GAAG,CAAC,SAAS,CAAA;YAC5D,CAAC,GAAG,QAAQ,CAAA;YACZ,qBAAqB;YACrB,IAAI,CAAC,CAAC;gBAAE,CAAC,GAAG,EAAE,CAAA;YACd,oBAAoB;YACpB,IAAI,CAAC,KAAK,GAAG,CAAC,QAAQ;gBAAE,CAAC,GAAG,EAAE,CAAA;YAC9B,IAAI,CAAC,EAAE;gBACL,IACE,OAAO,UAAU,KAAK,QAAQ;oBAC9B,OAAO,YAAY,KAAK,QAAQ,EAChC;oBACA,CAAC,IAAI,IAAI,UAAU,IAAI,YAAY,EAAE,CAAA;iBACtC;gBACD,IAAI,EAAE,IAAI,KAAK,EAAE;oBACf,CAAC,GAAG,KAAK,CAAC,GAAG,CAAA;iBACd;aACF;SACF;QACD,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,KAAK,IAAI,CAAC,CAAC,EAAE;YAC9B,IAAI,GAAG,KAAK,IAAI,GAAG,CAAA;SACpB;QACD,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAA;QACpC,OAAO,GAAG,GAAG,GAAG,KAAK,GAAG,EAAE,GAAG,CAAC,GAAG,IAAI,EAAE,CAAA;IACzC,CAAC;IAED,MAAM;QACJ,MAAM,EACJ,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,UAAU,EACV,QAAQ,EACR,UAAU,EACV,YAAY,EACZ,MAAM,EACN,QAAQ,EACR,UAAU,EACV,aAAa,EACb,SAAS,GACV,GAAG,IAAI,CAAA;QACR,MAAM,IAAI,GAAqB,EAAE,CAAA;QACjC,IAAI,QAAQ,KAAK,IAAI;YAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QAC/C,IAAI,UAAU,IAAI,UAAU,KAAK,CAAC;YAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAChE,IAAI,YAAY,IAAI,YAAY,KAAK,CAAC;YACpC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;QAClC,IAAI,UAAU;YAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,MAAM,EAAE,CAAA;QAErD,IAAI,QAAQ,KAAK,IAAI,EAAE;YACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;SACzB;QAED,IAAI,UAAU,KAAK,IAAI;YAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QACrD,IAAI,YAAY,KAAK,IAAI;YAAE,IAAI,CAAC,YAAY,GAAG,YAAY,CAAA;QAC3D,IAAI,MAAM;YAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QAChC,IAAI,QAAQ;YAAE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACtC,IAAI,UAAU;YAAE,IAAI,CAAC,UAAU,GAAG,UAAU,CAAA;QAC5C,IAAI,aAAa;YAAE,IAAI,CAAC,aAAa,GAAG,aAAa,CAAA;QACrD,IAAI,SAAS,IAAI,SAAS,CAAC,QAAQ,EAAE;YACnC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAA;YAC9C,IACE,CAAC;gBACD,OAAO,CAAC,KAAK,QAAQ;gBACrB,CAAC,CAAC,KAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,KAAK,aAAa,CAAC,EAC5C;gBACA,MAAM,GAAG,GAAoC,EAAE,CAAA;gBAC/C,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAA;gBAChB,IAAI,SAAS,CAAC,UAAU;oBACtB,GAAG,CAAC,UAAU,GAAG,SAAS,CAAC,UAAU,CAAA;gBACvC,IAAI,SAAS,CAAC,YAAY;oBACxB,GAAG,CAAC,YAAY,GAAG,SAAS,CAAC,YAAY,CAAA;gBAC3C,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/B,IAAI,CAAC,SAAS,GAAG,GAAG,CAAA;iBACrB;aACF;SACF;QACD,OAAO,IAAI,CAAA;IACb,CAAC;CACF;AA5aD,oCA4aC","sourcesContent":["import { findSourceMap, SourceMap } from 'module'\nimport { isAbsolute, relative, resolve } from 'path'\nimport { fileURLToPath } from 'url'\nimport {\n  Compiled,\n  isCompiledCallSiteLine,\n  parseCallSiteLine,\n} from './parse.js'\n\nconst methodRe = /^(.*?) \\[as (.*?)\\]$/\n\nexport interface CallSiteLikeJSON {\n  fileName?: string\n  lineNumber?: number\n  columnNumber?: number\n  evalOrigin?: CallSiteLikeJSON\n  typeName?: string\n  methodName?: string\n  functionName?: string\n  isEval?: true\n  isNative?: true\n  isToplevel?: true\n  isConstructor?: true\n  generated?: {\n    fileName?: string\n    lineNumber?: number\n    columnNumber?: number\n  }\n}\n\nexport interface GeneratedResult {\n  fileName?: string | null\n  lineNumber?: number | null\n  columnNumber?: number | null\n}\n\nconst isCallSite = (c: any): c is NodeJS.CallSite =>\n  !!c && typeof c === 'object' && c.constructor?.name === 'CallSite'\n\nexport class CallSiteLike {\n  static prepareStackTrace(e: Error, c: NodeJS.CallSite[]) {\n    return c.map(c => new CallSiteLike(e, c))\n  }\n\n  #fileName?: string | null\n  #cwd?: string\n  lineNumber: ReturnType<NodeJS.CallSite['getLineNumber']>\n  columnNumber: ReturnType<NodeJS.CallSite['getColumnNumber']>\n  this: ReturnType<NodeJS.CallSite['getThis']>\n  evalOrigin?: CallSiteLike\n  function: ReturnType<NodeJS.CallSite['getFunction']>\n  typeName: ReturnType<NodeJS.CallSite['getTypeName']>\n  methodName: ReturnType<NodeJS.CallSite['getMethodName']>\n  functionName: ReturnType<NodeJS.CallSite['getFunctionName']>\n  isEval: ReturnType<NodeJS.CallSite['isEval']>\n  isNative: ReturnType<NodeJS.CallSite['isNative']>\n  isToplevel: ReturnType<NodeJS.CallSite['isToplevel']>\n  isConstructor: ReturnType<NodeJS.CallSite['isConstructor']>\n  generated?: GeneratedResult\n  #sourceMap?: SourceMap\n\n  // normalize and relativize filename if cwd is set\n  get fileName() {\n    return this.#relativize(this.#fileName)\n  }\n\n  get absoluteFileName() {\n    if (!this.#fileName) return this.#fileName\n    else if (this.#fileName.startsWith('file://')) {\n      return fileURLToPath(this.#fileName)\n    } else {\n      return this.#fileName\n    }\n  }\n\n  get cwd(): string | undefined {\n    return this.#cwd\n  }\n\n  set cwd(cwd: string | undefined) {\n    if (cwd === undefined) {\n      if (this.generated) {\n        this.generated.fileName = this.#derelativize(\n          this.generated?.fileName\n        )\n      }\n    }\n    this.#cwd = cwd?.replace(/\\\\/g, '/')\n    if (cwd !== undefined) {\n      if (this.generated) {\n        this.generated.fileName = this.#relativize(\n          this.generated?.fileName\n        )\n      }\n    }\n    if (this.evalOrigin) this.evalOrigin.cwd = cwd\n  }\n\n  constructor(\n    e: Error | null,\n    c: NodeJS.CallSite | string | Compiled\n  ) {\n    if (typeof c === 'string') {\n      c = parseCallSiteLine(c)\n    }\n\n    if (isCallSite(c)) {\n      const fileName = c.getFileName()\n      this.#fileName = typeof fileName === 'string' ? fileName : null\n      this.lineNumber = c.getLineNumber()\n      this.columnNumber = c.getColumnNumber()\n      this.this = c.getThis()\n      const evalOrigin = c.getEvalOrigin()\n      if (evalOrigin) {\n        this.evalOrigin = new CallSiteLike(e, evalOrigin)\n      }\n      this.function = c.getFunction()\n      this.typeName = c.getTypeName()\n      this.methodName = c.getMethodName()\n      this.functionName = c.getFunctionName()\n      this.isEval = c.isEval()\n      this.isNative = c.isNative()\n      this.isToplevel = c.isToplevel()\n      this.isConstructor = c.isConstructor()\n    } else if (isCompiledCallSiteLine(c)) {\n      // compiled object from stack line\n      this.isEval = !!c.isEval\n      this.isToplevel = false\n      if (c.evalOrigin) {\n        this.evalOrigin = new CallSiteLike(e, c.evalOrigin)\n      }\n\n      this.lineNumber =\n        c.lineNumber === undefined ? null : c.lineNumber\n      this.columnNumber =\n        c.columnNumber === undefined ? null : c.columnNumber\n      const fileName = c.fileName\n      this.#fileName = typeof fileName === 'string' ? fileName : null\n      const { generated } = c\n      if (generated) {\n        this.generated = generated\n        this.generated.fileName = this.#relativize(generated.fileName)\n      }\n      let fname = c.fname?.trim()\n      let method: null | string = null\n      this.isNative = !!c.isNative\n\n      if (fname) {\n        if (fname.startsWith('new ')) {\n          this.isConstructor = true\n          fname = fname.substring('new '.length).trim()\n        } else {\n          this.isConstructor = false\n        }\n        this.methodName = null\n        const methodMatch = fname.match(methodRe) as [\n          string,\n          string,\n          string\n        ]\n        if (methodMatch) {\n          fname = methodMatch[1]\n          method = methodMatch[2]\n        }\n        const dots = fname.split('.')\n        const m = dots.pop()\n        if (m !== undefined) {\n          this.typeName = dots.join('.').trim() || null\n          this.methodName = method || m\n          if (this.methodName.match(/^get |set /)) {\n            this.methodName = this.methodName.substring(4)\n          }\n          this.functionName = m\n          // we know it's not undefined, but TS is afraid of pop()\n          /* c8 ignore start */\n        } else {\n          this.functionName = null\n          this.typeName = null\n        }\n        /* c8 ignore stop */\n      } else {\n        this.isConstructor = false\n        this.typeName = null\n        this.functionName = null\n        this.methodName = null\n      }\n    } else {\n      throw new Error('invalid call site information provided')\n    }\n\n    // This is a slight deviation from the CallSite API, but it's very useful\n    // to have a field that's the actual function with type and method name.\n    if (\n      this.typeName &&\n      this.functionName &&\n      !this.functionName.startsWith(this.typeName)\n    ) {\n      this.functionName = `${this.typeName}.${this.functionName}`\n    } else if (this.functionName === this.methodName) {\n      this.methodName = null\n    }\n\n    // We only do the sourcemap lookup if we're parsing from a CallSite\n    // If we get it from an Error stack line, then Node has already done\n    // the mapping for us, and when ts-node (and other in-place\n    // transpilers) create JavaScript, they use the same filename, leading\n    // to an incorrect double offset,.\n    if (\n      this.#fileName &&\n      isCallSite(c) &&\n      !this.#sourceMap &&\n      !this.#fileName.startsWith('node:')\n    ) {\n      // Passing an object that isn't an actual Error object to\n      // findSourceMap causes problems in node 16\n      /* c8 ignore start */\n      const sme = e && e instanceof Error ? e : undefined\n      /* c8 ignore stop */\n      this.#sourceMap = findSourceMap(this.#fileName, sme)\n      if (this.#sourceMap && typeof this.lineNumber === 'number') {\n        // SourceMap.findEntry doesn't actually return the line/column\n        // number, despite the property names, but rather the zero-indexed\n        // line/column start of a mapping range, and must be looked up\n        // using the zero-indexed line and column.\n        // To find the mapping, we look it up with the zero-indexed\n        // line/col, then figure out how far our line/col is from the\n        // mapping, and apply that same offset to the start of the origin\n        // in the mapping.\n        const payload = this.#sourceMap.findEntry(\n          // safety bounds around numbers here, impossible to hit\n          // if we're looking up actual call sites though.\n          /* c8 ignore start */\n          Math.max(0, this.lineNumber - 1),\n          Math.max(0, (this.columnNumber || 0) - 1)\n          /* c8 ignore stop */\n        )\n        if (payload) {\n          const offset: [number, number] = [\n            this.lineNumber - payload.generatedLine,\n            /* c8 ignore start */\n            (this.columnNumber || 1) - payload.generatedColumn,\n            /* c8 ignore stop */\n          ]\n          const originalLine = payload.originalLine + offset[0]\n          const originalColumn = payload.originalColumn + offset[1]\n          const genFilename = this.#relativize(this.#fileName)\n          this.generated = {\n            /* c8 ignore start */\n            fileName: this.#relativize(genFilename || null),\n            /* c8 ignore stop */\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n          }\n\n          this.#fileName = payload.originalSource\n          this.lineNumber = originalLine\n          this.columnNumber = originalColumn\n        }\n      }\n    }\n  }\n\n  #relativize(fileName?: string | null) {\n    let f = fileName\n    if (!f) return f\n    if (f.startsWith('node:')) return f\n    if (f.startsWith('file://')) f = fileURLToPath(f)\n    if (this.#cwd === undefined) return f\n    else f = f.replace(/\\\\/g, '/')\n    try {\n      const rel = relative(this.#cwd, f)\n      return rel.length < f.length ? rel : f\n    } catch {\n      return f\n    }\n  }\n  #derelativize(fileName?: string | null) {\n    let f = fileName\n    if (!f) return f\n    if (f.startsWith('node:')) return f\n    if (f.startsWith('file://')) f = fileURLToPath(f)\n    if (this.#cwd === undefined) return f\n    try {\n      return resolve(this.#cwd, f)\n    } catch {\n      return f\n    }\n  }\n\n  toString(jsStyle = false): string {\n    // in js style mode, use the origin source file if it is within\n    // our cwd. Otherwise, use the generated source location.\n    const useGen =\n      jsStyle &&\n      this.generated?.fileName &&\n      this.fileName &&\n      this.generated.fileName !== this.fileName &&\n      (isAbsolute(this.fileName) || this.fileName.startsWith('..'))\n    const { fileName, lineNumber, columnNumber, generated } =\n      useGen && this.generated\n        ? {\n            fileName: this.#derelativize(this.generated.fileName),\n            lineNumber: this.generated.lineNumber,\n            columnNumber: this.generated.columnNumber,\n            generated: undefined,\n          }\n        : jsStyle\n        ? {\n            fileName: this.#derelativize(this.fileName),\n            lineNumber: this.lineNumber,\n            columnNumber: this.columnNumber,\n            generated: undefined,\n          }\n        : this\n    const loc = { fileName, lineNumber, columnNumber, generated }\n    for (const l of [loc, loc.generated]) {\n      if (l?.fileName) {\n        l.fileName = jsStyle\n          ? this.#derelativize(l.fileName)\n          : this.#relativize(l.fileName)\n      }\n    }\n\n    let fname = this.functionName || ''\n    let tn = ''\n    let tnGet = ''\n    let tnSet = ''\n    if (this.typeName) {\n      const mn = this.methodName || '<anonymous>'\n      tn = this.typeName + '.' + mn\n      tnGet = this.typeName + '.get ' + mn\n      tnSet = this.typeName + '.set ' + mn\n    }\n    if (!fname && tn) {\n      fname = tn\n    }\n    const mn = this.methodName\n    if (\n      fname &&\n      tn &&\n      mn &&\n      fname !== tn &&\n      fname !== tnGet &&\n      fname !== tnSet\n    ) {\n      fname += ` [as ${mn}]`\n    }\n    if (this.isConstructor && fname) {\n      fname = `new ${fname}`\n    }\n    let ev = ''\n    const nat = this.isNative ? 'native' : ''\n    let file = loc.fileName || ''\n    const hasLC = loc.lineNumber && loc.columnNumber\n    if (this.evalOrigin) {\n      ev = `eval at ${this.evalOrigin.toString(jsStyle)}`\n      if (hasLC) {\n        const f = loc.fileName || '<anonymous>'\n        let lr = `${f}:${loc.lineNumber}:${loc.columnNumber}`\n        if (loc.generated && loc.generated.fileName) {\n          const f = loc.generated.fileName\n          const { lineNumber: l, columnNumber: c } = loc.generated\n          lr = `${f}:${l}:${c} (${lr})`\n        }\n        ev += `, ${lr}`\n      }\n      // should always have an fname at this point\n      /* c8 ignore start */\n      ev = fname ? ` (${ev})` : ev\n      /* c8 ignore stop */\n      return `${fname}${ev}`\n    }\n\n    if (file || hasLC) {\n      if (hasLC) {\n        /* c8 ignore start */\n        file = file || '<anonymous>'\n        /* c8 ignore stop */\n        file += `:${loc.lineNumber}:${loc.columnNumber}`\n      }\n    } else if (nat) {\n      file = 'native'\n      // impossible in normal cases\n      /* c8 ignore start */\n    } else {\n      file = ''\n    }\n    /* c8 ignore stop */\n    let g = ''\n    if (loc.generated && loc.generated.fileName) {\n      const { fileName, lineNumber, columnNumber } = loc.generated\n      g = fileName\n      /* c8 ignore start */\n      if (!g) g = ''\n      /* c8 ignore stop */\n      if (g === loc.fileName) g = ''\n      if (g) {\n        if (\n          typeof lineNumber === 'number' &&\n          typeof columnNumber === 'number'\n        ) {\n          g += `:${lineNumber}:${columnNumber}`\n        }\n        if (ev || fname) {\n          g = ` (${g})`\n        }\n      }\n    }\n    if (file && (ev || fname || g)) {\n      file = ` (${file})`\n    }\n    const pre = jsStyle ? '    at ' : ''\n    return `${pre}${fname}${ev}${g}${file}`\n  }\n\n  toJSON(): CallSiteLikeJSON {\n    const {\n      fileName,\n      lineNumber,\n      columnNumber,\n      evalOrigin,\n      typeName,\n      methodName,\n      functionName,\n      isEval,\n      isNative,\n      isToplevel,\n      isConstructor,\n      generated,\n    } = this\n    const json: CallSiteLikeJSON = {}\n    if (fileName !== null) json.fileName = fileName\n    if (lineNumber || lineNumber === 0) json.lineNumber = lineNumber\n    if (columnNumber || columnNumber === 0)\n      json.columnNumber = columnNumber\n    if (evalOrigin) json.evalOrigin = evalOrigin.toJSON()\n\n    if (typeName !== null) {\n      json.typeName = typeName\n    }\n\n    if (methodName !== null) json.methodName = methodName\n    if (functionName !== null) json.functionName = functionName\n    if (isEval) json.isEval = isEval\n    if (isNative) json.isNative = isNative\n    if (isToplevel) json.isToplevel = isToplevel\n    if (isConstructor) json.isConstructor = isConstructor\n    if (generated && generated.fileName) {\n      const f = this.#relativize(generated.fileName)\n      if (\n        f &&\n        typeof f === 'string' &&\n        (f !== json.fileName || f === '<anonymous>')\n      ) {\n        const gen: Record<string, string | number> = {}\n        gen.fileName = f\n        if (generated.lineNumber)\n          gen.lineNumber = generated.lineNumber\n        if (generated.columnNumber)\n          gen.columnNumber = generated.columnNumber\n        if (Object.keys(gen).length > 0) {\n          json.generated = gen\n        }\n      }\n    }\n    return json\n  }\n}\n"]}