{"version":3,"file":"import.mjs","sourceRoot":"","sources":["../../src/import.mts"],"names":[],"mappings":"AAAA,iCAAiC;AACjC,wEAAwE;AACxE,4DAA4D;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAA;AACtC,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAA;AACpD,OAAO,EAAE,gBAAgB,EAAE,MAAM,0BAA0B,CAAA;AAC3D,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAA;AACtD,OAAO,EAAE,eAAe,EAAE,MAAM,mBAAmB,CAAA;AACnD,OAAO,EAAE,kBAAkB,EAAE,MAAM,qBAAqB,CAAA;AAExD,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,cAAc,EAAE,CAAA;AAE7C,+BAA+B;AAC/B,0CAA0C;AAC1C,MAAM,WAAW,GAAG,cAAc,EAAE,CAAA;AACpC,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE,EAAE,EAAE;IACjD,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;IAChC,eAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAA;IAClC,IAAI,GAAG;QAAE,kBAAkB,CAAC,GAAG,CAAC,CAAA;AAClC,CAAC,CAAC,CAAA;AAEF,KAAK,CAAC,KAAK,EAAE,CAAA;AACb,KAAK,CAAC,KAAK,EAAE,CAAA;AAEb,QAAQ,CAAC,gBAAgB,CAAC,cAAc,CAAC,EAAE;IACzC,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG;IAC1B,IAAI,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACrB,YAAY,EAAE,CAAC,KAAK,CAAC;CACtB,CAAC,CAAA","sourcesContent":["//@ts-ignore - added in node 20.6\n// this is the argument for --import, which does the initial main-thread\n// work, and then registers the loader without globalPreload\nimport { register } from 'node:module'\nimport { MessageChannel } from 'node:worker_threads'\nimport { getImportMetaURL } from './get-import-meta-url.js'\nimport { getProcessInfo } from './get-process-info.js'\nimport { saveLineLengths } from './line-lengths.js'\nimport { likelyHasSourceMap } from './lookup-sources.js'\n\nconst { port1, port2 } = new MessageChannel()\n\n// must be called eagerly here.\n// this does all the registration as well.\nconst processInfo = getProcessInfo()\nport1.on('message', ({ filename, content, url }) => {\n  processInfo.files.push(filename)\n  saveLineLengths(filename, content)\n  if (url) likelyHasSourceMap(url)\n})\n\nport1.unref()\nport2.unref()\n\nregister(getImportMetaURL(`./loader.mjs`), {\n  parentURL: import.meta.url,\n  data: { port: port2 },\n  transferList: [port2],\n})\n"]}