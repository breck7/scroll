"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.register = void 0;
// commonjs style loader hook, modifying require.extensions
const pirates_1 = require("pirates");
const get_exclude_js_1 = require("./get-exclude.js");
const get_process_info_js_1 = require("./get-process-info.js");
const line_lengths_js_1 = require("./line-lengths.js");
const kRegisterRequire = Symbol.for('@tapjs/processinfo.registerRequire');
const g = global;
const register = () => {
    if (g[kRegisterRequire])
        return;
    g[kRegisterRequire] = true;
    // by default we include everything in processInfo.files
    const exclude = (0, get_exclude_js_1.getExclude)('_TAPJS_PROCESSINFO_EXCLUDE_', false);
    (0, pirates_1.addHook)((code, filename) => {
        (0, get_process_info_js_1.getProcessInfo)().files.push(filename);
        (0, line_lengths_js_1.saveLineLengths)(filename, code);
        return code;
    }, {
        exts: ['.js', '.cjs', '.ts', '.cts', '.jsx', '.tsx'],
        matcher: filename => !exclude.test(filename),
    });
};
exports.register = register;
//# sourceMappingURL=register-require.js.map