"use strict";
// TODO: Refactor once https://github.com/nodejs/node/issues/48460 fixed
Object.defineProperty(exports, "__esModule", { value: true });
exports.getLineLengths = exports.saveLineLengths = void 0;
const url_1 = require("url");
const kLLC = Symbol.for('@tapjs/processinfo lineLength cache');
const g = global;
const cache = g[kLLC] || new Map();
g[kLLC] = cache;
const sourceMapComment = '//# sourceMappingURL=';
const saveLineLengths = (filename, content) => {
    if (content === undefined)
        return;
    if (typeof content === 'object')
        content = String(content);
    if (filename.startsWith('file://'))
        filename = (0, url_1.fileURLToPath)(filename);
    // no need if it's not sourcemapped
    // don't cache an empty array, though, because ts-node files will show
    // up first as source, and then as their built content.
    const last = content.trimEnd().split('\n').pop();
    if (cache.has(filename) || !last?.startsWith(sourceMapComment))
        return;
    const ll = content.split(/\n|\u2028|\u2029/).map(l => l.length);
    cache.set(filename, ll);
};
exports.saveLineLengths = saveLineLengths;
const getLineLengths = (filename) => {
    if (filename.startsWith('file://'))
        filename = (0, url_1.fileURLToPath)(filename);
    return cache.get(filename);
};
exports.getLineLengths = getLineLengths;
//# sourceMappingURL=line-lengths.js.map