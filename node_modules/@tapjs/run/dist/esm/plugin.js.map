{"version":3,"file":"plugin.js","sourceRoot":"","sources":["../../src/plugin.ts"],"names":[],"mappings":"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","sourcesContent":["// manage plugins\nimport { LoadedConfig } from '@tapjs/config'\n// load core so that the Test class is ready\nimport '@tapjs/core'\nimport { defaultPlugins } from '@tapjs/test'\n\nimport chalk from 'chalk'\n\nimport { lstat } from 'node:fs/promises'\nimport { resolve } from 'node:path'\nimport { fileURLToPath } from 'node:url'\nimport { resolveImport } from 'resolve-import'\n\nimport { build } from './build.js'\nimport { getInstallSet } from './get-install-set.js'\nimport { install, uninstall } from './npm.js'\n\nconst exists = (f: string) =>\n  lstat(f).then(\n    () => true,\n    () => false\n  )\n\nconst detectGlobalInstall = async (\n  args: string[],\n  project: string\n) => {\n  // find the tap that will be loaded from the project root\n  const activeRunner = String(\n    await resolveImport('@tapjs/run', import.meta.url)\n  )\n  const projectRunner = String(\n    await resolveImport('tap', resolve(project, 'x'))\n      .then(projectTap => resolveImport('@tapjs/run', projectTap))\n      .catch(() => resolveImport('@tapjs/run', project))\n      .catch(() => activeRunner)\n  )\n  if (activeRunner !== projectRunner) {\n    const f = fileURLToPath(activeRunner).split('node_modules')\n    f.pop()\n    const myNM = f.join('node_modules')\n    console.error(\n      `${chalk.bold.red('global/local mixup!')}\n\nThe tap plugin command must be run by the ${chalk.yellow(\n        'locally installed'\n      )} tap executable,\nand this appears to be running in a global install location at\n${chalk.yellow(myNM)}\n\nThis will likely fail. Try:\n\n    ${chalk.green(\n      `npm exec tap plugin ${args\n        .map(a => JSON.stringify(a))\n        .join(' ')}`\n    )}\n`\n    )\n  }\n}\n\nexport const plugin = async (\n  args: string[],\n  config: LoadedConfig\n) => {\n  await detectGlobalInstall(args, config.globCwd)\n  switch (args[0]) {\n    case 'add':\n      return add(args.slice(1), config)\n    case 'rm':\n    case 'remove':\n      return rm(args.slice(1), config)\n    case 'list':\n    case 'ls':\n      return list(args.slice(1), config)\n    case undefined:\n      await list(args, config)\n      return console.error(\n        `(use 'tap plugin add ...' to add plugins, or ` +\n          `'tap plugin rm ...' to remove them)`\n      )\n    default:\n      throw new Error(`Unknown plugin command: ${args[0]}`)\n  }\n}\n\nconst add = async (args: string[], config: LoadedConfig) => {\n  if (!args.length) throw new Error('no plugin name provided')\n\n  const { added, needInstall, needCleanup } = await getInstallSet(\n    args,\n    config\n  )\n\n  if (!added.size) {\n    console.log('nothing to do, all plugins already installed')\n    return\n  }\n\n  console.error('adding plugins:', [...added])\n\n  // roll back if it fails!\n  let success = false\n  let installed = false\n  try {\n    // install anything that needs to be installed\n    if (needInstall.size) {\n      console.error('installing:', [...needInstall])\n      await install([...needInstall], config)\n      installed = true\n    }\n\n    // ok, that succeeded, update the config\n    /* c8 ignore start */\n    const pc = config.get('plugin') || []\n    /* c8 ignore stop */\n    config.values.plugin = [...pc]\n\n    // now rebuild\n    await build([], config)\n\n    // save the config change\n    await config.editConfigFile(\n      { plugin: [...pc] },\n      config.configFile\n    )\n\n    console.log('successfully added plugin(s):')\n    console.log([...added].join('\\n'))\n    success = true\n  } catch (er) {\n    if (er instanceof Error) {\n      console.error(chalk.red(er.message))\n    }\n  } finally {\n    if (!success) {\n      process.exitCode = 1\n      const what =\n        needInstall.size && !installed ? 'install' : 'build'\n      console.error(chalk.red(`${what} failed`))\n      if (installed && needCleanup.size) {\n        console.error('attempting to clean up added packages')\n        await uninstall([...needCleanup], config).catch(() =>\n          console.error(chalk.red('uninstall failed'))\n        )\n      }\n    }\n  }\n}\n\nconst rm = async (args: string[], config: LoadedConfig) => {\n  /* c8 ignore start */\n  const pc = config.get('plugin') || []\n  /* c8 ignore stop */\n  const pl = config.pluginList\n\n  const removed = new Set<string>()\n  const needRemove = new Set<string>()\n  for (const plugin of args) {\n    // not present, nothing to do\n    if (!pl.includes(plugin)) continue\n\n    removed.add(plugin)\n\n    // possibly a default\n    if (defaultPlugins.includes(plugin)) {\n      pc.push(`!${plugin}`)\n      continue\n    }\n\n    if (pc.includes(plugin)) {\n      pc.splice(pc.indexOf(plugin), 1)\n    }\n    // if it's not a file on disk, then we probably need to uninstall a pkg\n    if (!(await exists(plugin))) needRemove.add(plugin)\n  }\n\n  if (!removed.size) {\n    console.log('nothing to do, no specified plugins present')\n    return\n  }\n\n  config.values.plugin = [...pc]\n\n  // now rebuild\n  await build([], config)\n\n  // save the config change\n  await config.editConfigFile({ plugin: [...pc] }, config.configFile)\n\n  // if not present, do nothing and exit\n  // if a default plugin, then add the !plugin to the config\n  // else, rm plugin from config\n  // if not a file on disk, and exists in nm, echo npm rm command\n  // rebuild\n  console.log('successfully removed plugin(s):')\n  console.log([...removed].join('\\n'))\n  if (needRemove.size) {\n    console.log('The following packages can likely be removed:')\n    console.log(\n      `npm rm ${[...needRemove]\n        .map(p => JSON.stringify(p))\n        .join(' ')}`\n    )\n  }\n}\n\nconst list = async (_: string[], config: LoadedConfig) => {\n  console.log(config.pluginList.join('\\n'))\n}\n"]}