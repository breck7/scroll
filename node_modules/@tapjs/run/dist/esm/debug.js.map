{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../src/debug.ts"],"names":[],"mappings":"AAGA,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,eAAe,CAAA;AACnD,OAAO,EAAE,aAAa,EAAE,MAAM,gBAAgB,CAAA;AAC9C,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAA;AACpC,OAAO,EAAE,cAAc,EAAE,MAAM,cAAc,CAAA;AAE7C,MAAM,CAAC,MAAM,KAAK,GAAG,KAAK,EAAE,CAAW,EAAE,MAAoB,EAAE,EAAE;IAC/D,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,aAAa,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC/D,MAAM,QAAQ,GAAG,MAAM,cAAc,EAAE,CAAA;IACvC,MAAM,IAAI,GAAG;QACX,KAAK;QACL,aAAa;QACb,YAAY;QACZ,uCAAuC;QACvC,YAAY;KACb,CAAA;IACD,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,KAAK,EAAE,GAAG,SAAS,CAC7C,KAAK,EACL,CAAC,IAAI,EAAE,GAAG,IAAI,CAAC,EACf;QACE,QAAQ,EAAE,MAAM;KACjB,CACF,CAAA;IACD,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,CAAA;IACzB,MAAM,UAAU,GAAG,MAAM,CAAC,WAAW,CACnC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAC3B,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAC1C,CACF,CAAA;IACD,qBAAqB;IACrB,MAAM,KAAK,GACT,OAAO,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,SAAS,CAAA;IACzD,MAAM,MAAM,GACV,OAAO,CAAC,QAAQ,KAAK,OAAO;QAC1B,CAAC,CAAC,qGAAqG;QACvG,CAAC,CAAC,UAAU,CAAA;IAChB,oBAAoB;IACpB,MAAM,GAAG,GAAG,QAAQ,CAAC,MAAM,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAA;IACzD,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IAE/C,OAAO,CAAC,GAAG,CACT,SAAS,CAAC;QACR,GAAG;QACH,MAAM,EAAE,UAAU;QAClB,OAAO,EAAE,UAAU;QACnB,QAAQ;QACR,QAAQ,EAAE,KAAK;QACf,GAAG;KACJ,CAAC,CAAC,OAAO,EAAE,CACb,CAAA;AACH,CAAC,CAAA","sourcesContent":["// print a bunch of debug output for the benefit of reporting issues\n// to the tapjs repo.\nimport { LoadedConfig } from '@tapjs/config'\nimport { execSync, spawnSync } from 'child_process'\nimport { resolveImport } from 'resolve-import'\nimport { stringify } from 'tap-yaml'\nimport { getAllVersions } from './version.js'\n\nexport const debug = async (_: string[], config: LoadedConfig) => {\n  const tap = String(await resolveImport('tap', import.meta.url))\n  const versions = await getAllVersions()\n  const pkgs = [\n    'tap',\n    '@tapjs/core',\n    '@tapjs/run',\n    '@isaacs/ts-node-temp-fork-for-pr-2009',\n    'typescript',\n  ]\n  const { stdout: _stdout, ...npmLS } = spawnSync(\n    'npm',\n    ['ls', ...pkgs],\n    {\n      encoding: 'utf8',\n    }\n  )\n  const { values } = config\n  const configDump = Object.fromEntries(\n    Object.entries(values).filter(\n      ([_, v]) => !Array.isArray(v) || v.length\n    )\n  )\n  /* c8 ignore start */\n  const shell =\n    process.platform === 'win32' ? 'powershell' : '/bin/sh'\n  const envCmd =\n    process.platform === 'win32'\n      ? \"$([Environment]::OSVersion.VersionString)\\n$(('x86', 'x64')[[Environment]::Is64BitOperatingSystem])\"\n      : 'uname -a'\n  /* c8 ignore stop */\n  const env = execSync(envCmd, { shell, encoding: 'utf8' })\n  const pluginList = config.pluginList.join('\\n')\n\n  console.log(\n    stringify({\n      tap,\n      config: configDump,\n      plugins: pluginList,\n      versions,\n      'npm ls': npmLS,\n      env,\n    }).trimEnd()\n  )\n}\n"]}