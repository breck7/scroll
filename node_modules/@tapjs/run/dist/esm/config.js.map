{"version":3,"file":"config.js","sourceRoot":"","sources":["../../src/config.ts"],"names":[],"mappings":"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","sourcesContent":["// config command\nimport type { LoadedConfig } from '@tapjs/config'\nimport chalk from 'chalk'\nimport { spawnSync } from 'child_process'\nimport { readFileSync, writeFileSync } from 'fs'\nimport { stat } from 'fs/promises'\nimport { mkdirpSync } from 'mkdirp'\nimport { dirname, relative, resolve } from 'path'\nimport { rimrafSync } from 'rimraf'\nimport yaml from 'tap-yaml'\nimport { strict } from 'tcompare'\n\nconst fileExists = async (p: string) =>\n  stat(p).then(\n    s => s.isFile(),\n    () => false\n  )\n\nconst vimTag = '# v' + 'im: set filetype=yaml :'\nconst logVim = () => console.log(vimTag)\n\nconst logYaml = (v: any) => console.log(yaml.stringify(v).trimEnd())\n\nconst set = async (args: string[], config: LoadedConfig) => {\n  const usage = 'Usage: tap config set <key=[val]> [<key=[val]> ...]'\n  if (!args.length) {\n    console.error(chalk.red('must provide key=value arguments'))\n    console.error(usage)\n    process.exit(1)\n  }\n\n  const { valuesFromConfigFile } = config\n  const data: Record<string, any> = Object.fromEntries(\n    Object.entries(valuesFromConfigFile).map(([k, v]) => [\n      k,\n      Array.isArray(v) ? [...v] : v,\n    ])\n  )\n\n  const allDefs = config.jack.toJSON()\n  for (const kv of args) {\n    const [key, ...r] = kv.split('=') as [string, ...string[]]\n    if (!r.length) {\n      console.error(chalk.red(`no value provided for ${key}`))\n      console.error(usage)\n      process.exit(1)\n    }\n    const val = r.join('=')\n    const def = allDefs[key as string]\n    if (!def) {\n      console.error(chalk.red('Unknown config key: ' + key))\n      continue\n    }\n    if (!val) {\n      delete data[key]\n      continue\n    }\n    const { type, multiple } = def\n    let v: boolean | number | string =\n      type === 'number' ? parseInt(val, 10) : val\n    if (type === 'boolean') {\n      if (v !== 'true' && v !== 'false') {\n        console.error(chalk.red(`${key} must be 'true' or 'false'`))\n        process.exit(1)\n      } else {\n        v = v === 'true'\n      }\n    }\n    if (multiple) {\n      if (data[key]) data[key].push(v)\n      else data[key] = [v]\n    } else {\n      data[key] = v\n    }\n  }\n\n  if (strict(data, valuesFromConfigFile).match) {\n    console.error('no changes made to config data')\n    process.exit(0)\n  }\n\n  try {\n    config.jack.validate(data)\n  } catch (er) {\n    console.error(chalk.red('invalid configuration'))\n    console.error((er as Error).message)\n    process.exit(1)\n  }\n\n  await config.editConfigFile(data, undefined, true)\n  const rel = relative(process.cwd(), config.configFile)\n  console.log(`wrote changes to ${rel}`)\n}\n\nconst get = async (args: string[], config: LoadedConfig) => {\n  if (!args.length) {\n    console.error(chalk.red('no keys provided'))\n    console.error('Usage: tap config get <key> [<key> ...]')\n    process.exit(1)\n  }\n\n  const defs = config.jack.toJSON()\n  let values: undefined | Record<string, any> = undefined\n  for (const k of args) {\n    if (!defs[k]) {\n      console.error(chalk.red(`unknown config field: ${k}`))\n      continue\n    }\n    const value = config.get(k as keyof typeof config.values)\n    if (value === undefined) continue\n    values ??= {}\n    values[k] = value\n  }\n  if (values) {\n    console.log(yaml.stringify(values).trimEnd())\n  }\n}\n\nconst list = async (args: string[], config: LoadedConfig) => {\n  const { valuesFromConfigFile, values } = config\n  const filter = ([k, v]: [string, any]) =>\n    (!Array.isArray(v) || v.length) &&\n    (!args.length || args.includes(k))\n  const fileEntries = Object.entries(valuesFromConfigFile)\n    .filter(filter)\n    .sort(([a], [b]) => a.localeCompare(b, 'en'))\n  const fromFile = Object.fromEntries(fileEntries)\n  const envCliEntries = Object.entries(values)\n    .filter(([k, v]) => filter([k, v]) && fromFile[k] !== v)\n    .sort(([a], [b]) => a.localeCompare(b, 'en'))\n  const fromEnvCli = Object.fromEntries(envCliEntries)\n  let output = `${vimTag}\\n`\n  if (fileEntries.length) {\n    output +=\n      `\\n# from ${relative(process.cwd(), config.configFile)}\\n` +\n      yaml.stringify(fromFile)\n  }\n  if (envCliEntries.length) {\n    if (fileEntries.length) {\n      output += `\\n# env, cli, and defaults\\n`\n    }\n    output += yaml.stringify(fromEnvCli)\n  }\n  output = output\n    .replace(/^(# .*)$/gm, (_, _1) => chalk.dim(_1))\n    .replace(/^([^:\\n ]+):/gm, (_, _1) => chalk.bold(_1) + ':')\n  console.log(output.trimEnd())\n}\n\nconst dump = async (config: LoadedConfig) => {\n  const { values } = config\n  const v = Object.fromEntries(\n    Object.entries(values).filter(\n      ([_, v]) => !Array.isArray(v) || v.length\n    )\n  )\n  logVim()\n  logYaml(v)\n}\n\n// exported for testing\nexport const firstOf = (\n  a: (string | undefined)[],\n  def: string\n): string => {\n  for (const i of a) if (i) return i\n  return def\n}\n\nconst isEmpty = (a: any) =>\n  a === undefined || (Array.isArray(a) && a.length === 0)\n\nconst edit = async (args: string[], config: LoadedConfig) => {\n  const { configFile, valuesFromConfigFile } = config\n  const fileDefs = new Set(Object.keys(valuesFromConfigFile))\n  const rel = relative(process.cwd(), configFile)\n  const editor = firstOf(\n    [process.env.VISUAL, process.env.EDITOR],\n    /* c8 ignore start */\n    process.platform === 'win32' ? 'notepad.exe' : 'vim'\n    /* c8 ignore stop */\n  )\n  const tmp = resolve(config.globCwd, '.tap', 'config-edit-tmp.yaml')\n  if (args[0] !== 'resume') {\n    rimrafSync(tmp)\n    mkdirpSync(dirname(tmp))\n    const allDefs = config.jack.toJSON()\n\n    const allConfigs = Object.entries(allDefs)\n      .filter(([k]) => !fileDefs.has(k))\n      .sort(([a], [b]) => a.localeCompare(b, 'en'))\n      .map(([k, def]) => {\n        return !isEmpty(def.default)\n          ? yaml.stringify({ [k]: def.default }).trimEnd()\n          : `${k}: ${def.type}${def.multiple ? '[]' : ''}`\n      })\n      .join('\\n')\n      .replace(/^/gm, '# ')\n    const tmpData = `${vimTag}\n# this is a yaml file containing tap configuration\n#\n# when you're done, the data will be written to ${rel}${\n      /\\.json$/.test(rel)\n        ? '\\n# (in the \"tap\" section of the json file)'\n        : ''\n    }\n# if the config isn't valid, or if you quit without making changes,\n# then no changes will be made.\n#\n# Comments and empty lines will be removed.\n${\n  Object.keys(valuesFromConfigFile).length\n    ? '#\\n# Existing configs:\\n\\n' +\n      yaml.stringify(valuesFromConfigFile)\n    : ''\n}\n# All available configuration options. See \\`tap help\\` for descriptions.\n#\n${allConfigs}\n`\n    writeFileSync(tmp, tmpData, 'utf8')\n  } else if (!(await fileExists(tmp))) {\n    console.error(chalk.red('no prior editing session to resume'))\n    process.exit(1)\n  }\n\n  const result = spawnSync(editor, [tmp], { stdio: 'inherit' })\n  const { signal, status } = result\n\n  const editResume =\n    'run `tap config edit resume` to continue making changes'\n\n  if (signal || status) {\n    console.error(chalk.red('edit command failed, no changes made'))\n    console.error(editResume)\n    console.error({ signal, status })\n    process.exit(1)\n  }\n\n  // read the file and see if we have changes to make.\n  const newData = readFileSync(tmp, 'utf8')\n  const newValues = yaml.parse(newData)\n  if (strict(valuesFromConfigFile, newValues).match) {\n    console.error('no changes made to config data')\n    console.error(editResume)\n    process.exit(0)\n  }\n  try {\n    config.jack.validate(newValues)\n  } catch (er) {\n    console.error(chalk.red('invalid configuration'))\n    console.error((er as Error).message)\n    console.error(editResume)\n    process.exit(1)\n  }\n  await config.editConfigFile(newValues, configFile, true)\n  rimrafSync(tmp)\n  console.log(`wrote changes to ${rel}`)\n}\n\nexport const config = async (\n  args: string[],\n  config: LoadedConfig\n) => {\n  if (!args.length) args = ['list']\n  switch (args[0]) {\n    case 'dump':\n      return dump(config)\n    case 'get':\n      return get(args.slice(1), config)\n    case 'list':\n      return list(args.slice(1), config)\n    case 'edit':\n      return edit(args.slice(1), config)\n    case 'set':\n      return set(args.slice(1), config)\n    default:\n      console.error(chalk.red('invalid tap config command'))\n      console.error('must be one of: get list dump set edit')\n      process.exit(1)\n  }\n}\n"]}