{"version":3,"file":"test-is-serial.js","sourceRoot":"","sources":["../../src/test-is-serial.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,MAAM,CAAA;AACnC,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAA;AACzC,IAAI,MAAM,GAAyB,SAAS,CAAA;AAC5C,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,IAAY,EAAE,EAAE;IAC3C,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,GAAG,CAAC,MAAM,CAAC,MAAM,IAAI,EAAE,CAAC,CAAC,GAAG,CAChC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CACpC,CAAA;KACF;IACD,+DAA+D;IAC/D,wDAAwD;IACxD,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA;AACnE,CAAC,CAAA","sourcesContent":["import { resolve, sep } from 'path'\nimport { values } from './main-config.js'\nlet serial: string[] | undefined = undefined\nexport const testIsSerial = (file: string) => {\n  if (!serial) {\n    serial = (values.serial || []).map(\n      s => resolve(s).toLowerCase() + sep\n    )\n  }\n  // tack the sep onto the end so that if the config specifies an\n  // individual file, rather than a dir, it still matches.\n  return serial.some(s => (file.toLowerCase() + sep).startsWith(s))\n}\n"]}