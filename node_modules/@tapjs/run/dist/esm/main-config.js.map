{"version":3,"file":"main-config.js","sourceRoot":"","sources":["../../src/main-config.ts"],"names":[],"mappings":"AAAA,8DAA8D;AAC9D,yBAAyB;AACzB,gEAAgE;AAChE,wDAAwD;AAExD,OAAO,EAAgB,SAAS,EAAE,MAAM,eAAe,CAAA;AACvD,MAAM,CAAC,MAAM,MAAM,GAAiB,MAAM,SAAS,CAAC,IAAI,EAAE,CAAA;AAC1D,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,WAAW,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,CAAA;AAKrD,MAAM,CAAC,IAAI,WAAW,GACpB,WAAW,CAAC,CAAC,CAAC;IACd,CAAC,MAAM,CAAC,IAAI;QACV,CAAC,CAAC,MAAM;QACR,CAAC,CAAC,MAAM,CAAC,OAAO;YAChB,CAAC,CAAC,SAAS;YACX,CAAC,CAAC,MAAM,CAAC,QAAQ;gBACjB,CAAC,CAAC,UAAU;gBACZ,CAAC,CAAC,KAAK,CAAC,CAAA;AAEZ,MAAM,QAAQ,GAAG,IAAI,GAAG,CAAC;IACvB,MAAM;IACN,UAAU;IACV,SAAS;IACT,KAAK;IACL,OAAO;IACP,QAAQ;IACR,QAAQ;IACR,MAAM;IACN,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,OAAO;CACR,CAAC,CAAA;AAEF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,EAAE;IAC9B,WAAW,GAAG,KAAK,CAAA;CACpB;AAED,MAAM,CAAC,MAAM,IAAI,GAAG,WAAW,CAAC,KAAK,CACnC,WAAW,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACvC,CAAA;AAED,IAAI,WAAW,KAAK,SAAS,IAAI,WAAW,KAAK,UAAU,EAAE;IAC3D,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,CAAA;CACvB;AAED,MAAM,CAAC,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,GAAG,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA","sourcesContent":["// some main stuff, mostly for the index runner, but also used\n// in a few other places.\n// Putting it here in this module prevents a cycle that makes it\n// annoying to load units in the tests for this package.\n\nimport { LoadedConfig, TapConfig } from '@tapjs/config'\nexport const config: LoadedConfig = await TapConfig.load()\nexport const { values, positionals } = config.parse()\n\nexport type JackLoaded = LoadedConfig['jack']\nexport type ConfigValues = LoadedConfig['values']\n\nexport let mainCommand: string =\n  positionals[0] ||\n  (values.help\n    ? 'help'\n    : values.version\n    ? 'version'\n    : values.versions\n    ? 'versions'\n    : 'run')\n\nconst commands = new Set([\n  'help',\n  'versions',\n  'version',\n  'run',\n  'build',\n  'report',\n  'plugin',\n  'list',\n  'repl',\n  'replay',\n  'config',\n  'debug',\n])\n\nif (!commands.has(mainCommand)) {\n  mainCommand = 'run'\n}\n\nexport const args = positionals.slice(\n  positionals[0] === mainCommand ? 1 : 0\n)\n\nif (mainCommand === 'version' || mainCommand === 'versions') {\n  args.length = 0\n  args.push(mainCommand)\n}\n\nexport const mainBin = String(new URL('index.js', import.meta.url))\n"]}