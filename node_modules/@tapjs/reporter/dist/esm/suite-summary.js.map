{"version":3,"file":"suite-summary.js","sourceRoot":"","sources":["../../src/suite-summary.tsx"],"names":[],"mappings":"AACA,OAAO,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,KAAK,CAAA;AAC/B,OAAO,KAAa,MAAM,OAAO,CAAA;AACjC,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAA;AAC3C,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAA;AAC9D,OAAO,EAAE,WAAW,EAAE,MAAM,yBAAyB,CAAA;AACrD,OAAO,EAAE,cAAc,EAAE,MAAM,6BAA6B,CAAA;AAC5D,OAAO,EAAE,QAAQ,EAAE,MAAM,gBAAgB,CAAA;AAEzC,MAAM,QAAQ,GAAmB,CAAC,EAAE,IAAI,EAAE,IAAI,GAAG,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,CAC9D,oBAAC,IAAI,IAAC,IAAI,QAAC,QAAQ;IAChB,IAAI,GAAG,IAAI;;IAAM,KAAK;gBAClB,CACR,CAAA;AAED,MAAM,IAAI,GAAmB,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAC7C,oBAAC,IAAI,IAAC,KAAK,EAAC,MAAM;IAAE,IAAI;YAAa,CACtC,CAAA;AAED,MAAM,IAAI,GAAmB,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAAC,CAC7C,oBAAC,IAAI,IAAC,KAAK,EAAC,KAAK,EAAC,QAAQ,EAAE,IAAI,KAAK,CAAC,EAAE,IAAI,EAAE,IAAI,KAAK,CAAC;IACrD,IAAI;YACA,CACR,CAAA;AAED,MAAM,IAAI,GAAmB,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,CAAC,CACzC,oBAAC,IAAI,IAAC,KAAK,EAAC,OAAO;IAAE,IAAI;YAAa,CACvC,CAAA;AAED,MAAM,IAAI,GAAmB,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,EAAE,CAC5C,IAAI,CAAC,CAAC,CAAC,CACL,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU;IAC/C,oBAAC,IAAI,IAAC,KAAK,EAAC,SAAS;QAAE,IAAI;gBAAa;IACxC,oBAAC,IAAI,YAAS,CACV,CACP,CAAC,CAAC,CAAC,CACF,yCAAK,CACN,CAAA;AAEH,MAAM,CAAC,MAAM,YAAY,GAA2B,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IAC/D,MAAM,MAAM,GAAG,cAAc,CAAC,IAAI,CAAC,CAAA;IACnC,MAAM,OAAO,GAAG,eAAe,CAAC,IAAI,CAAC,CAAA;IACrC,MAAM,QAAQ,GAAG,WAAW,CAAC,IAAI,CAAC,CAAA;IAElC,OAAO,CACL,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ;QACzB,oBAAC,GAAG,IAAC,OAAO,EAAE,CAAC,EAAE,aAAa,EAAC,QAAQ;YACrC,oBAAC,GAAG;gBACF,oBAAC,GAAG,IAAC,aAAa,EAAC,KAAK,EAAC,GAAG,EAAE,CAAC,EAAE,SAAS,EAAC,UAAU;oBACnD,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ;wBACzB,oBAAC,IAAI,IAAC,IAAI,qBAAgB;wBAC1B,oBAAC,IAAI,IAAC,IAAI,oBAAe,CACrB;oBACN,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU;wBAC/C,oBAAC,IAAI,OAAK,OAAO,GAAI;wBACrB,oBAAC,IAAI,OAAK,MAAM,GAAI,CAChB;oBACN,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU;wBAC/C,oBAAC,IAAI,OAAK,OAAO,GAAI;wBACrB,oBAAC,IAAI,OAAK,MAAM,GAAI,CAChB;oBACL,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CACpC,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU;wBAC/C,oBAAC,IAAI,OAAK,OAAO,GAAI;wBACrB,oBAAC,IAAI,OAAK,MAAM,GAAI,CAChB,CACP;oBACD,oBAAC,IAAI,OAAK,OAAO,GAAI;oBACrB,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,UAAU,EAAC,UAAU;wBAC/C,oBAAC,QAAQ,OAAK,OAAO,GAAI;wBACzB,oBAAC,QAAQ,OAAK,MAAM,GAAI,CACpB,CACF,CACF;YACN,oBAAC,SAAS,IAAC,IAAI,EAAE,IAAI,GAAI;YACzB,oBAAC,QAAQ,IAAC,IAAI,EAAE,IAAI,GAAI,CACpB;QACL,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CACjB,oBAAC,GAAG,IAAC,aAAa,EAAC,QAAQ,EAAC,YAAY,EAAE,CAAC,IACxC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,CAAC,CACxB,oBAAC,IAAI,IAAC,GAAG,EAAE,GAAG,EAAE,QAAQ,UACrB,CAAC,CACG,CACR,CAAC,CACE,CACP,CAAC,CAAC,CAAC,CACF,yCAAK,CACN,CACG,CACP,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { CountsJSON, TestBase } from '@tapjs/core'\nimport { Box, Text } from 'ink'\nimport React, { FC } from 'react'\nimport { BailedOut } from './bailed-out.js'\nimport { useAssertTotals } from './hooks/use-assert-totals.js'\nimport { useComments } from './hooks/use-comments.js'\nimport { useSuiteTotals } from './hooks/use-suite-totals.js'\nimport { TimedOut } from './timed-out.js'\n\nconst Complete: FC<CountsJSON> = ({ pass, fail = 0, total }) => (\n  <Text bold dimColor>\n    {pass + fail} of {total} complete\n  </Text>\n)\n\nconst Skip: FC<CountsJSON> = ({ skip = 0 }) => (\n  <Text color=\"cyan\">{skip} skip</Text>\n)\n\nconst Fail: FC<CountsJSON> = ({ fail = 0 }) => (\n  <Text color=\"red\" dimColor={fail === 0} bold={fail !== 0}>\n    {fail} fail\n  </Text>\n)\n\nconst Pass: FC<CountsJSON> = ({ pass }) => (\n  <Text color=\"green\">{pass} pass</Text>\n)\n\nconst Todo: FC<CountsJSON> = ({ todo = 0 }) =>\n  todo ? (\n    <Box flexDirection=\"column\" alignItems=\"flex-end\">\n      <Text color=\"magenta\">{todo} todo</Text>\n      <Text> </Text>\n    </Box>\n  ) : (\n    <></>\n  )\n\nexport const SuiteSummary: FC<{ test: TestBase }> = ({ test }) => {\n  const suites = useSuiteTotals(test)\n  const asserts = useAssertTotals(test)\n  const comments = useComments(test)\n\n  return (\n    <Box flexDirection=\"column\">\n      <Box marginY={1} flexDirection=\"column\">\n        <Box>\n          <Box flexDirection=\"row\" gap={2} alignSelf=\"flex-end\">\n            <Box flexDirection=\"column\">\n              <Text bold>Asserts:</Text>\n              <Text bold>Suites:</Text>\n            </Box>\n            <Box flexDirection=\"column\" alignItems=\"flex-end\">\n              <Pass {...asserts} />\n              <Pass {...suites} />\n            </Box>\n            <Box flexDirection=\"column\" alignItems=\"flex-end\">\n              <Fail {...asserts} />\n              <Fail {...suites} />\n            </Box>\n            {(!!suites.skip || !!asserts.skip) && (\n              <Box flexDirection=\"column\" alignItems=\"flex-end\">\n                <Skip {...asserts} />\n                <Skip {...suites} />\n              </Box>\n            )}\n            <Todo {...asserts} />\n            <Box flexDirection=\"column\" alignItems=\"flex-end\">\n              <Complete {...asserts} />\n              <Complete {...suites} />\n            </Box>\n          </Box>\n        </Box>\n        <BailedOut test={test} />\n        <TimedOut test={test} />\n      </Box>\n      {comments.length ? (\n        <Box flexDirection=\"column\" marginBottom={1}>\n          {comments.map((c, key) => (\n            <Text key={key} dimColor>\n              {c}\n            </Text>\n          ))}\n        </Box>\n      ) : (\n        <></>\n      )}\n    </Box>\n  )\n}\n"]}