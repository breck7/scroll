{"version":3,"file":"assert-name.js","sourceRoot":"","sources":["../../src/assert-name.ts"],"names":[],"mappings":"AAGA;;;;GAIG;AACH,MAAM,CAAC,MAAM,UAAU,GAAG,CAAC,CAAS,EAAE,CAAO,EAAE,EAAE;IAC/C,MAAM,EAAE,GAAG,CAAC,CAAC,QAAQ,CAAA;IACrB,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAAA;IACvB,MAAM,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,KAAK,CAAA;IACzB,IAAI,CAAC,GAAG,EAAE,CAAA;IACV,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC;QAAE,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAA;IACvD,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;AAC7D,CAAC,CAAA","sourcesContent":["import type { Base } from '@tapjs/core'\nimport type { Result } from 'tap-parser'\n\n/**\n * Given a parser result, and the test it belongs to,\n * find the proper fullname including the test name, but\n * only once.\n */\nexport const assertName = (r: Result, t: Base) => {\n  const fn = r.fullname\n  const dt = r.diag?.test\n  const tn = t.name + ' > '\n  let n = fn\n  if (n.startsWith(tn)) n = n.substring(tn.length).trim()\n  return dt && !n.startsWith(`${dt} > `) ? `${dt} > ${n}` : n\n}\n"]}