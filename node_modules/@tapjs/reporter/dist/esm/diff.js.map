{"version":3,"file":"diff.js","sourceRoot":"","sources":["../../src/diff.tsx"],"names":[],"mappings":"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","sourcesContent":["// turn a diff string into pretty colors\nimport { Box, Text } from 'ink'\nimport React, { FC } from 'react'\n\nimport stringLength from 'string-length'\n\n// Color scheme to work with protanopia, deuteranopia, and tritanopia,\n// since diffs use color as a meaningful indicator.\n// should this be configurable?\nconst theme = {\n  green: {\n    bg: '#3A7500',\n    fg: '#F2FFE5',\n  },\n  red: {\n    bg: '#AC3EA3',\n    fg: '#FFE5F1',\n  },\n  ctx: {\n    bg: '#222',\n    fg: '#759EEF',\n    extra: '#E599FF',\n  },\n  white: {\n    fg: '#ccc',\n    bg: '#333',\n  },\n}\n\nconst columns = process.stdout.columns || 80\n\nconst Line: FC<{ line: string }> = ({ line }) =>\n  line.charAt(0) === '+' ? (\n    <Green line={line} />\n  ) : line.charAt(0) === '-' ? (\n    <Red line={line} />\n  ) : line.charAt(0) === '@' ? (\n    <Ctx line={line} />\n  ) : (\n    <White line={line} />\n  )\n\nconst White: FC<{ line: string }> = ({ line }) => (\n  <Text backgroundColor={theme.white.bg} color={theme.white.fg}>\n    {line}\n  </Text>\n)\n\nconst Ctx: FC<{ line: string }> = ({ line }) => {\n  const f = line.match(/^(\\@\\@.*?\\@\\@)( .*)$/)\n  return f ? (\n    <Box>\n      <Text bold backgroundColor={theme.ctx.bg} color={theme.ctx.fg}>\n        {f[1]}\n      </Text>\n      <Text\n        bold\n        backgroundColor={theme.ctx.bg}\n        color={theme.ctx.extra}>\n        {f[2]}\n      </Text>\n    </Box>\n  ) : (\n    <Text bold backgroundColor={theme.ctx.bg} color={theme.ctx.fg}>\n      {line}\n    </Text>\n  )\n}\n\nconst Green: FC<{ line: string }> = ({ line }) => (\n  <Text color={theme.green.fg} backgroundColor={theme.green.bg}>\n    {line}\n  </Text>\n)\nconst Red: FC<{ line: string }> = ({ line }) => (\n  <Text color={theme.red.fg} backgroundColor={theme.red.bg}>\n    {line}\n  </Text>\n)\n\nexport const Diff: FC<{ diff: string }> = ({ diff = '' }) => {\n  const sd: string = diff.trimEnd()\n  if (!sd) return <></>\n\n  let width = 0\n  const maxLen = Math.max(columns - 5, 0)\n  const lines = sd\n    .replace(/\\x1b/g, '\\\\' + 'x1b')\n    .split('\\n')\n    .filter(line => {\n      if (line.length > width) {\n        width = Math.min(maxLen, line.length)\n      }\n      return (\n        line !== '\\\\ No newline at end of file' && !/^\\=+$/.test(line)\n      )\n    })\n  return (\n    <Box flexDirection=\"column\">\n      {lines\n        .map(line =>\n          stringLength(line) <= width\n            ? line + ' '.repeat(width - stringLength(line))\n            : line\n        )\n        .map((line, key) => (\n          <Box key={key}>\n            <Line line={line} />\n          </Box>\n        ))}\n    </Box>\n  )\n}\n"]}