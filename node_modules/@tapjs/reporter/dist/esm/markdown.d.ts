import { Minipass } from 'minipass';
import { Parser } from 'tap-parser';
import { Case, Suite } from './json.js';
export declare class MarkdownStream extends Minipass<string> {
    parser: Parser;
    constructor();
    onCase(c: Case): void;
    suiteStart(s: Suite): void;
    suiteEnd(s: Suite): void;
    write(chunk: Minipass.ContiguousData, cb?: (() => void) | undefined): boolean;
    write(chunk: Minipass.ContiguousData, encoding?: Minipass.Encoding | undefined, cb?: (() => void) | undefined): boolean;
    end(cb?: (() => void) | undefined): this;
    end(chunk: Minipass.ContiguousData, cb?: (() => void) | undefined): this;
    end(chunk: Minipass.ContiguousData, encoding?: Minipass.Encoding | undefined, cb?: (() => void) | undefined): this;
}
//# sourceMappingURL=markdown.d.ts.map