{"version":3,"file":"use-bailed-out.js","sourceRoot":"","sources":["../../../src/hooks/use-bailed-out.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAA;AAEpD,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,CAAO,EAAE,EAAE;IACtC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,QAAQ,CACxC,CAAC,CAAC,SAAS,CACZ,CAAA;IACD,eAAe,CACb,GAAG,EAAE,CACH,aAAa,CAAC,CAAC,EAAE,SAAS,EAAE,CAAC,MAAe,EAAE,EAAE,CAC9C,YAAY,CAAC,MAAM,IAAI,IAAI,CAAC,CAC7B,EACH,CAAC,CAAC,CAAC,SAAS,CAAC,CACd,CAAA;IACD,OAAO,SAAS,CAAA;AAClB,CAAC,CAAA","sourcesContent":["import { Base } from '@tapjs/core'\nimport { useLayoutEffect, useState } from 'react'\nimport { listenCleanup } from '../listen-cleanup.js'\n\nexport const useBailedOut = (t: Base) => {\n  const [bailedOut, setBailedOut] = useState<string | boolean>(\n    t.bailedOut\n  )\n  useLayoutEffect(\n    () =>\n      listenCleanup(t, 'bailout', (reason?: string) =>\n        setBailedOut(reason || true)\n      ),\n    [t.bailedOut]\n  )\n  return bailedOut\n}\n"]}