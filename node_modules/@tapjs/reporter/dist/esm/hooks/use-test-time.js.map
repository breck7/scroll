{"version":3,"file":"use-test-time.js","sourceRoot":"","sources":["../../../src/hooks/use-test-time.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,MAAM,OAAO,CAAA;AACjD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAA;AAEpD,MAAM,CAAC,MAAM,WAAW,GAAG,CACzB,IAAU,EACV,WAAyB,GAAG,EACpB,EAAE;IACV,MAAM,CAAC,IAAI,EAAE,UAAU,CAAC,GAAG,QAAQ,CAAS,IAAI,CAAC,IAAI,CAAC,CAAA;IACtD,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAS,IAAI,CAAC,GAAG,EAAE,CAAC,CAAA;IAC5C,eAAe,CAAC,GAAG,EAAE;QACnB,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI;YACjB,CAAC,CAAC,IAAI;YACN,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,EAAE,QAAQ,CAAC,CAAA;QAC/D,MAAM,OAAO,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3D,MAAM,OAAO,GAAG,aAAa,CAAC,IAAI,EAAE,UAAU,EAAE,OAAO,CAAC,CAAA;QACxD,OAAO,GAAG,EAAE;YACV,OAAO,EAAE,CAAA;YACT,OAAO,EAAE,CAAA;QACX,CAAC,CAAA;IACH,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAA;IACf,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["import { Base, MILLISECONDS } from '@tapjs/core'\nimport { useLayoutEffect, useState } from 'react'\nimport { listenCleanup } from '../listen-cleanup.js'\n\nexport const useTestTime = (\n  test: Base,\n  interval: MILLISECONDS = 247\n): number => {\n  const [time, updateTime] = useState<number>(test.time)\n  const [start] = useState<number>(Date.now())\n  useLayoutEffect(() => {\n    const i = test.time\n      ? null\n      : setInterval(() => updateTime(Date.now() - start), interval)\n    const maybeCT = () => (i === null ? null : clearTimeout(i))\n    const cleanup = listenCleanup(test, 'complete', maybeCT)\n    return () => {\n      maybeCT()\n      cleanup()\n    }\n  }, [test.time])\n  return time\n}\n"]}