{"version":3,"file":"junit.js","sourceRoot":"","sources":["../../src/junit.ts"],"names":[],"mappings":"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","sourcesContent":["// junit representation of the test run\n// https://github.com/testmoapp/junitxml\n\nimport { Minipass } from 'minipass'\nimport { FinalResults, Parser, Result } from 'tap-parser'\nimport { stringify } from 'tap-yaml'\n\nconst xmlEscape = (s: string) =>\n  s\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n\nconst cdata = (s: string) =>\n  s\n    .split(']]>')\n    .map(s => `<![CDATA[\\n${s.trimEnd()}\\n]]>`)\n    .join(xmlEscape(']]>'))\n\nclass Properties {\n  data?: Record<string, any>\n  constructor(data?: Record<string, any>) {\n    this.data = data\n  }\n  toString() {\n    /* c8 ignore start */\n    if (!this.data) return ''\n    /* c8 ignore stop */\n    const body = Object.entries(this.data)\n      .map(([k, v]) => {\n        if (\n          v === undefined ||\n          v === null ||\n          v === '' ||\n          v === false\n        ) {\n          return ''\n        } else if (typeof v === 'string') {\n          return v.includes('\\n')\n            ? `<property name=\"${xmlEscape(k)}\">${cdata(\n                v\n              )}</property>`\n            : `<property name=\"${xmlEscape(k)}\" value=\"${xmlEscape(\n                v\n              )}\" />`\n        } else if (typeof v === 'number' || typeof v === 'boolean') {\n          return `<property name=\"${xmlEscape(k)}\" value=\"${xmlEscape(\n            String(v)\n          )}\" />`\n        } else {\n          return `<property name=\"${xmlEscape(k)}\">${cdata(\n            stringify(v)\n          )}</property>`\n        }\n      })\n      .filter(v => !!v)\n    if (!body.length) return ''\n    return `<properties>\n${body.join('\\n')}\n</properties>`\n  }\n}\n\nclass Failure {\n  result: Result\n  constructor(result: Result) {\n    this.result = result\n  }\n  toString() {\n    const msg = stringify({\n      ...(this.result.diag || { name: this.result.name }),\n    })\n    return `<failure>${cdata(msg).trimEnd()}</failure>`\n  }\n}\n\nclass Case {\n  result: Result\n  classname: string\n  constructor(result: Result) {\n    this.result = result\n    const fn = result.fullname\n    /* c8 ignore start */\n    this.classname = fn.endsWith(result.name)\n      ? fn\n          .substring(0, fn.length - result.name.length)\n          .replace(/>? $/, '')\n          .trimEnd()\n      : fn\n    /* c8 ignore stop */\n  }\n  get failures() {\n    return this.result.ok ? 0 : 1\n  }\n  get skipped() {\n    return this.result.skip || this.result.todo ? 1 : 0\n  }\n  get tests() {\n    return 1\n  }\n  toString() {\n    /* c8 ignore start */\n    const file =\n      this.result.diag?.at?.fileName ||\n      this.result.diag?.at?.file ||\n      this.result.diag?.file\n    const line =\n      this.result.diag?.at?.lineNumber ||\n      this.result.diag?.at?.line ||\n      this.result.diag?.line\n    const column =\n      this.result.diag?.at?.columnNumber ||\n      this.result.diag?.at?.column ||\n      this.result.diag?.column\n    /* c8 ignore stop */\n    const { ok, name, skip, todo, tapError, time, diag } = this.result\n    const props = String(\n      new Properties({\n        ...(skip ? { skip } : {}),\n        ...(todo ? { todo } : {}),\n        /* c8 ignore start */\n        ...(tapError ? { tapError } : {}),\n        /* c8 ignore stop */\n        ...(diag || {}),\n      })\n    ).trimEnd()\n    return `<testcase id=\"${this.result.id}\" name=\"${xmlEscape(\n      name\n    )}\" classname=\"${xmlEscape(this.classname)}\"${\n      time ? ` time=\"${seconds(time)}\"` : ''\n    }${file ? ` file=\"${xmlEscape(String(file))}\"` : ''}${\n      file && line ? ` line=\"${xmlEscape(String(line))}\"` : ''\n    }${\n      file && line && column\n        ? ` column=\"${xmlEscape(String(column))}\"`\n        : ''\n    }${\n      ok && !props\n        ? ' />'\n        : `>\n${!ok ? new Failure(this.result) : props}\n</testcase>\n`\n    }`\n  }\n}\n\nclass Suite {\n  parser: Parser\n  suites: Suite[] = []\n  cases: Case[] = []\n  name: string\n  results?: FinalResults\n  constructor(parser: Parser) {\n    this.parser = parser\n    this.name = parser.name\n    this.parser.on('complete', res => (this.results = res))\n    this.parser.on('child', p => this.suites.push(new Suite(p)))\n    this.parser.on('assert', a => this.onAssert(a))\n  }\n  onAssert(a: Result) {\n    this.cases.push(new Case(a))\n  }\n  get tests(): number {\n    return (\n      [...this.suites, ...this.cases]\n        .map(s => s.tests)\n        /* c8 ignore start */\n        .reduce((a, b) => a + b, this.results ? 1 : 0)\n    )\n    /* c8 ignore stop */\n  }\n  get failures(): number {\n    return [...this.suites, ...this.cases]\n      .map(s => s.failures)\n      .reduce((a, b) => a + b, this.results?.ok === false ? 1 : 0)\n  }\n  get assertions(): number {\n    return this.suites\n      .map(s => s.assertions)\n      .reduce((a, b) => a + b, this.cases.length)\n  }\n  get skipped(): number {\n    return [...this.suites, ...this.cases]\n      .map(s => s.skipped)\n      .reduce(\n        (a, b) => a + b,\n        this.results?.plan.skipAll ||\n          this.results?.skip ||\n          this.results?.todo\n          ? 1\n          : 0\n      )\n  }\n\n  toString() {\n    const props = new Properties({\n      ok: this.results?.ok,\n      plan: this.results?.plan,\n      bailout: this.results?.bailout,\n    })\n\n    return `<testsuite name=\"${xmlEscape(this.name)}\" tests=\"${\n      this.tests\n    }\" failures=\"${this.failures}\" assertions=\"${\n      this.assertions\n    }\" skipped=\"${this.skipped}\"${\n      this.results?.time\n        ? ` time=\"${seconds(this.results.time)}\"`\n        : ''\n    }>\n${props}\n${this.suites\n  .map(s => String(s))\n  .join('\\n')\n  .trimEnd()}\n${this.cases\n  .map(c => String(c))\n  .join('\\n')\n  .trimEnd()}\n</testsuite>\n`\n  }\n}\n\nclass Suites extends Suite {\n  onAssert() {}\n  toString() {\n    const props = String(\n      new Properties({\n        ok: this.results?.ok,\n        plan: this.results?.plan,\n        bailout: this.results?.bailout,\n      })\n    )\n    const id = new Date()\n      .toISOString()\n      .replace(/[^0-9T]/g, '')\n      .replace('T', '_')\n    return `<testsuites id=\"${xmlEscape(id)}\" name=\"${\n      xmlEscape(this.name) || 'TAP Tests'\n    }\" tests=\"${this.tests}\" failures=\"${\n      this.failures\n    }\" assertions=\"${this.assertions}\" skipped=\"${this.skipped}\" ${\n      /* c8 ignore start */\n      this.results?.time ? `time=\"${seconds(this.results.time)}\"` : ''\n    }>${props ? '\\n' + props : ''}\n${this.suites\n  /* c8 ignore stop */\n  .map(s => String(s))\n  .join('\\n')\n  .trimEnd()}\n</testsuites>\n`\n  }\n}\n\nconst seconds = (m: number) => Math.floor(m * 1000) / 1000000\n\nexport class JUnit extends Minipass<string> {\n  parser: Parser = new Parser()\n  constructor() {\n    super({ encoding: 'utf8' })\n    super.write('<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\\n')\n    const suites = new Suites(this.parser)\n    this.parser.on('complete', () => {\n      super.write(String(suites))\n      super.end()\n    })\n  }\n\n  write(\n    chunk: Minipass.ContiguousData,\n    cb?: (() => void) | undefined\n  ): boolean\n  write(\n    chunk: Minipass.ContiguousData,\n    encoding?: Minipass.Encoding | undefined,\n    cb?: (() => void) | undefined\n  ): boolean\n  write(chunk: any, encoding?: any, cb?: any): boolean {\n    return this.parser.write(chunk, encoding, cb)\n  }\n\n  end(cb?: (() => void) | undefined): this\n  end(\n    chunk: Minipass.ContiguousData,\n    cb?: (() => void) | undefined\n  ): this\n  end(\n    chunk: Minipass.ContiguousData,\n    encoding?: Minipass.Encoding | undefined,\n    cb?: (() => void) | undefined\n  ): this\n  end(chunk?: any, encoding?: any, cb?: any): this {\n    this.parser.end(chunk, encoding, cb)\n    return this\n  }\n}\n"]}