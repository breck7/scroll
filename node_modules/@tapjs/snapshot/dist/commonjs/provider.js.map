{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../src/provider.ts"],"names":[],"mappings":"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","sourcesContent":["import { mkdirSync, statSync, unlinkSync, writeFileSync } from 'fs'\nimport { dirname } from 'path'\nimport type { SnapshotProvider } from './index.js'\nimport { req } from './require.js'\n\nconst envMsg = `\nRun with TAP_SNAPSHOT=1 in the environment to create snapshots`\n\nconst snapshotHeading = `/* IMPORTANT\n * This snapshot file is auto-generated, but designed for humans.\n * It should be checked into source control and tracked carefully.\n * Re-generate by setting TAP_SNAPSHOT=1 and running tests.\n * Make sure to inspect the output below.  Do not ignore changes!\n */\n'use strict'`\n\nconst snapshotExport = (k: string, v: string) =>\n  `exports[\\`${escape(k)}\\`] = \\`\\n${escape(v)}\\n\\`\\n`\n\nconst snapshotData = (data: { [k: string]: string }) =>\n  `${snapshotHeading}\n${Object.entries(data)\n  .sort(([a], [b]) => a.localeCompare(b, 'en'))\n  .map(([k, v]) => snapshotExport(k, v))\n  .join('\\n')}`\n\nconst escape = (s: string) =>\n  s\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(/\\`/g, '\\\\`')\n    .replace(/\\$\\{/g, '\\\\${')\n\n/**\n * This is the default snapshot provider that ships with the plugin.\n * It can be overridden by providing a `snapshotProvider` option to\n * the test options.\n */\nexport class SnapshotProviderDefault implements SnapshotProvider {\n  #indexes: Map<string, number> = new Map()\n  #snapshot?: { [k: string]: string }\n  file: string\n\n  constructor(file: string) {\n    this.file = file\n  }\n\n  read(msg: string): string {\n    if (!this.#snapshot) {\n      this.#load()\n    }\n\n    // bump the index if this one gets used again\n    const index = this.#indexes.get(msg) || 1\n\n    const entry = msg + ' ' + index\n    const s = this.#snapshot?.[entry]\n    if (s === undefined) {\n      throw new Error(`Snapshot entry not found: \"${msg}\"${envMsg}`)\n    }\n\n    this.#indexes.set(msg, index + 1)\n    return s.replace(/^\\n|\\n$/g, '')\n  }\n\n  snap(data: string, msg: string) {\n    const index = this.#indexes.get(msg) || 1\n    this.#indexes.set(msg, index + 1)\n    this.#snapshot = this.#snapshot || {}\n    this.#snapshot[msg + ' ' + index] = data\n  }\n\n  save() {\n    if (!this.#snapshot) {\n      try {\n        unlinkSync(this.file)\n      } catch (err) {\n        const er = err as NodeJS.ErrnoException\n        if (er.code !== 'ENOENT') throw er\n      }\n      return\n    }\n    mkdirSync(dirname(this.file), { recursive: true })\n    writeFileSync(this.file, snapshotData(this.#snapshot))\n  }\n\n  #load() {\n    try {\n      if (!statSync(this.file).isFile()) {\n        throw 'not a file'\n      }\n      this.#snapshot = req(this.file)\n    } catch (er) {\n      throw new Error(\n        `Snapshot file not found: ${this.file}${envMsg}`\n      )\n    }\n  }\n}\n"]}