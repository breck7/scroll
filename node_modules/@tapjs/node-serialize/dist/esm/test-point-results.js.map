{"version":3,"file":"test-point-results.js","sourceRoot":"","sources":["../../src/test-point-results.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAA;AAE1C,OAAO,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAA;AACxD,OAAO,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAA;AAEpD,MAAM,CAAC,MAAM,gBAAgB,GAAG,CAC9B,GAAsB,EACtB,CAAO,EACP,UAAkB,EACG,EAAE;IACvB,MAAM,CAAC,GAAa;QAClB,IAAI,EAAE,GAAG,CAAC,IAAI;QACd,UAAU;QACV,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE;YACd,CAAC,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC;YAC9B,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAClC,OAAO,EAAE,CAAC,CAAC,YAAY,GAAG,CAAC;QAC3B,OAAO,EAAE;YACP,WAAW,EAAE,GAAG,CAAC,IAAI,IAAI,CAAC;SAC3B;KACF,CAAA;IACD,IAAI,GAAG,CAAC,IAAI;QAAE,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;IAC/B,IAAI,GAAG,CAAC,IAAI;QAAE,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAA;IAC/B,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI;QAAE,OAAO,CAAC,CAAA;IAE5C,MAAM,EAAE,GAAG,aAAa,CAAC,GAAG,CAAC,CAAA;IAC7B,yBAAyB;IACzB,OAAO;QACL,GAAG,CAAC;QACJ,OAAO,EAAE;YACP,GAAG,CAAC,CAAC,OAAO;YACZ,KAAK,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;gBAC1C,KAAK,EAAE,EAAE;gBACT,IAAI,EAAE,kBAAkB;gBACxB,WAAW,EAAE,iBAAiB;gBAC9B,KAAK,EAAE,WAAW,CAChB,GAAG,CAAC,IAAI,EAAE,KAAK,IAAI,CAAC,CAAC,OAAO,CAAC,KAAK,CACnC,CAAC,OAAO,EAAE;aACZ,CAAC;SACH;KACF,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { Base } from '@tapjs/core'\nimport { FailData, PassData } from '@tapjs/error-serdes'\nimport { expandStack } from '@tapjs/stack'\nimport { Result, TapError } from 'tap-parser'\nimport { locFromCallSite } from './loc-from-callsite.js'\nimport { resultToError } from './result-to-error.js'\n\nexport const testPointResults = (\n  res: Result | TapError,\n  t: Base,\n  testNumber: number\n): PassData | FailData => {\n  const p: PassData = {\n    name: res.name,\n    testNumber,\n    ...(res.diag?.at\n      ? locFromCallSite(res.diag.at)\n      : locFromCallSite(t.options.at)),\n    nesting: t.nestingLevel + 1,\n    details: {\n      duration_ms: res.time ?? 0,\n    },\n  }\n  if (res.skip) p.skip = res.skip\n  if (res.todo) p.todo = res.todo\n  if (res.ok || res.skip || res.todo) return p\n\n  const fe = resultToError(res)\n  // console.error(res, fe)\n  return {\n    ...p,\n    details: {\n      ...p.details,\n      error: Object.assign(new Error(fe.message), {\n        cause: fe,\n        code: 'ERR_TEST_FAILURE',\n        failureType: 'testCodeFailure',\n        stack: expandStack(\n          res.diag?.stack ?? t.options.stack\n        ).trimEnd(),\n      }),\n    },\n  }\n}\n"]}