/**
 * Configuration options for TAP core.
 *
 * Documentation available via `tap -h`
 *
 * @see {@link https://npmjs.com/jackspeak}
 */
declare const _default: import("jackspeak").Jack<import("jackspeak").ConfigSetFromMetaSet<"string", true, {
    plugin: {
        hint: string;
        description: string;
        default: string[];
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", false, {
    reporter: {
        short: string;
        hint: string;
        description: string;
    };
    'reporter-file': {
        short: string;
        hint: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", true, {
    'reporter-arg': {
        hint: string;
        short: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", true, {
    'coverage-report': {
        hint: string;
        default: string[];
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"boolean", false, {
    'show-full-coverage': {
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", false, {
    'coverage-map': {
        hint: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"boolean", false, {
    'allow-empty-coverage': {
        description: string;
    };
    'allow-incomplete-coverage': {
        description: string;
    };
    'disable-coverage': {
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"boolean", false, {
    bail: {
        short: string;
        description: string;
    };
    'no-bail': {
        short: string;
        description: string;
    };
    comments: {
        description: string;
    };
    passes: {
        description: string;
    };
    'fail-todo': {
        description: string;
    };
    'fail-skip': {
        description: string;
    };
    color: {
        short: string;
        description: string;
    };
    'no-color': {
        short: string;
        description: string;
    };
    changed: {
        short: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", false, {
    save: {
        short: string;
        hint: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"boolean", false, {
    diag: {
        description: string;
    };
    'no-diag': {
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"number", false, {
    timeout: {
        hint: string;
        short: string;
        default: number;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", true, {
    files: {
        hint: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"number", false, {
    jobs: {
        hint: string;
        short: string;
        default: number;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", false, {
    before: {
        hint: string;
        description: string;
    };
    after: {
        hint: string;
        description: string;
    };
    'output-file': {
        hint: string;
        short: string;
        description: string;
    };
    'output-dir': {
        hint: string;
        short: string;
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"string", true, {
    include: {
        hint: string;
        default: string[];
        description: string;
    };
    exclude: {
        hint: string;
        default: string[];
        description: string;
    };
    serial: {
        hint: string;
        description: string;
    };
    'test-arg': {
        hint: string;
        description: string;
        default: never[];
    };
    'test-env': {
        hint: string;
        description: string;
        default: never[];
    };
    'node-arg': {
        hint: string;
        default: never[];
        description: string;
    };
}> & import("jackspeak").ConfigSetFromMetaSet<"boolean", false, {
    debug: {
        description: string;
    };
    'omit-version': {
        description: string;
    };
    'omit-whitespace': {
        description: string;
    };
    'no-omit-whitespace': {
        description: string;
    };
    versions: {
        short: string;
        description: string;
    };
    version: {
        short: string;
        description: string;
    };
    help: {
        short: string;
        type: "boolean";
        description: string;
    };
}>>;
export default _default;
//# sourceMappingURL=jack.d.ts.map