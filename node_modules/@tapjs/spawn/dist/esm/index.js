import { Spawn, } from '@tapjs/core';
export class SpawnPlugin {
    #t;
    constructor(t) {
        this.#t = t;
    }
    spawn(cmd, args, options, name) {
        if (typeof args === 'string') {
            args = [args];
        }
        if (typeof options === 'string') {
            name = options;
            options = {};
        }
        if (typeof args === 'object' && !Array.isArray(args)) {
            options = args;
            args = [];
        }
        options = options || {};
        if (options.name === undefined && name !== undefined) {
            options.name = name;
        }
        options.command = cmd;
        options.args = args !== undefined ? args : [];
        return this.#t.sub(Spawn, options, this.#t.t.spawn);
    }
}
export const plugin = (t) => new SpawnPlugin(t);
//# sourceMappingURL=index.js.map