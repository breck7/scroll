{"version":3,"file":"resolve-dependency-export.js","sourceRoot":"","sources":["../../src/resolve-dependency-export.ts"],"names":[],"mappings":"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","sourcesContent":["import { resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { moduleNotFound, packageNotFound } from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { findDepPackage } from './find-dep-package.js'\nimport { ResolveImportOpts } from './index.js'\nimport { readPkg } from './read-pkg.js'\nimport { resolveExport } from './resolve-export.js'\n\n/**\n * Resolve a dependency like '@dep/name/sub/module' where\n * '@dep/name' is in node_modules somewhere and exports './sub/module'\n */\nexport const resolveDependencyExports = async (\n  url: string | null,\n  parentPath: string,\n  options: ResolveImportOpts & { originalParent: string }\n): Promise<URL> => {\n  const { originalParent } = options\n  const parts = url?.match(/^(@[^\\/]+\\/[^\\/]+|[^\\/]+)(?:\\/(.*))?$/)\n  const [, pkgName, sub] =\n    url === null ? [, null, ''] : parts || ['', '', '']\n  const ppath = await findDepPackage(pkgName, parentPath)\n  if (!ppath) {\n    throw packageNotFound(pkgName, originalParent)\n  }\n\n  const indexjs = resolve(ppath, 'index.js')\n  const pj = resolve(ppath, 'package.json')\n  const pkg = await readPkg(pj)\n  const subpath = sub ? resolve(ppath, sub) : false\n  // if not a package, then the sub can still be a direct path\n  // if no sub, then resolves to index.js if available.\n  if (!pkg) {\n    if (!subpath) {\n      // try index.js, otherwise fail\n      if (await fileExists(indexjs)) return pathToFileURL(indexjs)\n      else throw packageNotFound(ppath, originalParent)\n    } else {\n      if (await fileExists(subpath)) {\n        return pathToFileURL(subpath)\n      } else throw moduleNotFound(subpath, originalParent)\n    }\n  }\n\n  // ok, have a package, look up the export if present.\n  // otherwise, use main, otherwise index.js\n  if (pkg.exports) {\n    const subPath = resolveExport(\n      sub,\n      pkg.exports,\n      pj,\n      originalParent,\n      options\n    )\n    const resolved = resolve(ppath, subPath)\n    if (await fileExists(resolved)) return pathToFileURL(resolved)\n    else throw moduleNotFound(resolved, originalParent)\n  } else if (subpath) {\n    if (await fileExists(subpath)) return pathToFileURL(subpath)\n    else throw moduleNotFound(subpath, originalParent)\n  } else if (pkg.main) {\n    // fall back to index.js if main is missing\n    const rmain = resolve(ppath, pkg.main)\n    if (await fileExists(rmain)) return pathToFileURL(rmain)\n    else if (await fileExists(indexjs)) return pathToFileURL(indexjs)\n    else throw packageNotFound(ppath, originalParent)\n  } else if (await fileExists(indexjs)) {\n    return pathToFileURL(indexjs)\n  } else {\n    throw packageNotFound(ppath, originalParent)\n  }\n}\n"]}