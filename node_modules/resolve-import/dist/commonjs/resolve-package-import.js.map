{"version":3,"file":"resolve-package-import.js","sourceRoot":"","sources":["../../src/resolve-package-import.ts"],"names":[],"mappings":"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","sourcesContent":["import { dirname, resolve } from 'path'\nimport { pathToFileURL } from 'url'\nimport { walkUp } from 'walk-up-path'\nimport {\n  invalidImportSpecifier,\n  moduleNotFound,\n  packageImportNotDefined,\n} from './errors.js'\nimport { fileExists } from './file-exists.js'\nimport { findStarMatch } from './find-star-match.js'\nimport { ConditionalValue, ResolveImportOpts } from './index.js'\nimport { readPkg } from './read-pkg.js'\nimport { resolveConditionalValue } from './resolve-conditional-value.js'\nimport { resolveDependencyExports } from './resolve-dependency-export.js'\nimport { resolveExport } from './resolve-export.js'\nimport { resolveImport } from './resolve-import.js'\n\n/**\n * Resolve an import like '@package/name/sub/module', where\n * './sub/module' appears in the exports of the local package.\n */\nexport const resolvePackageImport = async (\n  url: string,\n  parentPath: string,\n  options: ResolveImportOpts & { originalParent: string }\n): Promise<URL | string> => {\n  const { originalParent } = options\n  const parts = url.match(/^(@[^\\/]+\\/[^\\/]+|[^\\/]+)(?:\\/(.*))?$/) as\n    | null\n    | (RegExpMatchArray & [string, string, string])\n  // impossible\n  /* c8 ignore start */\n  if (!parts) throw invalidImportSpecifier(url)\n  /* c8 ignore stop */\n\n  for (const dir of walkUp(dirname(parentPath))) {\n    const pj = resolve(dir, 'package.json')\n    const pkg = await readPkg(pj)\n    if (!pkg) continue\n    if (pkg.name && pkg.exports) {\n      // can import from this package name if exports is defined\n      const [, pkgName, sub] = parts\n      if (pkgName === pkg.name) {\n        // ok, see if sub is a valid export then\n        const subPath = resolveExport(\n          sub,\n          pkg.exports,\n          pj,\n          originalParent,\n          options\n        )\n        const resolved = resolve(dir, subPath)\n        if (await fileExists(resolved)) return pathToFileURL(resolved)\n        else throw moduleNotFound(resolved, originalParent)\n      }\n    }\n\n    if (url.startsWith('#')) {\n      if (!pkg.imports) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      const exact = pkg.imports[url]\n      if (exact !== undefined) {\n        const res = resolveConditionalValue(exact, options)\n        if (!res) {\n          throw packageImportNotDefined(url, pj, originalParent)\n        }\n        // kind of weird behavior, but it's what node does\n        if (res.startsWith('#')) {\n          return resolveDependencyExports(null, parentPath, options)\n        }\n        return resolveImport(res, pj, options)\n      }\n\n      const sm = findStarMatch(url, pkg.imports)\n      if (!sm) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      const [key, mid] = sm\n      const match = pkg.imports[key] as ConditionalValue\n      const res = resolveConditionalValue(match, options)\n      if (!res) {\n        throw packageImportNotDefined(url, pj, originalParent)\n      }\n      if (res.startsWith('#')) {\n        return resolveDependencyExports(null, parentPath, options)\n      }\n      const expand = res.replace(/\\*/g, mid)\n\n      // start over with the resolved import\n      return resolveImport(expand, pj, options)\n    }\n\n    break\n  }\n\n  return resolveDependencyExports(url, parentPath, options)\n}\n"]}