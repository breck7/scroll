{"version":3,"file":"built-imports.js","sourceRoot":"","sources":["../../src/built-imports.ts"],"names":[],"mappings":"AAAA,+CAA+C;AAI/C,mEAAmE;AACnE,oDAAoD;AACpD,eAAe,CAAC,GAAY,EAAsB,EAAE;IAClD,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAA;IACvB,IAAI,CAAC,OAAO;QAAE,OAAO,SAAS,CAAA;IAC9B,OAAO,MAAM,CAAC,WAAW,CACvB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;QACtC,CAAC;QACD,OAAO,CAAC,KAAK,QAAQ,IAAI,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC7C,CAAC,CAAC,IAAI;gBACJ,CAAC;qBACE,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;qBAC1B,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC;qBAChC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC;YAC7B,CAAC,CAAC,CAAC;KACN,CAAC,CACH,CAAA;AACH,CAAC,CAAA","sourcesContent":["// merge tshy.imports with package.json imports\n\nimport { Package } from './types.js'\n\n// strip the ./src/ and turn ts extension into js for built imports\n// leave unbuilt imports alone, they'll be symlinked\nexport default (pkg: Package): Package['imports'] => {\n  const { imports } = pkg\n  if (!imports) return undefined\n  return Object.fromEntries(\n    Object.entries(imports).map(([k, v]) => [\n      k,\n      typeof v === 'string' && v.startsWith('./src/')\n        ? './' +\n          v\n            .substring('./src/'.length)\n            .replace(/\\.([cm]?)ts$/, '.$1js')\n            .replace(/\\.tsx$/, '.js')\n        : v,\n    ])\n  )\n}\n"]}