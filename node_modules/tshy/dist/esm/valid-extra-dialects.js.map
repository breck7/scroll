{"version":3,"file":"valid-extra-dialects.js","sourceRoot":"","sources":["../../src/valid-extra-dialects.ts"],"names":[],"mappings":"AAAA,4CAA4C;AAC5C,OAAO,IAAI,MAAM,WAAW,CAAA;AAG5B,MAAM,YAAY,GAAG,CACnB,CAAuB,EACvB,CAAuB,EACP,EAAE;IAClB,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAAE,OAAO,KAAK,CAAA;IAC1B,KAAK,MAAM,EAAE,IAAI,CAAC,EAAE,CAAC;QACnB,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,CAAC;YACnB,OAAO,EAAE,CAAA;QACX,CAAC;IACH,CAAC;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA;AAED,MAAM,oBAAoB,GAAG,CAC3B,CAAW,EACX,KAAyB,EACzB,EAAE;IACF,KAAK,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;QAClB,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;YAC1B,IAAI,CAAC,GAAG,KAAK,sCAAsC,CAAC,EAAE,CAAC,CAAA;YACvD,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACxB,CAAC;QACD,IACE,CAAC,KAAK,UAAU;YAChB,CAAC,KAAK,KAAK;YACX,CAAC,KAAK,KAAK;YACX,CAAC,KAAK,SAAS;YACf,CAAC,KAAK,QAAQ;YACd,CAAC,KAAK,MAAM;YACZ,CAAC,KAAK,SAAS,EACf,CAAC;YACD,IAAI,CAAC,GAAG,KAAK,qBAAqB,CAAC,EAAE,CAAC,CAAA;YACtC,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;QACxB,CAAC;IACH,CAAC;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,eAAe,CAAC,EAAE,gBAAgB,EAAE,WAAW,EAAc,EAAE,EAAE;IAC/D,IAAI,gBAAgB,KAAK,SAAS,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;QAChE,OAAO,IAAI,CAAA;IACb,CAAC;IACD,IACE,gBAAgB;QAChB,CAAC,oBAAoB,CAAC,gBAAgB,EAAE,UAAU,CAAC,EACnD,CAAC;QACD,OAAO,KAAK,CAAA;IACd,CAAC;IACD,IAAI,WAAW,IAAI,CAAC,oBAAoB,CAAC,WAAW,EAAE,KAAK,CAAC,EAAE,CAAC;QAC7D,OAAO,KAAK,CAAA;IACd,CAAC;IACD,MAAM,OAAO,GAAG,YAAY,CAAC,gBAAgB,EAAE,WAAW,CAAC,CAAA;IAC3D,IAAI,OAAO,EAAE,CAAC;QACZ,IAAI,CACF,mDAAmD;YACjD,SAAS,OAAO,gBAAgB,CACnC,CAAA;QACD,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;IACxB,CAAC;IACD,OAAO,IAAI,CAAA;AACb,CAAC,CAAA","sourcesContent":["// validate esmDialects and commonjsDialects\nimport fail from './fail.js'\nimport { TshyConfig } from './types.js'\n\nconst arrayOverlap = (\n  a: string[] | undefined,\n  b: string[] | undefined\n): string | false => {\n  if (!a || !b) return false\n  for (const av of a) {\n    if (b.includes(av)) {\n      return av\n    }\n  }\n  return false\n}\n\nconst validExtraDialectSet = (\n  e: string[],\n  which: 'commonjs' | 'esm'\n) => {\n  for (const d of e) {\n    if (typeof d !== 'string') {\n      fail(`${which} must be an array of strings, got: ${d}`)\n      return process.exit(1)\n    }\n    if (\n      d === 'commonjs' ||\n      d === 'cjs' ||\n      d === 'esm' ||\n      d === 'require' ||\n      d === 'import' ||\n      d === 'node' ||\n      d === 'default'\n    ) {\n      fail(`${which} must not contain ${d}`)\n      return process.exit(1)\n    }\n  }\n  return true\n}\n\nexport default ({ commonjsDialects, esmDialects }: TshyConfig) => {\n  if (commonjsDialects === undefined && esmDialects === undefined) {\n    return true\n  }\n  if (\n    commonjsDialects &&\n    !validExtraDialectSet(commonjsDialects, 'commonjs')\n  ) {\n    return false\n  }\n  if (esmDialects && !validExtraDialectSet(esmDialects, 'esm')) {\n    return false\n  }\n  const overlap = arrayOverlap(commonjsDialects, esmDialects)\n  if (overlap) {\n    fail(\n      'commonjsDialects and esmDialects must be unique, ' +\n        `found ${overlap} in both lists`\n    )\n    return process.exit(1)\n  }\n  return true\n}\n"]}