{"version":3,"file":"match.js","sourceRoot":"","sources":["../../src/match.ts"],"names":[],"mappings":"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","sourcesContent":["import { Format } from './format.js'\nimport { Has } from './has.js'\n\n/**\n * The loosed and most flexibly magical matching strategy.\n *\n * - If the objects pass the {@link tcompare!has.Has} test, then return true.\n * - If the pattern is a regular expression, then test it against the\n *   string form of the test value.\n * - If the pattern is a string, and the test value is a string, then test\n *   that the pattern appears somewhere in the test value.\n * - If the pattern is a string, and the test value is a Date, then test\n *   parse the pattern as a Date and verify that they have the same value\n * - If the pattern is a constructor, then test that the value is an\n *   instance of the constructor. In the case of scalar constructors, like\n *   Number, Boolean, etc, also pass if the `typeof` the value matches.\n *   That is `Match(1, { expect: Number })` passes.\n * - If the pattern is the `Array` constructor, then pass for any iterable\n *   valuef.\n */\n\nexport class Match extends Has {\n  test(): boolean | 'COMPLEX' {\n    const obj = this.object\n    const pattern = this.expect\n\n    return super.test() === true\n      ? true\n      : // failures that would also fail in the super class\n      // but if they didn't pass, then should fail here, too\n      pattern == null || obj == null\n      ? false\n      : pattern instanceof RegExp && obj instanceof RegExp\n      ? false\n      : Buffer.isBuffer(obj) && Buffer.isBuffer(pattern)\n      ? false\n      : typeof pattern === 'symbol'\n      ? false\n      : // ok, Match-specific stuff\n      pattern instanceof RegExp\n      ? pattern.test('' + obj)\n      : typeof obj === 'string' &&\n        typeof pattern === 'string' &&\n        pattern\n      ? obj.indexOf(pattern) !== -1\n      : obj instanceof Date && typeof pattern === 'string'\n      ? obj.getTime() === new Date(pattern).getTime()\n      : pattern === BigInt\n      ? typeof obj === 'bigint'\n      : pattern === Buffer\n      ? Buffer.isBuffer(obj)\n      : pattern === Function\n      ? typeof obj === 'function'\n      : pattern === Number\n      ? typeof obj === 'number' && obj === obj && isFinite(obj)\n      : pattern === String\n      ? typeof obj === 'string'\n      : pattern === Symbol\n      ? typeof obj === 'symbol'\n      : pattern === Boolean\n      ? typeof obj === 'boolean'\n      : pattern === Map\n      ? this.isMap()\n      : pattern === Set\n      ? this.isSet()\n      : pattern === Object\n      ? obj && typeof obj === 'object'\n      : pattern === Array\n      ? new Format(obj).isArray()\n      : !this.isError() && pattern instanceof Error\n      ? false\n      : this.isError() &&\n        ((pattern.message &&\n          !new Match(obj.message, {\n            expect: pattern.message,\n          }).test()) ||\n          (pattern.name &&\n            !new Match(obj.name, {\n              expect: pattern.name,\n            }).test()))\n      ? false\n      : // standard deep matching stuff, same as parent, but not simple.\n      this.isSet() && !(pattern instanceof Set)\n      ? false\n      : this.isMap() && !(pattern instanceof Map)\n      ? false\n      : typeof pattern === 'function' && typeof obj === 'object'\n      ? obj instanceof pattern\n      : typeof obj !== 'object' || typeof pattern !== 'object'\n      ? false\n      : 'COMPLEX'\n  }\n}\n"]}