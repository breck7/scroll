{"version":3,"file":"match-strict.js","sourceRoot":"","sources":["../../src/match-strict.ts"],"names":[],"mappings":";;;AAAA,yCAAkC;AAElC;;;;GAIG;AACH,MAAa,WAAY,SAAQ,gBAAK;IACpC,IAAI;QACF,kDAAkD;QAClD,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YAC7D,OAAO,KAAK,CAAA;SACb;QACD,OAAO,KAAK,CAAC,IAAI,EAAE,CAAA;IACrB,CAAC;CACF;AARD,kCAQC","sourcesContent":["import { Match } from './match.js'\n\n/**\n * Identical to {@link tcompare!match.Match}, *except* in the case of two\n * simple types. If the value loosely equals the expected pattern, but is not\n * strictly equal, then the test returns false.\n */\nexport class MatchStrict extends Match {\n  test() {\n    // equal on type coercion, but not equal strictly.\n    if (this.expect == this.object && this.expect !== this.object) {\n      return false\n    }\n    return super.test()\n  }\n}\n"]}