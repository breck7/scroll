{"version":3,"file":"date.js","sourceRoot":"","sources":["../../../src/types/date.ts"],"names":[],"mappings":"AAEA,MAAM,CAAC,MAAM,IAAI,GAAc;IAC7B,GAAG,EAAE,OAAO;IAEZ,oDAAoD;IACpD,qBAAqB;IACrB,QAAQ;QACN,OAAO,KAAK,CAAA;IACd,CAAC;IACD,oBAAoB;IAEpB,OAAO,CAAC,GAAG;QACT,MAAM,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,CAAA;QACvB,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAA;QACrB,IAAI,CAAC,KAAK,CAAC,EAAE;YACX,MAAM,IAAI,KAAK,CAAC,wBAAwB,GAAG,EAAE,CAAC,CAAA;SAC/C;QACD,OAAO,CAAC,CAAA;IACV,CAAC;CACF,CAAA","sourcesContent":["import { ScalarTag } from 'yaml'\n\nexport const date: ScalarTag = {\n  tag: '!date',\n\n  // use !!timestamp instead, this is for parsing only\n  /* c8 ignore start */\n  identify() {\n    return false\n  },\n  /* c8 ignore stop */\n\n  resolve(src) {\n    const d = new Date(src)\n    const t = d.getTime()\n    if (t !== t) {\n      throw new Error(`Invalid date string: ${src}`)\n    }\n    return d\n  },\n}\n"]}