abstractScrollParser
 cells keywordCell
 javascript
  compileEmbeddedVersion(compileSettings) {
   return this.compile(compileSettings)
  }
abstractScrollWithRequirementsParser
 extends abstractScrollParser
 javascript
  compile(compileSettings) {
    const {requireOnce} = this
    const set = compileSettings?.alreadyRequired || this.root.alreadyRequired
    let requireSnippet = ""
    if (!set.has(requireOnce)) {
      set.add(requireOnce)
      requireSnippet = requireOnce + "\n\n"
    }
    return requireSnippet + this.compileInstance()
  }
abstractTopLevelSingleMetaParser
 description Use these keywords once per file.
 extends abstractScrollParser
 cruxFromId
 cells keywordCell
 javascript
  compile() {
   return ""
  }
scrollParser
 extensions scroll
 description Tools for thought thats compile to HTML.
 root
 inScope abstractScrollParser blankLineParser
 catchAllParser catchAllParagraphParser
 compilesTo html
 javascript
  setFile(file) {
   this.file = file
   return this
  }
  compile(compileSettings) {
    this.sectionStack = []
    return this.map(child => child.compile(compileSettings)).filter(i => i).join("\n") + this.clearSectionStack()
  }
  sectionStack = []
  clearSectionStack() {
   const result = this.sectionStack.join("")
   this.sectionStack = []
   return result
  }
  get hakonParser() {
    if (this.isNodeJs())
      return require("jtree/products/hakon.nodejs.js")
    return hakonParser
  }
  alreadyRequired = new Set()
  compileEmbeddedVersion(compileSettings) {
   this.sectionStack = []
   return this.map(child => (child.compileEmbeddedVersion ? child.compileEmbeddedVersion(compileSettings) : child.compile(compileSettings)))
     .filter(i => i)
     .join("\n")
     .trim() + this.clearSectionStack()
  }
  get footnotes() {
   if (this._footnotes === undefined) this._footnotes = this.filter(node => node.isFootnote)
   return this._footnotes
  }
  file = {}
  get permalink() {
   return this.get("permalink") || this.file.permalink || ""
  }
 example
  # Hello world
  ## This is Scroll
  * It compiles to HTML.
  
  code
   // You can add code as well.
   print("Hello world")