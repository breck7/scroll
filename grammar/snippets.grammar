endSnippetParser
 description Insert one of these where you want to cut the file for a snippet.
 extends abstractTopLevelSingleMetaParser
snippetsParser
 extends abstractAftertextParser
 cruxFromId
 cells keywordCell groupNameWithOptionalFolderCell
 catchAllCellType groupNameWithOptionalFolderCell
 description Prints the snippets of all files in the named group(s).
 example
  snippets index
 javascript
  makeSnippet(file, compileSettings) {
    const {scrollProgram} = file
    const snippetBreak = scrollProgram.getNode("endSnippet")
    if (!snippetBreak) return scrollProgram.compileEmbeddedVersion(compileSettings) + file.viewSourceHtml
    const indexOfBreak = snippetBreak.getIndex()
    const linkRelativeToCompileTarget = compileSettings.relativePath + file.permalink
    const joinChar = "\n"
    const html = scrollProgram
        .map((child, index) => (index >= indexOfBreak ? "" : child.compileEmbeddedVersion ? child.compileEmbeddedVersion(compileSettings) : child.compile(compileSettings)))
        .filter(i => i)
        .join(joinChar)
        .trim() +
      `<a class="scrollContinueReadingLink" href="${linkRelativeToCompileTarget}">Continue reading...</a>`
    return html + file.viewSourceHtml
  }
  compile() {
   const file = this.parent.file
   const files = file.getFilesInGroupsForEmbedding(this.getWordsFrom(1))
   const alreadyRequired = this.root.alreadyRequired
   const snippets = files.map(file => {
   const compileSettings = {relativePath: file.relativePath, alreadyRequired }
   return `<div class="scrollSnippetContainer">${this.makeSnippet(file.file, compileSettings)}</div>`
   }).join("\n\n")
   return `<div class="scrollColumns" style="column-width:35ch;">${snippets}</div>`
  }
fullSnippetsParser
 extends snippetsParser
 cruxFromId
 description Prints the full contents of files that are in the named group.
 javascript
  makeSnippet(file, compileSettings) {
   return file.scrollProgram.compileEmbeddedVersion(compileSettings) + file.viewSourceHtml
  }