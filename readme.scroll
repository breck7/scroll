title 📜 Scroll: Build your own public domain newspaper.
permalink index

paragraph
 <a href="https://github.com/publicdomaincompany/scroll/actions/workflows/didTheTestsPass.yml"><img src="https://github.com/publicdomaincompany/scroll/actions/workflows/didTheTestsPass.yml/badge.svg" style="width: 49%;"/></a> <a href="https://gitpod.io/#https://github.com/publicdomaincompany/scroll"><img style="width: 49%;" src="https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod"/></a>

title4 Screenshot:

image screenshot.png

title4 What makes Scroll different?

paragraph
 Scroll is different than other static publishing tools in
 3 ways.

paragraph
 1. Instead of a page per post, like a blog, a Scroll is a
 <strong>single page</strong>, like an old newspaper.

paragraph
 2. Instead of Markdown, Scroll uses the easily extendible <strong>Scrolldown</strong>,
 which makes it easy to combine languages to generate more
 creative content.

paragraph
 3. Instead of supporting licenses, Scroll is 100% focused on
 <strong>public domain sites</strong> and everything is
 designed with that assumption. We want to democratize the
 media industry.

title4 How do I get Scroll?

paragraph
 The instant way is to try Scroll in GitPod🔗gitpod.io/#https://github.com/publicdomaincompany/scroll.

paragraph
 Scroll is a command line app you install on your local machine. Scroll requires basic familiarity with the command line
 and NodeJs🔗nodejs.org >=14. If you do not have NodeJs on your machine, one
 way is to install n🔗github.com/tj/n which makes it easy to get NodeJs.

paragraph
 If you would like to use Scroll but aren't familiar with the command
 line, please open an issue and we may be able to help.

paragraph
 Once you have NodeJs installed you can install from GitHub or npm. Scroll is scroll-cli🔗www.npmjs.com/package/scroll-cli on npm.

paragraph
 You can install from GitHub:

code
 git clone https://github.com/publicdomaincompany/scroll
 cd scroll
 npm install -g .

paragraph
 Or you can install Scroll with npm by typing:

code
 npm install -g scroll-cli

title4 How do I use Scroll?

paragraph
 Scroll is used through the CLI. To see the options type:

code
 scroll help

title4 Where do I get help?

paragraph
 Post an issue in this GitHub or email <a href="mailto:scroll@publicdomaincompany.com">us</a>.

title4 What are some example sites using Scroll?

paragraph
 On beta launch day we have BreckYunits.com🔗breckyunits.com.

title4 How does Scroll work?

paragraph
 <em>A Scroll</em> is a single folder containing Scroll files.
 Scroll compiles those Scroll files into a static
 index.html page.

paragraph
 Scroll is also the name of the command line app that includes a
 simple fs watch app for live preview.

paragraph
 Scrolldown is the name of a Tree Language defined in this grammar🔗github.com/publicdomaincompany/scroll/blob/master/scrolldown.grammar.

title4 What does a typical project folder look like?

paragraph
 A typical Scroll project folder, excluding the html files
 built by Scroll, looks like this:

code
 yourDomainName.org/
  about.scroll
  publishedArticle.scroll
  anImageInTheArticle.png
  scroll.settings

paragraph
 The `scroll.settings` file let's Scroll know that
 a folder contains a Scroll.

paragraph
 When you "build" a Scroll site, you are simply generating
 the `index.html` and `article*.html` files in the site's folder.

paragraph
 With Scroll your site's public static files, generated html,
 and published article source Scroll files, are all in the
 public folder and checked into version control.
 
title4 How do I save drafts?

paragraph
 Put them in a separate folder outside your published folder.

title4 What File Formats does Scroll use?

paragraph
 Scroll articles are written as Scrolldown files with the file
 extension `scroll`. The grammar for Scrolldown is defined here🔗github.com/publicdomaincompany/scroll/blob/master/scrolldown.grammar.

title4 What languages is Scroll written in?

paragraph
 The Scroll app is written in plain Javascript and
 runs in Node.js. Scroll makes heavy use of Tree Languages. The CSS is
 written in Hakon🔗jtree.treenotation.org/designer/#standard%20hakon.
 The HTML is written in Components🔗jtree.treenotation.org/designer/#standard%20components.

paragraph
 TypeScript may be used in the future but Scroll may
 never get over 1kloc so that might not be necessary.

title4 How does versioning of articles work?

paragraph
 Scroll is designed for git. A single article is stored as
 a single file tracked by git.

title4 Why is Scroll a single page?

paragraph
 Scroll is designed to make it easier for <strong>syntopic
 reading</strong>. Being able to scan the page like a
 newspaper. This allows you to read at a higher level—to get "in the author's head"—
 moreso than reading one article at a time from beginning to end.

paragraph
 Additionally, making it easy to take the content with
 you, and transform it to better suit the reader, is
 also key to Scroll. Because Scroll is designed for public domain sites,
 we can optimize for the single page reading experience
 but people can have the full Scroll contents and render
 it however best suits them.

title4 Will you make design decisions for non-public domain sites?

paragraph
 No.

title4 Can I use Scroll for internal private sites not intended for publishing?

paragraph
 Yes!

title4 Will you support publishing snippets?

paragraph
 No. But will support making it easier for someone to do that in a fork
 or via plugins.

title4 Why don't you have only the newest articles above the fold?

paragraph
 This was originally a bug. But then it turns out to be a feature, as it
 gives older articles, which are often more important, more visibility.

title4 Is there a place I can play with the Scrolldown grammar and see how it compiles to HTML?

paragraph
 Yes. In the Tree Language Designer🔗jtree.treenotation.org/designer#url%20https%3A%2F%2Fscroll.publicdomaincompany.com%2Fscrolldown.grammar.

title4 How do I check for broken links?

paragraph
 Scroll does not check for broken links. For that, try linkinator🔗github.com/JustinBeckwith/linkinator.

code
 # npm install -g linkinator
 linkinator https://scroll.publicdomaincompany.com > brokenLinks.txt

title4 How do I check browser performance?

paragraph
 Scroll does not browser perf tools built in. For that, try lighthouse🔗github.com/GoogleChrome/lighthouse.

code
 # npm install -g lighthouse
 lighthouse https://scroll.publicdomaincompany.com --output-path scrollBrowserPerf.html; open scrollBrowserPerf.html

title4 How can I deploy my site?

paragraph
 If you have your own web server rsync is a fast and simple way to do it with a one liner.

code
 # deploy.sh
 # swap "/var/www/html" with the path to your website's location on your web server
 rsync -vr /[path/to/your/site]/* [yourdomain.com]:/var/www/html

paragraph
 Add a section🔗unix.stackexchange.com/questions/494483/specifying-an-identityfile-with-ssh like the one below to your ~.ssh/config to save your username and correct key pair.

code
 Host example.com
   User yourUserName
   IdentityFile ~/.ssh/example_id_rsa
   IdentitiesOnly yes

title4 How can I build a Scroll from a Twitter account?

paragraph
 Hopefully someone will build a package or site that does this. For now, on your Twitter settings, download an archive of your data and convert the tweets json into scroll files. Or to experiment faster use this tool🔗www.vicinitas.io/free-tools/download-user-tweets to grab some tweets as a TSV.

title4 What were some alternatives considered?

paragraph
 There was no publishing software that reads and writes Scrolldown yet
 so building Scroll was necessary. Jekyll🔗jekyllrb.com
 and Brecksblog🔗github.com/breck7/brecksblog were the two
 biggest inspirations.

title4 What has changed in recent versions?

paragraph
 View the releaseNotes🔗./releaseNotes.html.

title3 Contributing to Scroll Development

title4 How do I contribute?

paragraph
 File issues. Share your Scroll sites.

paragraph
 You can submit Pull Requests too. The shorter the better.

title4 How do I debug node.js performance?

code
 # cd your_slow_scroll
 # you may need to update the path below so it points to your scroll code
 node --cpu-prof --cpu-prof-name=scrollNodePerf.cpuprofile ~/scroll/scroll.js build
 # Now ➡️ open a new Chrome tab ➡️ open devtools ➡️ click Performance ➡️ click "Load Profile..." ➡️ select your scrollNodePerf.cpuprofile

title4 How do I format the Scrolldown Grammar file?

code
 # Assuming you've already done `jtree register YOUR_PATH/jtree/langs/grammar/grammar.grammar`
 jtree format scrolldown.grammar

